// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: packages/apps/Dialer/java/com/android/contacts/common/widget/select_phone_account_dialog_options.proto

package com.android.contacts.common.widget;

/**
 * <pre>
 * Parameters for SelectPhoneAccountDialogFragment
 * </pre>
 *
 * Protobuf type {@code com.android.contacts.common.widget.SelectPhoneAccountDialogOptions}
 */
public  final class SelectPhoneAccountDialogOptions extends
    com.google.protobuf.GeneratedMessageLite<
        SelectPhoneAccountDialogOptions, SelectPhoneAccountDialogOptions.Builder> implements
    // @@protoc_insertion_point(message_implements:com.android.contacts.common.widget.SelectPhoneAccountDialogOptions)
    SelectPhoneAccountDialogOptionsOrBuilder {
  private SelectPhoneAccountDialogOptions() {
    title_ = 0;
    canSetDefault_ = false;
    setDefaultLabel_ = 0;
    callId_ = "";
    entries_ = emptyProtobufList();
  }
  public interface EntryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * PhoneAccountHandle.getComponentName().flattenToString()
     * </pre>
     *
     * <code>optional string phone_account_handle_component_name = 1;</code>
     */
    boolean hasPhoneAccountHandleComponentName();
    /**
     * <pre>
     * PhoneAccountHandle.getComponentName().flattenToString()
     * </pre>
     *
     * <code>optional string phone_account_handle_component_name = 1;</code>
     */
    java.lang.String getPhoneAccountHandleComponentName();
    /**
     * <pre>
     * PhoneAccountHandle.getComponentName().flattenToString()
     * </pre>
     *
     * <code>optional string phone_account_handle_component_name = 1;</code>
     */
    com.google.protobuf.ByteString
        getPhoneAccountHandleComponentNameBytes();

    /**
     * <pre>
     * PhoneAccountHandle.getId()
     * </pre>
     *
     * <code>optional string phone_account_handle_id = 2;</code>
     */
    boolean hasPhoneAccountHandleId();
    /**
     * <pre>
     * PhoneAccountHandle.getId()
     * </pre>
     *
     * <code>optional string phone_account_handle_id = 2;</code>
     */
    java.lang.String getPhoneAccountHandleId();
    /**
     * <pre>
     * PhoneAccountHandle.getId()
     * </pre>
     *
     * <code>optional string phone_account_handle_id = 2;</code>
     */
    com.google.protobuf.ByteString
        getPhoneAccountHandleIdBytes();

    /**
     * <pre>
     * The hint to show under the phone account, for example showing the user
     * the account was selected frequently before.
     * </pre>
     *
     * <code>optional string hint = 3;</code>
     */
    boolean hasHint();
    /**
     * <pre>
     * The hint to show under the phone account, for example showing the user
     * the account was selected frequently before.
     * </pre>
     *
     * <code>optional string hint = 3;</code>
     */
    java.lang.String getHint();
    /**
     * <pre>
     * The hint to show under the phone account, for example showing the user
     * the account was selected frequently before.
     * </pre>
     *
     * <code>optional string hint = 3;</code>
     */
    com.google.protobuf.ByteString
        getHintBytes();

    /**
     * <pre>
     * Whether the account is actually selectable. Defaults to true. Sometimes
     * an account will be temporarily unusable, for example the user is already
     * in a call so the other SIM cannot be used. Hint should also be set to
     * inform the user why the account is unavailable.
     * </pre>
     *
     * <code>optional bool enabled = 4 [default = true];</code>
     */
    boolean hasEnabled();
    /**
     * <pre>
     * Whether the account is actually selectable. Defaults to true. Sometimes
     * an account will be temporarily unusable, for example the user is already
     * in a call so the other SIM cannot be used. Hint should also be set to
     * inform the user why the account is unavailable.
     * </pre>
     *
     * <code>optional bool enabled = 4 [default = true];</code>
     */
    boolean getEnabled();
  }
  /**
   * Protobuf type {@code com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry}
   */
  public  static final class Entry extends
      com.google.protobuf.GeneratedMessageLite<
          Entry, Entry.Builder> implements
      // @@protoc_insertion_point(message_implements:com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry)
      EntryOrBuilder {
    private Entry() {
      phoneAccountHandleComponentName_ = "";
      phoneAccountHandleId_ = "";
      hint_ = "";
      enabled_ = true;
    }
    private int bitField0_;
    public static final int PHONE_ACCOUNT_HANDLE_COMPONENT_NAME_FIELD_NUMBER = 1;
    private java.lang.String phoneAccountHandleComponentName_;
    /**
     * <pre>
     * PhoneAccountHandle.getComponentName().flattenToString()
     * </pre>
     *
     * <code>optional string phone_account_handle_component_name = 1;</code>
     */
    public boolean hasPhoneAccountHandleComponentName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * PhoneAccountHandle.getComponentName().flattenToString()
     * </pre>
     *
     * <code>optional string phone_account_handle_component_name = 1;</code>
     */
    public java.lang.String getPhoneAccountHandleComponentName() {
      return phoneAccountHandleComponentName_;
    }
    /**
     * <pre>
     * PhoneAccountHandle.getComponentName().flattenToString()
     * </pre>
     *
     * <code>optional string phone_account_handle_component_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPhoneAccountHandleComponentNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(phoneAccountHandleComponentName_);
    }
    /**
     * <pre>
     * PhoneAccountHandle.getComponentName().flattenToString()
     * </pre>
     *
     * <code>optional string phone_account_handle_component_name = 1;</code>
     */
    private void setPhoneAccountHandleComponentName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      phoneAccountHandleComponentName_ = value;
    }
    /**
     * <pre>
     * PhoneAccountHandle.getComponentName().flattenToString()
     * </pre>
     *
     * <code>optional string phone_account_handle_component_name = 1;</code>
     */
    private void clearPhoneAccountHandleComponentName() {
      bitField0_ = (bitField0_ & ~0x00000001);
      phoneAccountHandleComponentName_ = getDefaultInstance().getPhoneAccountHandleComponentName();
    }
    /**
     * <pre>
     * PhoneAccountHandle.getComponentName().flattenToString()
     * </pre>
     *
     * <code>optional string phone_account_handle_component_name = 1;</code>
     */
    private void setPhoneAccountHandleComponentNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      phoneAccountHandleComponentName_ = value.toStringUtf8();
    }

    public static final int PHONE_ACCOUNT_HANDLE_ID_FIELD_NUMBER = 2;
    private java.lang.String phoneAccountHandleId_;
    /**
     * <pre>
     * PhoneAccountHandle.getId()
     * </pre>
     *
     * <code>optional string phone_account_handle_id = 2;</code>
     */
    public boolean hasPhoneAccountHandleId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * PhoneAccountHandle.getId()
     * </pre>
     *
     * <code>optional string phone_account_handle_id = 2;</code>
     */
    public java.lang.String getPhoneAccountHandleId() {
      return phoneAccountHandleId_;
    }
    /**
     * <pre>
     * PhoneAccountHandle.getId()
     * </pre>
     *
     * <code>optional string phone_account_handle_id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPhoneAccountHandleIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(phoneAccountHandleId_);
    }
    /**
     * <pre>
     * PhoneAccountHandle.getId()
     * </pre>
     *
     * <code>optional string phone_account_handle_id = 2;</code>
     */
    private void setPhoneAccountHandleId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      phoneAccountHandleId_ = value;
    }
    /**
     * <pre>
     * PhoneAccountHandle.getId()
     * </pre>
     *
     * <code>optional string phone_account_handle_id = 2;</code>
     */
    private void clearPhoneAccountHandleId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      phoneAccountHandleId_ = getDefaultInstance().getPhoneAccountHandleId();
    }
    /**
     * <pre>
     * PhoneAccountHandle.getId()
     * </pre>
     *
     * <code>optional string phone_account_handle_id = 2;</code>
     */
    private void setPhoneAccountHandleIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      phoneAccountHandleId_ = value.toStringUtf8();
    }

    public static final int HINT_FIELD_NUMBER = 3;
    private java.lang.String hint_;
    /**
     * <pre>
     * The hint to show under the phone account, for example showing the user
     * the account was selected frequently before.
     * </pre>
     *
     * <code>optional string hint = 3;</code>
     */
    public boolean hasHint() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * The hint to show under the phone account, for example showing the user
     * the account was selected frequently before.
     * </pre>
     *
     * <code>optional string hint = 3;</code>
     */
    public java.lang.String getHint() {
      return hint_;
    }
    /**
     * <pre>
     * The hint to show under the phone account, for example showing the user
     * the account was selected frequently before.
     * </pre>
     *
     * <code>optional string hint = 3;</code>
     */
    public com.google.protobuf.ByteString
        getHintBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(hint_);
    }
    /**
     * <pre>
     * The hint to show under the phone account, for example showing the user
     * the account was selected frequently before.
     * </pre>
     *
     * <code>optional string hint = 3;</code>
     */
    private void setHint(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      hint_ = value;
    }
    /**
     * <pre>
     * The hint to show under the phone account, for example showing the user
     * the account was selected frequently before.
     * </pre>
     *
     * <code>optional string hint = 3;</code>
     */
    private void clearHint() {
      bitField0_ = (bitField0_ & ~0x00000004);
      hint_ = getDefaultInstance().getHint();
    }
    /**
     * <pre>
     * The hint to show under the phone account, for example showing the user
     * the account was selected frequently before.
     * </pre>
     *
     * <code>optional string hint = 3;</code>
     */
    private void setHintBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      hint_ = value.toStringUtf8();
    }

    public static final int ENABLED_FIELD_NUMBER = 4;
    private boolean enabled_;
    /**
     * <pre>
     * Whether the account is actually selectable. Defaults to true. Sometimes
     * an account will be temporarily unusable, for example the user is already
     * in a call so the other SIM cannot be used. Hint should also be set to
     * inform the user why the account is unavailable.
     * </pre>
     *
     * <code>optional bool enabled = 4 [default = true];</code>
     */
    public boolean hasEnabled() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * Whether the account is actually selectable. Defaults to true. Sometimes
     * an account will be temporarily unusable, for example the user is already
     * in a call so the other SIM cannot be used. Hint should also be set to
     * inform the user why the account is unavailable.
     * </pre>
     *
     * <code>optional bool enabled = 4 [default = true];</code>
     */
    public boolean getEnabled() {
      return enabled_;
    }
    /**
     * <pre>
     * Whether the account is actually selectable. Defaults to true. Sometimes
     * an account will be temporarily unusable, for example the user is already
     * in a call so the other SIM cannot be used. Hint should also be set to
     * inform the user why the account is unavailable.
     * </pre>
     *
     * <code>optional bool enabled = 4 [default = true];</code>
     */
    private void setEnabled(boolean value) {
      bitField0_ |= 0x00000008;
      enabled_ = value;
    }
    /**
     * <pre>
     * Whether the account is actually selectable. Defaults to true. Sometimes
     * an account will be temporarily unusable, for example the user is already
     * in a call so the other SIM cannot be used. Hint should also be set to
     * inform the user why the account is unavailable.
     * </pre>
     *
     * <code>optional bool enabled = 4 [default = true];</code>
     */
    private void clearEnabled() {
      bitField0_ = (bitField0_ & ~0x00000008);
      enabled_ = true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getPhoneAccountHandleComponentName());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getPhoneAccountHandleId());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeString(3, getHint());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, enabled_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getPhoneAccountHandleComponentName());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getPhoneAccountHandleId());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getHint());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, enabled_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry)
        com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.EntryOrBuilder {
      // Construct using com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * PhoneAccountHandle.getComponentName().flattenToString()
       * </pre>
       *
       * <code>optional string phone_account_handle_component_name = 1;</code>
       */
      public boolean hasPhoneAccountHandleComponentName() {
        return instance.hasPhoneAccountHandleComponentName();
      }
      /**
       * <pre>
       * PhoneAccountHandle.getComponentName().flattenToString()
       * </pre>
       *
       * <code>optional string phone_account_handle_component_name = 1;</code>
       */
      public java.lang.String getPhoneAccountHandleComponentName() {
        return instance.getPhoneAccountHandleComponentName();
      }
      /**
       * <pre>
       * PhoneAccountHandle.getComponentName().flattenToString()
       * </pre>
       *
       * <code>optional string phone_account_handle_component_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getPhoneAccountHandleComponentNameBytes() {
        return instance.getPhoneAccountHandleComponentNameBytes();
      }
      /**
       * <pre>
       * PhoneAccountHandle.getComponentName().flattenToString()
       * </pre>
       *
       * <code>optional string phone_account_handle_component_name = 1;</code>
       */
      public Builder setPhoneAccountHandleComponentName(
          java.lang.String value) {
        copyOnWrite();
        instance.setPhoneAccountHandleComponentName(value);
        return this;
      }
      /**
       * <pre>
       * PhoneAccountHandle.getComponentName().flattenToString()
       * </pre>
       *
       * <code>optional string phone_account_handle_component_name = 1;</code>
       */
      public Builder clearPhoneAccountHandleComponentName() {
        copyOnWrite();
        instance.clearPhoneAccountHandleComponentName();
        return this;
      }
      /**
       * <pre>
       * PhoneAccountHandle.getComponentName().flattenToString()
       * </pre>
       *
       * <code>optional string phone_account_handle_component_name = 1;</code>
       */
      public Builder setPhoneAccountHandleComponentNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPhoneAccountHandleComponentNameBytes(value);
        return this;
      }

      /**
       * <pre>
       * PhoneAccountHandle.getId()
       * </pre>
       *
       * <code>optional string phone_account_handle_id = 2;</code>
       */
      public boolean hasPhoneAccountHandleId() {
        return instance.hasPhoneAccountHandleId();
      }
      /**
       * <pre>
       * PhoneAccountHandle.getId()
       * </pre>
       *
       * <code>optional string phone_account_handle_id = 2;</code>
       */
      public java.lang.String getPhoneAccountHandleId() {
        return instance.getPhoneAccountHandleId();
      }
      /**
       * <pre>
       * PhoneAccountHandle.getId()
       * </pre>
       *
       * <code>optional string phone_account_handle_id = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPhoneAccountHandleIdBytes() {
        return instance.getPhoneAccountHandleIdBytes();
      }
      /**
       * <pre>
       * PhoneAccountHandle.getId()
       * </pre>
       *
       * <code>optional string phone_account_handle_id = 2;</code>
       */
      public Builder setPhoneAccountHandleId(
          java.lang.String value) {
        copyOnWrite();
        instance.setPhoneAccountHandleId(value);
        return this;
      }
      /**
       * <pre>
       * PhoneAccountHandle.getId()
       * </pre>
       *
       * <code>optional string phone_account_handle_id = 2;</code>
       */
      public Builder clearPhoneAccountHandleId() {
        copyOnWrite();
        instance.clearPhoneAccountHandleId();
        return this;
      }
      /**
       * <pre>
       * PhoneAccountHandle.getId()
       * </pre>
       *
       * <code>optional string phone_account_handle_id = 2;</code>
       */
      public Builder setPhoneAccountHandleIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPhoneAccountHandleIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * The hint to show under the phone account, for example showing the user
       * the account was selected frequently before.
       * </pre>
       *
       * <code>optional string hint = 3;</code>
       */
      public boolean hasHint() {
        return instance.hasHint();
      }
      /**
       * <pre>
       * The hint to show under the phone account, for example showing the user
       * the account was selected frequently before.
       * </pre>
       *
       * <code>optional string hint = 3;</code>
       */
      public java.lang.String getHint() {
        return instance.getHint();
      }
      /**
       * <pre>
       * The hint to show under the phone account, for example showing the user
       * the account was selected frequently before.
       * </pre>
       *
       * <code>optional string hint = 3;</code>
       */
      public com.google.protobuf.ByteString
          getHintBytes() {
        return instance.getHintBytes();
      }
      /**
       * <pre>
       * The hint to show under the phone account, for example showing the user
       * the account was selected frequently before.
       * </pre>
       *
       * <code>optional string hint = 3;</code>
       */
      public Builder setHint(
          java.lang.String value) {
        copyOnWrite();
        instance.setHint(value);
        return this;
      }
      /**
       * <pre>
       * The hint to show under the phone account, for example showing the user
       * the account was selected frequently before.
       * </pre>
       *
       * <code>optional string hint = 3;</code>
       */
      public Builder clearHint() {
        copyOnWrite();
        instance.clearHint();
        return this;
      }
      /**
       * <pre>
       * The hint to show under the phone account, for example showing the user
       * the account was selected frequently before.
       * </pre>
       *
       * <code>optional string hint = 3;</code>
       */
      public Builder setHintBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setHintBytes(value);
        return this;
      }

      /**
       * <pre>
       * Whether the account is actually selectable. Defaults to true. Sometimes
       * an account will be temporarily unusable, for example the user is already
       * in a call so the other SIM cannot be used. Hint should also be set to
       * inform the user why the account is unavailable.
       * </pre>
       *
       * <code>optional bool enabled = 4 [default = true];</code>
       */
      public boolean hasEnabled() {
        return instance.hasEnabled();
      }
      /**
       * <pre>
       * Whether the account is actually selectable. Defaults to true. Sometimes
       * an account will be temporarily unusable, for example the user is already
       * in a call so the other SIM cannot be used. Hint should also be set to
       * inform the user why the account is unavailable.
       * </pre>
       *
       * <code>optional bool enabled = 4 [default = true];</code>
       */
      public boolean getEnabled() {
        return instance.getEnabled();
      }
      /**
       * <pre>
       * Whether the account is actually selectable. Defaults to true. Sometimes
       * an account will be temporarily unusable, for example the user is already
       * in a call so the other SIM cannot be used. Hint should also be set to
       * inform the user why the account is unavailable.
       * </pre>
       *
       * <code>optional bool enabled = 4 [default = true];</code>
       */
      public Builder setEnabled(boolean value) {
        copyOnWrite();
        instance.setEnabled(value);
        return this;
      }
      /**
       * <pre>
       * Whether the account is actually selectable. Defaults to true. Sometimes
       * an account will be temporarily unusable, for example the user is already
       * in a call so the other SIM cannot be used. Hint should also be set to
       * inform the user why the account is unavailable.
       * </pre>
       *
       * <code>optional bool enabled = 4 [default = true];</code>
       */
      public Builder clearEnabled() {
        copyOnWrite();
        instance.clearEnabled();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry other = (com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry) arg1;
          phoneAccountHandleComponentName_ = visitor.visitString(
              hasPhoneAccountHandleComponentName(), phoneAccountHandleComponentName_,
              other.hasPhoneAccountHandleComponentName(), other.phoneAccountHandleComponentName_);
          phoneAccountHandleId_ = visitor.visitString(
              hasPhoneAccountHandleId(), phoneAccountHandleId_,
              other.hasPhoneAccountHandleId(), other.phoneAccountHandleId_);
          hint_ = visitor.visitString(
              hasHint(), hint_,
              other.hasHint(), other.hint_);
          enabled_ = visitor.visitBoolean(
              hasEnabled(), enabled_,
              other.hasEnabled(), other.enabled_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  phoneAccountHandleComponentName_ = s;
                  break;
                }
                case 18: {
                  String s = input.readString();
                  bitField0_ |= 0x00000002;
                  phoneAccountHandleId_ = s;
                  break;
                }
                case 26: {
                  String s = input.readString();
                  bitField0_ |= 0x00000004;
                  hint_ = s;
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000008;
                  enabled_ = input.readBool();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry)
    private static final com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Entry();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Entry> PARSER;

    public static com.google.protobuf.Parser<Entry> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  private int bitField0_;
  public static final int TITLE_FIELD_NUMBER = 1;
  private int title_;
  /**
   * <pre>
   * The resource ID for the title. Defaults to
   * R.string.select_account_dialog_title
   * </pre>
   *
   * <code>optional int32 title = 1;</code>
   */
  public boolean hasTitle() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <pre>
   * The resource ID for the title. Defaults to
   * R.string.select_account_dialog_title
   * </pre>
   *
   * <code>optional int32 title = 1;</code>
   */
  public int getTitle() {
    return title_;
  }
  /**
   * <pre>
   * The resource ID for the title. Defaults to
   * R.string.select_account_dialog_title
   * </pre>
   *
   * <code>optional int32 title = 1;</code>
   */
  private void setTitle(int value) {
    bitField0_ |= 0x00000001;
    title_ = value;
  }
  /**
   * <pre>
   * The resource ID for the title. Defaults to
   * R.string.select_account_dialog_title
   * </pre>
   *
   * <code>optional int32 title = 1;</code>
   */
  private void clearTitle() {
    bitField0_ = (bitField0_ & ~0x00000001);
    title_ = 0;
  }

  public static final int CAN_SET_DEFAULT_FIELD_NUMBER = 2;
  private boolean canSetDefault_;
  /**
   * <pre>
   * Whether the dialog should include a "set as default" checkbox. Defaults to
   * false
   * </pre>
   *
   * <code>optional bool can_set_default = 2;</code>
   */
  public boolean hasCanSetDefault() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <pre>
   * Whether the dialog should include a "set as default" checkbox. Defaults to
   * false
   * </pre>
   *
   * <code>optional bool can_set_default = 2;</code>
   */
  public boolean getCanSetDefault() {
    return canSetDefault_;
  }
  /**
   * <pre>
   * Whether the dialog should include a "set as default" checkbox. Defaults to
   * false
   * </pre>
   *
   * <code>optional bool can_set_default = 2;</code>
   */
  private void setCanSetDefault(boolean value) {
    bitField0_ |= 0x00000002;
    canSetDefault_ = value;
  }
  /**
   * <pre>
   * Whether the dialog should include a "set as default" checkbox. Defaults to
   * false
   * </pre>
   *
   * <code>optional bool can_set_default = 2;</code>
   */
  private void clearCanSetDefault() {
    bitField0_ = (bitField0_ & ~0x00000002);
    canSetDefault_ = false;
  }

  public static final int SET_DEFAULT_LABEL_FIELD_NUMBER = 3;
  private int setDefaultLabel_;
  /**
   * <pre>
   * The label on the "set as default" checkbox. Defaults
   * R.string.set_default_account
   * </pre>
   *
   * <code>optional int32 set_default_label = 3;</code>
   */
  public boolean hasSetDefaultLabel() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <pre>
   * The label on the "set as default" checkbox. Defaults
   * R.string.set_default_account
   * </pre>
   *
   * <code>optional int32 set_default_label = 3;</code>
   */
  public int getSetDefaultLabel() {
    return setDefaultLabel_;
  }
  /**
   * <pre>
   * The label on the "set as default" checkbox. Defaults
   * R.string.set_default_account
   * </pre>
   *
   * <code>optional int32 set_default_label = 3;</code>
   */
  private void setSetDefaultLabel(int value) {
    bitField0_ |= 0x00000004;
    setDefaultLabel_ = value;
  }
  /**
   * <pre>
   * The label on the "set as default" checkbox. Defaults
   * R.string.set_default_account
   * </pre>
   *
   * <code>optional int32 set_default_label = 3;</code>
   */
  private void clearSetDefaultLabel() {
    bitField0_ = (bitField0_ & ~0x00000004);
    setDefaultLabel_ = 0;
  }

  public static final int CALL_ID_FIELD_NUMBER = 4;
  private java.lang.String callId_;
  /**
   * <pre>
   * The call ID to pass back to the callback
   * </pre>
   *
   * <code>optional string call_id = 4;</code>
   */
  public boolean hasCallId() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <pre>
   * The call ID to pass back to the callback
   * </pre>
   *
   * <code>optional string call_id = 4;</code>
   */
  public java.lang.String getCallId() {
    return callId_;
  }
  /**
   * <pre>
   * The call ID to pass back to the callback
   * </pre>
   *
   * <code>optional string call_id = 4;</code>
   */
  public com.google.protobuf.ByteString
      getCallIdBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(callId_);
  }
  /**
   * <pre>
   * The call ID to pass back to the callback
   * </pre>
   *
   * <code>optional string call_id = 4;</code>
   */
  private void setCallId(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
    callId_ = value;
  }
  /**
   * <pre>
   * The call ID to pass back to the callback
   * </pre>
   *
   * <code>optional string call_id = 4;</code>
   */
  private void clearCallId() {
    bitField0_ = (bitField0_ & ~0x00000008);
    callId_ = getDefaultInstance().getCallId();
  }
  /**
   * <pre>
   * The call ID to pass back to the callback
   * </pre>
   *
   * <code>optional string call_id = 4;</code>
   */
  private void setCallIdBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
    callId_ = value.toStringUtf8();
  }

  public static final int ENTRIES_FIELD_NUMBER = 5;
  private com.google.protobuf.Internal.ProtobufList<com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry> entries_;
  /**
   * <pre>
   * Phone accounts to show in the dialog
   * </pre>
   *
   * <code>repeated .com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry entries = 5;</code>
   */
  public java.util.List<com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry> getEntriesList() {
    return entries_;
  }
  /**
   * <pre>
   * Phone accounts to show in the dialog
   * </pre>
   *
   * <code>repeated .com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry entries = 5;</code>
   */
  public java.util.List<? extends com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.EntryOrBuilder> 
      getEntriesOrBuilderList() {
    return entries_;
  }
  /**
   * <pre>
   * Phone accounts to show in the dialog
   * </pre>
   *
   * <code>repeated .com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry entries = 5;</code>
   */
  public int getEntriesCount() {
    return entries_.size();
  }
  /**
   * <pre>
   * Phone accounts to show in the dialog
   * </pre>
   *
   * <code>repeated .com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry entries = 5;</code>
   */
  public com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry getEntries(int index) {
    return entries_.get(index);
  }
  /**
   * <pre>
   * Phone accounts to show in the dialog
   * </pre>
   *
   * <code>repeated .com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry entries = 5;</code>
   */
  public com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.EntryOrBuilder getEntriesOrBuilder(
      int index) {
    return entries_.get(index);
  }
  private void ensureEntriesIsMutable() {
    if (!entries_.isModifiable()) {
      entries_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(entries_);
     }
  }

  /**
   * <pre>
   * Phone accounts to show in the dialog
   * </pre>
   *
   * <code>repeated .com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry entries = 5;</code>
   */
  private void setEntries(
      int index, com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureEntriesIsMutable();
    entries_.set(index, value);
  }
  /**
   * <pre>
   * Phone accounts to show in the dialog
   * </pre>
   *
   * <code>repeated .com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry entries = 5;</code>
   */
  private void setEntries(
      int index, com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry.Builder builderForValue) {
    ensureEntriesIsMutable();
    entries_.set(index, builderForValue.build());
  }
  /**
   * <pre>
   * Phone accounts to show in the dialog
   * </pre>
   *
   * <code>repeated .com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry entries = 5;</code>
   */
  private void addEntries(com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureEntriesIsMutable();
    entries_.add(value);
  }
  /**
   * <pre>
   * Phone accounts to show in the dialog
   * </pre>
   *
   * <code>repeated .com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry entries = 5;</code>
   */
  private void addEntries(
      int index, com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureEntriesIsMutable();
    entries_.add(index, value);
  }
  /**
   * <pre>
   * Phone accounts to show in the dialog
   * </pre>
   *
   * <code>repeated .com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry entries = 5;</code>
   */
  private void addEntries(
      com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry.Builder builderForValue) {
    ensureEntriesIsMutable();
    entries_.add(builderForValue.build());
  }
  /**
   * <pre>
   * Phone accounts to show in the dialog
   * </pre>
   *
   * <code>repeated .com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry entries = 5;</code>
   */
  private void addEntries(
      int index, com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry.Builder builderForValue) {
    ensureEntriesIsMutable();
    entries_.add(index, builderForValue.build());
  }
  /**
   * <pre>
   * Phone accounts to show in the dialog
   * </pre>
   *
   * <code>repeated .com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry entries = 5;</code>
   */
  private void addAllEntries(
      java.lang.Iterable<? extends com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry> values) {
    ensureEntriesIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, entries_);
  }
  /**
   * <pre>
   * Phone accounts to show in the dialog
   * </pre>
   *
   * <code>repeated .com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry entries = 5;</code>
   */
  private void clearEntries() {
    entries_ = emptyProtobufList();
  }
  /**
   * <pre>
   * Phone accounts to show in the dialog
   * </pre>
   *
   * <code>repeated .com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry entries = 5;</code>
   */
  private void removeEntries(int index) {
    ensureEntriesIsMutable();
    entries_.remove(index);
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeInt32(1, title_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeBool(2, canSetDefault_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeInt32(3, setDefaultLabel_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeString(4, getCallId());
    }
    for (int i = 0; i < entries_.size(); i++) {
      output.writeMessage(5, entries_.get(i));
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, title_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(2, canSetDefault_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, setDefaultLabel_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(4, getCallId());
    }
    for (int i = 0; i < entries_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, entries_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  public static com.android.contacts.common.widget.SelectPhoneAccountDialogOptions parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.android.contacts.common.widget.SelectPhoneAccountDialogOptions parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.android.contacts.common.widget.SelectPhoneAccountDialogOptions parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.android.contacts.common.widget.SelectPhoneAccountDialogOptions parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.android.contacts.common.widget.SelectPhoneAccountDialogOptions parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.android.contacts.common.widget.SelectPhoneAccountDialogOptions parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.android.contacts.common.widget.SelectPhoneAccountDialogOptions parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.android.contacts.common.widget.SelectPhoneAccountDialogOptions parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.android.contacts.common.widget.SelectPhoneAccountDialogOptions parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.android.contacts.common.widget.SelectPhoneAccountDialogOptions parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.android.contacts.common.widget.SelectPhoneAccountDialogOptions prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * Parameters for SelectPhoneAccountDialogFragment
   * </pre>
   *
   * Protobuf type {@code com.android.contacts.common.widget.SelectPhoneAccountDialogOptions}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.android.contacts.common.widget.SelectPhoneAccountDialogOptions, Builder> implements
      // @@protoc_insertion_point(builder_implements:com.android.contacts.common.widget.SelectPhoneAccountDialogOptions)
      com.android.contacts.common.widget.SelectPhoneAccountDialogOptionsOrBuilder {
    // Construct using com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The resource ID for the title. Defaults to
     * R.string.select_account_dialog_title
     * </pre>
     *
     * <code>optional int32 title = 1;</code>
     */
    public boolean hasTitle() {
      return instance.hasTitle();
    }
    /**
     * <pre>
     * The resource ID for the title. Defaults to
     * R.string.select_account_dialog_title
     * </pre>
     *
     * <code>optional int32 title = 1;</code>
     */
    public int getTitle() {
      return instance.getTitle();
    }
    /**
     * <pre>
     * The resource ID for the title. Defaults to
     * R.string.select_account_dialog_title
     * </pre>
     *
     * <code>optional int32 title = 1;</code>
     */
    public Builder setTitle(int value) {
      copyOnWrite();
      instance.setTitle(value);
      return this;
    }
    /**
     * <pre>
     * The resource ID for the title. Defaults to
     * R.string.select_account_dialog_title
     * </pre>
     *
     * <code>optional int32 title = 1;</code>
     */
    public Builder clearTitle() {
      copyOnWrite();
      instance.clearTitle();
      return this;
    }

    /**
     * <pre>
     * Whether the dialog should include a "set as default" checkbox. Defaults to
     * false
     * </pre>
     *
     * <code>optional bool can_set_default = 2;</code>
     */
    public boolean hasCanSetDefault() {
      return instance.hasCanSetDefault();
    }
    /**
     * <pre>
     * Whether the dialog should include a "set as default" checkbox. Defaults to
     * false
     * </pre>
     *
     * <code>optional bool can_set_default = 2;</code>
     */
    public boolean getCanSetDefault() {
      return instance.getCanSetDefault();
    }
    /**
     * <pre>
     * Whether the dialog should include a "set as default" checkbox. Defaults to
     * false
     * </pre>
     *
     * <code>optional bool can_set_default = 2;</code>
     */
    public Builder setCanSetDefault(boolean value) {
      copyOnWrite();
      instance.setCanSetDefault(value);
      return this;
    }
    /**
     * <pre>
     * Whether the dialog should include a "set as default" checkbox. Defaults to
     * false
     * </pre>
     *
     * <code>optional bool can_set_default = 2;</code>
     */
    public Builder clearCanSetDefault() {
      copyOnWrite();
      instance.clearCanSetDefault();
      return this;
    }

    /**
     * <pre>
     * The label on the "set as default" checkbox. Defaults
     * R.string.set_default_account
     * </pre>
     *
     * <code>optional int32 set_default_label = 3;</code>
     */
    public boolean hasSetDefaultLabel() {
      return instance.hasSetDefaultLabel();
    }
    /**
     * <pre>
     * The label on the "set as default" checkbox. Defaults
     * R.string.set_default_account
     * </pre>
     *
     * <code>optional int32 set_default_label = 3;</code>
     */
    public int getSetDefaultLabel() {
      return instance.getSetDefaultLabel();
    }
    /**
     * <pre>
     * The label on the "set as default" checkbox. Defaults
     * R.string.set_default_account
     * </pre>
     *
     * <code>optional int32 set_default_label = 3;</code>
     */
    public Builder setSetDefaultLabel(int value) {
      copyOnWrite();
      instance.setSetDefaultLabel(value);
      return this;
    }
    /**
     * <pre>
     * The label on the "set as default" checkbox. Defaults
     * R.string.set_default_account
     * </pre>
     *
     * <code>optional int32 set_default_label = 3;</code>
     */
    public Builder clearSetDefaultLabel() {
      copyOnWrite();
      instance.clearSetDefaultLabel();
      return this;
    }

    /**
     * <pre>
     * The call ID to pass back to the callback
     * </pre>
     *
     * <code>optional string call_id = 4;</code>
     */
    public boolean hasCallId() {
      return instance.hasCallId();
    }
    /**
     * <pre>
     * The call ID to pass back to the callback
     * </pre>
     *
     * <code>optional string call_id = 4;</code>
     */
    public java.lang.String getCallId() {
      return instance.getCallId();
    }
    /**
     * <pre>
     * The call ID to pass back to the callback
     * </pre>
     *
     * <code>optional string call_id = 4;</code>
     */
    public com.google.protobuf.ByteString
        getCallIdBytes() {
      return instance.getCallIdBytes();
    }
    /**
     * <pre>
     * The call ID to pass back to the callback
     * </pre>
     *
     * <code>optional string call_id = 4;</code>
     */
    public Builder setCallId(
        java.lang.String value) {
      copyOnWrite();
      instance.setCallId(value);
      return this;
    }
    /**
     * <pre>
     * The call ID to pass back to the callback
     * </pre>
     *
     * <code>optional string call_id = 4;</code>
     */
    public Builder clearCallId() {
      copyOnWrite();
      instance.clearCallId();
      return this;
    }
    /**
     * <pre>
     * The call ID to pass back to the callback
     * </pre>
     *
     * <code>optional string call_id = 4;</code>
     */
    public Builder setCallIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setCallIdBytes(value);
      return this;
    }

    /**
     * <pre>
     * Phone accounts to show in the dialog
     * </pre>
     *
     * <code>repeated .com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry entries = 5;</code>
     */
    public java.util.List<com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry> getEntriesList() {
      return java.util.Collections.unmodifiableList(
          instance.getEntriesList());
    }
    /**
     * <pre>
     * Phone accounts to show in the dialog
     * </pre>
     *
     * <code>repeated .com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry entries = 5;</code>
     */
    public int getEntriesCount() {
      return instance.getEntriesCount();
    }/**
     * <pre>
     * Phone accounts to show in the dialog
     * </pre>
     *
     * <code>repeated .com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry entries = 5;</code>
     */
    public com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry getEntries(int index) {
      return instance.getEntries(index);
    }
    /**
     * <pre>
     * Phone accounts to show in the dialog
     * </pre>
     *
     * <code>repeated .com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry entries = 5;</code>
     */
    public Builder setEntries(
        int index, com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry value) {
      copyOnWrite();
      instance.setEntries(index, value);
      return this;
    }
    /**
     * <pre>
     * Phone accounts to show in the dialog
     * </pre>
     *
     * <code>repeated .com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry entries = 5;</code>
     */
    public Builder setEntries(
        int index, com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry.Builder builderForValue) {
      copyOnWrite();
      instance.setEntries(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * Phone accounts to show in the dialog
     * </pre>
     *
     * <code>repeated .com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry entries = 5;</code>
     */
    public Builder addEntries(com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry value) {
      copyOnWrite();
      instance.addEntries(value);
      return this;
    }
    /**
     * <pre>
     * Phone accounts to show in the dialog
     * </pre>
     *
     * <code>repeated .com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry entries = 5;</code>
     */
    public Builder addEntries(
        int index, com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry value) {
      copyOnWrite();
      instance.addEntries(index, value);
      return this;
    }
    /**
     * <pre>
     * Phone accounts to show in the dialog
     * </pre>
     *
     * <code>repeated .com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry entries = 5;</code>
     */
    public Builder addEntries(
        com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry.Builder builderForValue) {
      copyOnWrite();
      instance.addEntries(builderForValue);
      return this;
    }
    /**
     * <pre>
     * Phone accounts to show in the dialog
     * </pre>
     *
     * <code>repeated .com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry entries = 5;</code>
     */
    public Builder addEntries(
        int index, com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry.Builder builderForValue) {
      copyOnWrite();
      instance.addEntries(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * Phone accounts to show in the dialog
     * </pre>
     *
     * <code>repeated .com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry entries = 5;</code>
     */
    public Builder addAllEntries(
        java.lang.Iterable<? extends com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry> values) {
      copyOnWrite();
      instance.addAllEntries(values);
      return this;
    }
    /**
     * <pre>
     * Phone accounts to show in the dialog
     * </pre>
     *
     * <code>repeated .com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry entries = 5;</code>
     */
    public Builder clearEntries() {
      copyOnWrite();
      instance.clearEntries();
      return this;
    }
    /**
     * <pre>
     * Phone accounts to show in the dialog
     * </pre>
     *
     * <code>repeated .com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry entries = 5;</code>
     */
    public Builder removeEntries(int index) {
      copyOnWrite();
      instance.removeEntries(index);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:com.android.contacts.common.widget.SelectPhoneAccountDialogOptions)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.android.contacts.common.widget.SelectPhoneAccountDialogOptions();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        entries_.makeImmutable();
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        com.android.contacts.common.widget.SelectPhoneAccountDialogOptions other = (com.android.contacts.common.widget.SelectPhoneAccountDialogOptions) arg1;
        title_ = visitor.visitInt(
            hasTitle(), title_,
            other.hasTitle(), other.title_);
        canSetDefault_ = visitor.visitBoolean(
            hasCanSetDefault(), canSetDefault_,
            other.hasCanSetDefault(), other.canSetDefault_);
        setDefaultLabel_ = visitor.visitInt(
            hasSetDefaultLabel(), setDefaultLabel_,
            other.hasSetDefaultLabel(), other.setDefaultLabel_);
        callId_ = visitor.visitString(
            hasCallId(), callId_,
            other.hasCallId(), other.callId_);
        entries_= visitor.visitList(entries_, other.entries_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(tag, input)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                title_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                canSetDefault_ = input.readBool();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                setDefaultLabel_ = input.readInt32();
                break;
              }
              case 34: {
                String s = input.readString();
                bitField0_ |= 0x00000008;
                callId_ = s;
                break;
              }
              case 42: {
                if (!entries_.isModifiable()) {
                  entries_ =
                      com.google.protobuf.GeneratedMessageLite.mutableCopy(entries_);
                }
                entries_.add(
                    input.readMessage(com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.Entry.parser(), extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (com.android.contacts.common.widget.SelectPhoneAccountDialogOptions.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:com.android.contacts.common.widget.SelectPhoneAccountDialogOptions)
  private static final com.android.contacts.common.widget.SelectPhoneAccountDialogOptions DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new SelectPhoneAccountDialogOptions();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static com.android.contacts.common.widget.SelectPhoneAccountDialogOptions getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<SelectPhoneAccountDialogOptions> PARSER;

  public static com.google.protobuf.Parser<SelectPhoneAccountDialogOptions> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

