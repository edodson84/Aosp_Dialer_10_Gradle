// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: packages/apps/Dialer/java/com/android/dialer/historyitemactions/history_item_action_module_info.proto

package com.fissy.dialer.historyitemactions;

public interface HistoryItemActionModuleInfoOrBuilder extends
    // @@protoc_insertion_point(interface_extends:com.fissy.dialer.historyitemactions.HistoryItemActionModuleInfo)
    com.google.protobuf.MessageLiteOrBuilder {

  /**
   * <pre>
   * The dialer-normalized version of a phone number.
   * See DialerPhoneNumber.normalized_number.
   * </pre>
   *
   * <code>optional string normalized_number = 1;</code>
   */
  boolean hasNormalizedNumber();
  /**
   * <pre>
   * The dialer-normalized version of a phone number.
   * See DialerPhoneNumber.normalized_number.
   * </pre>
   *
   * <code>optional string normalized_number = 1;</code>
   */
  java.lang.String getNormalizedNumber();
  /**
   * <pre>
   * The dialer-normalized version of a phone number.
   * See DialerPhoneNumber.normalized_number.
   * </pre>
   *
   * <code>optional string normalized_number = 1;</code>
   */
  com.google.protobuf.ByteString
      getNormalizedNumberBytes();

  /**
   * <pre>
   * The ISO 3166-1 two letters country code of the number.
   * </pre>
   *
   * <code>optional string country_iso = 2;</code>
   */
  boolean hasCountryIso();
  /**
   * <pre>
   * The ISO 3166-1 two letters country code of the number.
   * </pre>
   *
   * <code>optional string country_iso = 2;</code>
   */
  java.lang.String getCountryIso();
  /**
   * <pre>
   * The ISO 3166-1 two letters country code of the number.
   * </pre>
   *
   * <code>optional string country_iso = 2;</code>
   */
  com.google.protobuf.ByteString
      getCountryIsoBytes();

  /**
   * <pre>
   * The name associated with the number.
   * </pre>
   *
   * <code>optional string name = 3;</code>
   */
  boolean hasName();
  /**
   * <pre>
   * The name associated with the number.
   * </pre>
   *
   * <code>optional string name = 3;</code>
   */
  java.lang.String getName();
  /**
   * <pre>
   * The name associated with the number.
   * </pre>
   *
   * <code>optional string name = 3;</code>
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * The type of the call.
   * See android.provider.CallLog.Calls.TYPE.
   * </pre>
   *
   * <code>optional int32 call_type = 4;</code>
   */
  boolean hasCallType();
  /**
   * <pre>
   * The type of the call.
   * See android.provider.CallLog.Calls.TYPE.
   * </pre>
   *
   * <code>optional int32 call_type = 4;</code>
   */
  int getCallType();

  /**
   * <pre>
   * Bit-mask describing features of the call.
   * See android.provider.CallLog.Calls.FEATURES.
   * </pre>
   *
   * <code>optional int32 features = 5;</code>
   */
  boolean hasFeatures();
  /**
   * <pre>
   * Bit-mask describing features of the call.
   * See android.provider.CallLog.Calls.FEATURES.
   * </pre>
   *
   * <code>optional int32 features = 5;</code>
   */
  int getFeatures();

  /**
   * <pre>
   * The Contacts Provider lookup URI for the contact associated with the
   * number.
   * </pre>
   *
   * <code>optional string lookup_uri = 6;</code>
   */
  boolean hasLookupUri();
  /**
   * <pre>
   * The Contacts Provider lookup URI for the contact associated with the
   * number.
   * </pre>
   *
   * <code>optional string lookup_uri = 6;</code>
   */
  java.lang.String getLookupUri();
  /**
   * <pre>
   * The Contacts Provider lookup URI for the contact associated with the
   * number.
   * </pre>
   *
   * <code>optional string lookup_uri = 6;</code>
   */
  com.google.protobuf.ByteString
      getLookupUriBytes();

  /**
   * <pre>
   * The component name of the account used to place or receive the call.
   * See android.provider.CallLog.Calls.PHONE_ACCOUNT_COMPONENT_NAME.
   * </pre>
   *
   * <code>optional string phone_account_component_name = 7;</code>
   */
  boolean hasPhoneAccountComponentName();
  /**
   * <pre>
   * The component name of the account used to place or receive the call.
   * See android.provider.CallLog.Calls.PHONE_ACCOUNT_COMPONENT_NAME.
   * </pre>
   *
   * <code>optional string phone_account_component_name = 7;</code>
   */
  java.lang.String getPhoneAccountComponentName();
  /**
   * <pre>
   * The component name of the account used to place or receive the call.
   * See android.provider.CallLog.Calls.PHONE_ACCOUNT_COMPONENT_NAME.
   * </pre>
   *
   * <code>optional string phone_account_component_name = 7;</code>
   */
  com.google.protobuf.ByteString
      getPhoneAccountComponentNameBytes();

  /**
   * <pre>
   * Whether the number can be reported as invalid through People API
   * </pre>
   *
   * <code>optional bool can_report_as_invalid_number = 8;</code>
   */
  boolean hasCanReportAsInvalidNumber();
  /**
   * <pre>
   * Whether the number can be reported as invalid through People API
   * </pre>
   *
   * <code>optional bool can_report_as_invalid_number = 8;</code>
   */
  boolean getCanReportAsInvalidNumber();

  /**
   * <pre>
   * Whether assisted dialing is supported.
   * </pre>
   *
   * <code>optional bool can_support_assisted_dialing = 9;</code>
   */
  boolean hasCanSupportAssistedDialing();
  /**
   * <pre>
   * Whether assisted dialing is supported.
   * </pre>
   *
   * <code>optional bool can_support_assisted_dialing = 9;</code>
   */
  boolean getCanSupportAssistedDialing();

  /**
   * <pre>
   * Whether carrier video call is supported.
   * </pre>
   *
   * <code>optional bool can_support_carrier_video_call = 10;</code>
   */
  boolean hasCanSupportCarrierVideoCall();
  /**
   * <pre>
   * Whether carrier video call is supported.
   * </pre>
   *
   * <code>optional bool can_support_carrier_video_call = 10;</code>
   */
  boolean getCanSupportCarrierVideoCall();

  /**
   * <pre>
   * Whether the number is blocked.
   * </pre>
   *
   * <code>optional bool is_blocked = 11;</code>
   */
  boolean hasIsBlocked();
  /**
   * <pre>
   * Whether the number is blocked.
   * </pre>
   *
   * <code>optional bool is_blocked = 11;</code>
   */
  boolean getIsBlocked();

  /**
   * <pre>
   * Whether the number is spam.
   * </pre>
   *
   * <code>optional bool is_spam = 12;</code>
   */
  boolean hasIsSpam();
  /**
   * <pre>
   * Whether the number is spam.
   * </pre>
   *
   * <code>optional bool is_spam = 12;</code>
   */
  boolean getIsSpam();

  /**
   * <pre>
   * Whether the call is to the voicemail inbox.
   * </pre>
   *
   * <code>optional bool is_voicemail_call = 13;</code>
   */
  boolean hasIsVoicemailCall();
  /**
   * <pre>
   * Whether the call is to the voicemail inbox.
   * </pre>
   *
   * <code>optional bool is_voicemail_call = 13;</code>
   */
  boolean getIsVoicemailCall();

  /**
   * <pre>
   * The source of the contact if there is one associated with the number.
   * </pre>
   *
   * <code>optional .com.fissy.dialer.logging.ContactSource.Type contact_source = 14;</code>
   */
  boolean hasContactSource();
  /**
   * <pre>
   * The source of the contact if there is one associated with the number.
   * </pre>
   *
   * <code>optional .com.fissy.dialer.logging.ContactSource.Type contact_source = 14;</code>
   */
  com.fissy.dialer.logging.ContactSource.Type getContactSource();

  /**
   * <code>optional .com.fissy.dialer.historyitemactions.HistoryItemActionModuleInfo.Host host = 15;</code>
   */
  boolean hasHost();
  /**
   * <code>optional .com.fissy.dialer.historyitemactions.HistoryItemActionModuleInfo.Host host = 15;</code>
   */
  com.fissy.dialer.historyitemactions.HistoryItemActionModuleInfo.Host getHost();

  /**
   * <pre>
   * Whether the number is an emergency number.
   * </pre>
   *
   * <code>optional bool is_emergency_number = 16;</code>
   */
  boolean hasIsEmergencyNumber();
  /**
   * <pre>
   * Whether the number is an emergency number.
   * </pre>
   *
   * <code>optional bool is_emergency_number = 16;</code>
   */
  boolean getIsEmergencyNumber();
}
