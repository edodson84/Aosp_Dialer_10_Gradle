// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: packages/apps/Dialer/java/com/android/dialer/rtt/rtt_transcript.proto

package com.fissy.dialer.rtt;

/**
 * <pre>
 * RTT transcript which contains chat history of a RTT call.
 * </pre>
 *
 * Protobuf type {@code com.fissy.dialer.rtt.RttTranscript}
 */
public  final class RttTranscript extends
    com.google.protobuf.GeneratedMessageLite<
        RttTranscript, RttTranscript.Builder> implements
    // @@protoc_insertion_point(message_implements:com.fissy.dialer.rtt.RttTranscript)
    RttTranscriptOrBuilder {
  private RttTranscript() {
    id_ = "";
    number_ = "";
    timestamp_ = 0L;
    messages_ = emptyProtobufList();
  }
  private int bitField0_;
  public static final int ID_FIELD_NUMBER = 1;
  private java.lang.String id_;
  /**
   * <pre>
   * Unique ID used for database.
   * </pre>
   *
   * <code>optional string id = 1;</code>
   */
  public boolean hasId() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <pre>
   * Unique ID used for database.
   * </pre>
   *
   * <code>optional string id = 1;</code>
   */
  public java.lang.String getId() {
    return id_;
  }
  /**
   * <pre>
   * Unique ID used for database.
   * </pre>
   *
   * <code>optional string id = 1;</code>
   */
  public com.google.protobuf.ByteString
      getIdBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(id_);
  }
  /**
   * <pre>
   * Unique ID used for database.
   * </pre>
   *
   * <code>optional string id = 1;</code>
   */
  private void setId(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
    id_ = value;
  }
  /**
   * <pre>
   * Unique ID used for database.
   * </pre>
   *
   * <code>optional string id = 1;</code>
   */
  private void clearId() {
    bitField0_ = (bitField0_ & ~0x00000001);
    id_ = getDefaultInstance().getId();
  }
  /**
   * <pre>
   * Unique ID used for database.
   * </pre>
   *
   * <code>optional string id = 1;</code>
   */
  private void setIdBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
    id_ = value.toStringUtf8();
  }

  public static final int NUMBER_FIELD_NUMBER = 2;
  private java.lang.String number_;
  /**
   * <pre>
   * Phone number of RTT call.
   * </pre>
   *
   * <code>optional string number = 2;</code>
   */
  public boolean hasNumber() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <pre>
   * Phone number of RTT call.
   * </pre>
   *
   * <code>optional string number = 2;</code>
   */
  public java.lang.String getNumber() {
    return number_;
  }
  /**
   * <pre>
   * Phone number of RTT call.
   * </pre>
   *
   * <code>optional string number = 2;</code>
   */
  public com.google.protobuf.ByteString
      getNumberBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(number_);
  }
  /**
   * <pre>
   * Phone number of RTT call.
   * </pre>
   *
   * <code>optional string number = 2;</code>
   */
  private void setNumber(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
    number_ = value;
  }
  /**
   * <pre>
   * Phone number of RTT call.
   * </pre>
   *
   * <code>optional string number = 2;</code>
   */
  private void clearNumber() {
    bitField0_ = (bitField0_ & ~0x00000002);
    number_ = getDefaultInstance().getNumber();
  }
  /**
   * <pre>
   * Phone number of RTT call.
   * </pre>
   *
   * <code>optional string number = 2;</code>
   */
  private void setNumberBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
    number_ = value.toStringUtf8();
  }

  public static final int TIMESTAMP_FIELD_NUMBER = 3;
  private long timestamp_;
  /**
   * <pre>
   * Timestamp when the RTT call is created.
   * </pre>
   *
   * <code>optional int64 timestamp = 3;</code>
   */
  public boolean hasTimestamp() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <pre>
   * Timestamp when the RTT call is created.
   * </pre>
   *
   * <code>optional int64 timestamp = 3;</code>
   */
  public long getTimestamp() {
    return timestamp_;
  }
  /**
   * <pre>
   * Timestamp when the RTT call is created.
   * </pre>
   *
   * <code>optional int64 timestamp = 3;</code>
   */
  private void setTimestamp(long value) {
    bitField0_ |= 0x00000004;
    timestamp_ = value;
  }
  /**
   * <pre>
   * Timestamp when the RTT call is created.
   * </pre>
   *
   * <code>optional int64 timestamp = 3;</code>
   */
  private void clearTimestamp() {
    bitField0_ = (bitField0_ & ~0x00000004);
    timestamp_ = 0L;
  }

  public static final int MESSAGES_FIELD_NUMBER = 4;
  private com.google.protobuf.Internal.ProtobufList<com.fissy.dialer.rtt.RttTranscriptMessage> messages_;
  /**
   * <pre>
   * Chat messages.
   * </pre>
   *
   * <code>repeated .com.fissy.dialer.rtt.RttTranscriptMessage messages = 4;</code>
   */
  public java.util.List<com.fissy.dialer.rtt.RttTranscriptMessage> getMessagesList() {
    return messages_;
  }
  /**
   * <pre>
   * Chat messages.
   * </pre>
   *
   * <code>repeated .com.fissy.dialer.rtt.RttTranscriptMessage messages = 4;</code>
   */
  public java.util.List<? extends com.fissy.dialer.rtt.RttTranscriptMessageOrBuilder> 
      getMessagesOrBuilderList() {
    return messages_;
  }
  /**
   * <pre>
   * Chat messages.
   * </pre>
   *
   * <code>repeated .com.fissy.dialer.rtt.RttTranscriptMessage messages = 4;</code>
   */
  public int getMessagesCount() {
    return messages_.size();
  }
  /**
   * <pre>
   * Chat messages.
   * </pre>
   *
   * <code>repeated .com.fissy.dialer.rtt.RttTranscriptMessage messages = 4;</code>
   */
  public com.fissy.dialer.rtt.RttTranscriptMessage getMessages(int index) {
    return messages_.get(index);
  }
  /**
   * <pre>
   * Chat messages.
   * </pre>
   *
   * <code>repeated .com.fissy.dialer.rtt.RttTranscriptMessage messages = 4;</code>
   */
  public com.fissy.dialer.rtt.RttTranscriptMessageOrBuilder getMessagesOrBuilder(
      int index) {
    return messages_.get(index);
  }
  private void ensureMessagesIsMutable() {
    if (!messages_.isModifiable()) {
      messages_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(messages_);
     }
  }

  /**
   * <pre>
   * Chat messages.
   * </pre>
   *
   * <code>repeated .com.fissy.dialer.rtt.RttTranscriptMessage messages = 4;</code>
   */
  private void setMessages(
      int index, com.fissy.dialer.rtt.RttTranscriptMessage value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureMessagesIsMutable();
    messages_.set(index, value);
  }
  /**
   * <pre>
   * Chat messages.
   * </pre>
   *
   * <code>repeated .com.fissy.dialer.rtt.RttTranscriptMessage messages = 4;</code>
   */
  private void setMessages(
      int index, com.fissy.dialer.rtt.RttTranscriptMessage.Builder builderForValue) {
    ensureMessagesIsMutable();
    messages_.set(index, builderForValue.build());
  }
  /**
   * <pre>
   * Chat messages.
   * </pre>
   *
   * <code>repeated .com.fissy.dialer.rtt.RttTranscriptMessage messages = 4;</code>
   */
  private void addMessages(com.fissy.dialer.rtt.RttTranscriptMessage value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureMessagesIsMutable();
    messages_.add(value);
  }
  /**
   * <pre>
   * Chat messages.
   * </pre>
   *
   * <code>repeated .com.fissy.dialer.rtt.RttTranscriptMessage messages = 4;</code>
   */
  private void addMessages(
      int index, com.fissy.dialer.rtt.RttTranscriptMessage value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureMessagesIsMutable();
    messages_.add(index, value);
  }
  /**
   * <pre>
   * Chat messages.
   * </pre>
   *
   * <code>repeated .com.fissy.dialer.rtt.RttTranscriptMessage messages = 4;</code>
   */
  private void addMessages(
      com.fissy.dialer.rtt.RttTranscriptMessage.Builder builderForValue) {
    ensureMessagesIsMutable();
    messages_.add(builderForValue.build());
  }
  /**
   * <pre>
   * Chat messages.
   * </pre>
   *
   * <code>repeated .com.fissy.dialer.rtt.RttTranscriptMessage messages = 4;</code>
   */
  private void addMessages(
      int index, com.fissy.dialer.rtt.RttTranscriptMessage.Builder builderForValue) {
    ensureMessagesIsMutable();
    messages_.add(index, builderForValue.build());
  }
  /**
   * <pre>
   * Chat messages.
   * </pre>
   *
   * <code>repeated .com.fissy.dialer.rtt.RttTranscriptMessage messages = 4;</code>
   */
  private void addAllMessages(
      java.lang.Iterable<? extends com.fissy.dialer.rtt.RttTranscriptMessage> values) {
    ensureMessagesIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, messages_);
  }
  /**
   * <pre>
   * Chat messages.
   * </pre>
   *
   * <code>repeated .com.fissy.dialer.rtt.RttTranscriptMessage messages = 4;</code>
   */
  private void clearMessages() {
    messages_ = emptyProtobufList();
  }
  /**
   * <pre>
   * Chat messages.
   * </pre>
   *
   * <code>repeated .com.fissy.dialer.rtt.RttTranscriptMessage messages = 4;</code>
   */
  private void removeMessages(int index) {
    ensureMessagesIsMutable();
    messages_.remove(index);
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeString(1, getId());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeString(2, getNumber());
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeInt64(3, timestamp_);
    }
    for (int i = 0; i < messages_.size(); i++) {
      output.writeMessage(4, messages_.get(i));
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(1, getId());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(2, getNumber());
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(3, timestamp_);
    }
    for (int i = 0; i < messages_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, messages_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  public static com.fissy.dialer.rtt.RttTranscript parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.fissy.dialer.rtt.RttTranscript parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.fissy.dialer.rtt.RttTranscript parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.fissy.dialer.rtt.RttTranscript parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.fissy.dialer.rtt.RttTranscript parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.fissy.dialer.rtt.RttTranscript parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.fissy.dialer.rtt.RttTranscript parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.fissy.dialer.rtt.RttTranscript parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.fissy.dialer.rtt.RttTranscript parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.fissy.dialer.rtt.RttTranscript parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.fissy.dialer.rtt.RttTranscript prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * RTT transcript which contains chat history of a RTT call.
   * </pre>
   *
   * Protobuf type {@code com.fissy.dialer.rtt.RttTranscript}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.fissy.dialer.rtt.RttTranscript, Builder> implements
      // @@protoc_insertion_point(builder_implements:com.fissy.dialer.rtt.RttTranscript)
      com.fissy.dialer.rtt.RttTranscriptOrBuilder {
    // Construct using com.fissy.dialer.rtt.RttTranscript.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Unique ID used for database.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public boolean hasId() {
      return instance.hasId();
    }
    /**
     * <pre>
     * Unique ID used for database.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public java.lang.String getId() {
      return instance.getId();
    }
    /**
     * <pre>
     * Unique ID used for database.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      return instance.getIdBytes();
    }
    /**
     * <pre>
     * Unique ID used for database.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public Builder setId(
        java.lang.String value) {
      copyOnWrite();
      instance.setId(value);
      return this;
    }
    /**
     * <pre>
     * Unique ID used for database.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public Builder clearId() {
      copyOnWrite();
      instance.clearId();
      return this;
    }
    /**
     * <pre>
     * Unique ID used for database.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public Builder setIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setIdBytes(value);
      return this;
    }

    /**
     * <pre>
     * Phone number of RTT call.
     * </pre>
     *
     * <code>optional string number = 2;</code>
     */
    public boolean hasNumber() {
      return instance.hasNumber();
    }
    /**
     * <pre>
     * Phone number of RTT call.
     * </pre>
     *
     * <code>optional string number = 2;</code>
     */
    public java.lang.String getNumber() {
      return instance.getNumber();
    }
    /**
     * <pre>
     * Phone number of RTT call.
     * </pre>
     *
     * <code>optional string number = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNumberBytes() {
      return instance.getNumberBytes();
    }
    /**
     * <pre>
     * Phone number of RTT call.
     * </pre>
     *
     * <code>optional string number = 2;</code>
     */
    public Builder setNumber(
        java.lang.String value) {
      copyOnWrite();
      instance.setNumber(value);
      return this;
    }
    /**
     * <pre>
     * Phone number of RTT call.
     * </pre>
     *
     * <code>optional string number = 2;</code>
     */
    public Builder clearNumber() {
      copyOnWrite();
      instance.clearNumber();
      return this;
    }
    /**
     * <pre>
     * Phone number of RTT call.
     * </pre>
     *
     * <code>optional string number = 2;</code>
     */
    public Builder setNumberBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setNumberBytes(value);
      return this;
    }

    /**
     * <pre>
     * Timestamp when the RTT call is created.
     * </pre>
     *
     * <code>optional int64 timestamp = 3;</code>
     */
    public boolean hasTimestamp() {
      return instance.hasTimestamp();
    }
    /**
     * <pre>
     * Timestamp when the RTT call is created.
     * </pre>
     *
     * <code>optional int64 timestamp = 3;</code>
     */
    public long getTimestamp() {
      return instance.getTimestamp();
    }
    /**
     * <pre>
     * Timestamp when the RTT call is created.
     * </pre>
     *
     * <code>optional int64 timestamp = 3;</code>
     */
    public Builder setTimestamp(long value) {
      copyOnWrite();
      instance.setTimestamp(value);
      return this;
    }
    /**
     * <pre>
     * Timestamp when the RTT call is created.
     * </pre>
     *
     * <code>optional int64 timestamp = 3;</code>
     */
    public Builder clearTimestamp() {
      copyOnWrite();
      instance.clearTimestamp();
      return this;
    }

    /**
     * <pre>
     * Chat messages.
     * </pre>
     *
     * <code>repeated .com.fissy.dialer.rtt.RttTranscriptMessage messages = 4;</code>
     */
    public java.util.List<com.fissy.dialer.rtt.RttTranscriptMessage> getMessagesList() {
      return java.util.Collections.unmodifiableList(
          instance.getMessagesList());
    }
    /**
     * <pre>
     * Chat messages.
     * </pre>
     *
     * <code>repeated .com.fissy.dialer.rtt.RttTranscriptMessage messages = 4;</code>
     */
    public int getMessagesCount() {
      return instance.getMessagesCount();
    }/**
     * <pre>
     * Chat messages.
     * </pre>
     *
     * <code>repeated .com.fissy.dialer.rtt.RttTranscriptMessage messages = 4;</code>
     */
    public com.fissy.dialer.rtt.RttTranscriptMessage getMessages(int index) {
      return instance.getMessages(index);
    }
    /**
     * <pre>
     * Chat messages.
     * </pre>
     *
     * <code>repeated .com.fissy.dialer.rtt.RttTranscriptMessage messages = 4;</code>
     */
    public Builder setMessages(
        int index, com.fissy.dialer.rtt.RttTranscriptMessage value) {
      copyOnWrite();
      instance.setMessages(index, value);
      return this;
    }
    /**
     * <pre>
     * Chat messages.
     * </pre>
     *
     * <code>repeated .com.fissy.dialer.rtt.RttTranscriptMessage messages = 4;</code>
     */
    public Builder setMessages(
        int index, com.fissy.dialer.rtt.RttTranscriptMessage.Builder builderForValue) {
      copyOnWrite();
      instance.setMessages(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * Chat messages.
     * </pre>
     *
     * <code>repeated .com.fissy.dialer.rtt.RttTranscriptMessage messages = 4;</code>
     */
    public Builder addMessages(com.fissy.dialer.rtt.RttTranscriptMessage value) {
      copyOnWrite();
      instance.addMessages(value);
      return this;
    }
    /**
     * <pre>
     * Chat messages.
     * </pre>
     *
     * <code>repeated .com.fissy.dialer.rtt.RttTranscriptMessage messages = 4;</code>
     */
    public Builder addMessages(
        int index, com.fissy.dialer.rtt.RttTranscriptMessage value) {
      copyOnWrite();
      instance.addMessages(index, value);
      return this;
    }
    /**
     * <pre>
     * Chat messages.
     * </pre>
     *
     * <code>repeated .com.fissy.dialer.rtt.RttTranscriptMessage messages = 4;</code>
     */
    public Builder addMessages(
        com.fissy.dialer.rtt.RttTranscriptMessage.Builder builderForValue) {
      copyOnWrite();
      instance.addMessages(builderForValue);
      return this;
    }
    /**
     * <pre>
     * Chat messages.
     * </pre>
     *
     * <code>repeated .com.fissy.dialer.rtt.RttTranscriptMessage messages = 4;</code>
     */
    public Builder addMessages(
        int index, com.fissy.dialer.rtt.RttTranscriptMessage.Builder builderForValue) {
      copyOnWrite();
      instance.addMessages(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * Chat messages.
     * </pre>
     *
     * <code>repeated .com.fissy.dialer.rtt.RttTranscriptMessage messages = 4;</code>
     */
    public Builder addAllMessages(
        java.lang.Iterable<? extends com.fissy.dialer.rtt.RttTranscriptMessage> values) {
      copyOnWrite();
      instance.addAllMessages(values);
      return this;
    }
    /**
     * <pre>
     * Chat messages.
     * </pre>
     *
     * <code>repeated .com.fissy.dialer.rtt.RttTranscriptMessage messages = 4;</code>
     */
    public Builder clearMessages() {
      copyOnWrite();
      instance.clearMessages();
      return this;
    }
    /**
     * <pre>
     * Chat messages.
     * </pre>
     *
     * <code>repeated .com.fissy.dialer.rtt.RttTranscriptMessage messages = 4;</code>
     */
    public Builder removeMessages(int index) {
      copyOnWrite();
      instance.removeMessages(index);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:com.fissy.dialer.rtt.RttTranscript)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.fissy.dialer.rtt.RttTranscript();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        messages_.makeImmutable();
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        com.fissy.dialer.rtt.RttTranscript other = (com.fissy.dialer.rtt.RttTranscript) arg1;
        id_ = visitor.visitString(
            hasId(), id_,
            other.hasId(), other.id_);
        number_ = visitor.visitString(
            hasNumber(), number_,
            other.hasNumber(), other.number_);
        timestamp_ = visitor.visitLong(
            hasTimestamp(), timestamp_,
            other.hasTimestamp(), other.timestamp_);
        messages_= visitor.visitList(messages_, other.messages_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(tag, input)) {
                  done = true;
                }
                break;
              }
              case 10: {
                String s = input.readString();
                bitField0_ |= 0x00000001;
                id_ = s;
                break;
              }
              case 18: {
                String s = input.readString();
                bitField0_ |= 0x00000002;
                number_ = s;
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                timestamp_ = input.readInt64();
                break;
              }
              case 34: {
                if (!messages_.isModifiable()) {
                  messages_ =
                      com.google.protobuf.GeneratedMessageLite.mutableCopy(messages_);
                }
                messages_.add(
                    input.readMessage(com.fissy.dialer.rtt.RttTranscriptMessage.parser(), extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (com.fissy.dialer.rtt.RttTranscript.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:com.fissy.dialer.rtt.RttTranscript)
  private static final com.fissy.dialer.rtt.RttTranscript DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new RttTranscript();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static com.fissy.dialer.rtt.RttTranscript getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<RttTranscript> PARSER;

  public static com.google.protobuf.Parser<RttTranscript> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

