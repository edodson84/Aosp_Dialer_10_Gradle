// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: packages/apps/Dialer/java/com/fissy/dialer/phonelookup/phone_lookup_info.proto

package com.fissy.dialer.phonelookup;

/**
 * <pre>
 * Contains information about a phone number, possibly from many sources.
 * This message is organized into sub-message fields where each one corresponds
 * to an implementation of PhoneLookup. For example, field
 * "cp2_info_in_default_directory" corresponds to class
 * Cp2DefaultDirectoryPhoneLookup, and class Cp2DefaultDirectoryPhoneLookup
 * alone is responsible for populating it.
 * Next ID: 11
 * </pre>
 * <p>
 * Protobuf type {@code com.fissy.dialer.phonelookup.PhoneLookupInfo}
 */
public final class PhoneLookupInfo extends
        com.google.protobuf.GeneratedMessageLite<
                PhoneLookupInfo, PhoneLookupInfo.Builder> implements
        // @@protoc_insertion_point(message_implements:com.fissy.dialer.phonelookup.PhoneLookupInfo)
        PhoneLookupInfoOrBuilder {
    public static final int DEFAULT_CP2_INFO_FIELD_NUMBER = 1;
    public static final int EXTENDED_CP2_INFO_FIELD_NUMBER = 6;
    public static final int SPAM_INFO_FIELD_NUMBER = 2;
    public static final int PEOPLE_API_INFO_FIELD_NUMBER = 3;
    public static final int SYSTEM_BLOCKED_NUMBER_INFO_FIELD_NUMBER = 4;
    public static final int CNAP_INFO_FIELD_NUMBER = 7;
    public static final int CEQUINT_INFO_FIELD_NUMBER = 8;
    public static final int EMERGENCY_INFO_FIELD_NUMBER = 9;
    public static final int MIGRATED_INFO_FIELD_NUMBER = 10;
    // @@protoc_insertion_point(class_scope:com.fissy.dialer.phonelookup.PhoneLookupInfo)
    private static final com.fissy.dialer.phonelookup.PhoneLookupInfo DEFAULT_INSTANCE;
    private static volatile com.google.protobuf.Parser<PhoneLookupInfo> PARSER;

    static {
        DEFAULT_INSTANCE = new PhoneLookupInfo();
        DEFAULT_INSTANCE.makeImmutable();
    }

    private int bitField0_;
    private com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info defaultCp2Info_;
    private com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info extendedCp2Info_;
    private com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo spamInfo_;
    private com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo peopleApiInfo_;
    private com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo systemBlockedNumberInfo_;
    private com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo cnapInfo_;
    private com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo cequintInfo_;
    private com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo emergencyInfo_;
    private com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo migratedInfo_;

    private PhoneLookupInfo() {
    }

    public static com.fissy.dialer.phonelookup.PhoneLookupInfo parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, data);
    }

    public static com.fissy.dialer.phonelookup.PhoneLookupInfo parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static com.fissy.dialer.phonelookup.PhoneLookupInfo parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, data);
    }

    public static com.fissy.dialer.phonelookup.PhoneLookupInfo parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, data, extensionRegistry);
    }

    public static com.fissy.dialer.phonelookup.PhoneLookupInfo parseFrom(java.io.InputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, input);
    }

    public static com.fissy.dialer.phonelookup.PhoneLookupInfo parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static com.fissy.dialer.phonelookup.PhoneLookupInfo parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static com.fissy.dialer.phonelookup.PhoneLookupInfo parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static com.fissy.dialer.phonelookup.PhoneLookupInfo parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, input);
    }

    public static com.fissy.dialer.phonelookup.PhoneLookupInfo parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(com.fissy.dialer.phonelookup.PhoneLookupInfo prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    public static com.fissy.dialer.phonelookup.PhoneLookupInfo getDefaultInstance() {
        return DEFAULT_INSTANCE;
    }

    public static com.google.protobuf.Parser<PhoneLookupInfo> parser() {
        return DEFAULT_INSTANCE.getParserForType();
    }

    /**
     * <pre>
     * Information about a contact in the default directory, retrieved via CP2.
     * Cp2DefaultDirectoryPhoneLookup is responsible for populating this field.
     * </pre>
     *
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info default_cp2_info = 1;</code>
     */
    public boolean hasDefaultCp2Info() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
    }

    /**
     * <pre>
     * Information about a contact in the default directory, retrieved via CP2.
     * Cp2DefaultDirectoryPhoneLookup is responsible for populating this field.
     * </pre>
     *
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info default_cp2_info = 1;</code>
     */
    public com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info getDefaultCp2Info() {
        return defaultCp2Info_ == null ? com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.getDefaultInstance() : defaultCp2Info_;
    }

    /**
     * <pre>
     * Information about a contact in the default directory, retrieved via CP2.
     * Cp2DefaultDirectoryPhoneLookup is responsible for populating this field.
     * </pre>
     *
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info default_cp2_info = 1;</code>
     */
    private void setDefaultCp2Info(com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info value) {
        if (value == null) {
            throw new NullPointerException();
        }
        defaultCp2Info_ = value;
        bitField0_ |= 0x00000001;
    }

    /**
     * <pre>
     * Information about a contact in the default directory, retrieved via CP2.
     * Cp2DefaultDirectoryPhoneLookup is responsible for populating this field.
     * </pre>
     *
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info default_cp2_info = 1;</code>
     */
    private void setDefaultCp2Info(
            com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Builder builderForValue) {
        defaultCp2Info_ = builderForValue.build();
        bitField0_ |= 0x00000001;
    }

    /**
     * <pre>
     * Information about a contact in the default directory, retrieved via CP2.
     * Cp2DefaultDirectoryPhoneLookup is responsible for populating this field.
     * </pre>
     *
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info default_cp2_info = 1;</code>
     */
    private void mergeDefaultCp2Info(com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info value) {
        if (defaultCp2Info_ != null &&
                defaultCp2Info_ != com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.getDefaultInstance()) {
            defaultCp2Info_ =
                    com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.newBuilder(defaultCp2Info_).mergeFrom(value).buildPartial();
        } else {
            defaultCp2Info_ = value;
        }
        bitField0_ |= 0x00000001;
    }

    /**
     * <pre>
     * Information about a contact in the default directory, retrieved via CP2.
     * Cp2DefaultDirectoryPhoneLookup is responsible for populating this field.
     * </pre>
     *
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info default_cp2_info = 1;</code>
     */
    private void clearDefaultCp2Info() {
        defaultCp2Info_ = null;
        bitField0_ = (bitField0_ & ~0x00000001);
    }

    /**
     * <pre>
     * Information about a contact in other directories, retrieved via CP2.
     * Cp2ExtendedDirectoryPhoneLookup is responsible for populating this field.
     * </pre>
     *
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info extended_cp2_info = 6;</code>
     */
    public boolean hasExtendedCp2Info() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
    }

    /**
     * <pre>
     * Information about a contact in other directories, retrieved via CP2.
     * Cp2ExtendedDirectoryPhoneLookup is responsible for populating this field.
     * </pre>
     *
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info extended_cp2_info = 6;</code>
     */
    public com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info getExtendedCp2Info() {
        return extendedCp2Info_ == null ? com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.getDefaultInstance() : extendedCp2Info_;
    }

    /**
     * <pre>
     * Information about a contact in other directories, retrieved via CP2.
     * Cp2ExtendedDirectoryPhoneLookup is responsible for populating this field.
     * </pre>
     *
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info extended_cp2_info = 6;</code>
     */
    private void setExtendedCp2Info(com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info value) {
        if (value == null) {
            throw new NullPointerException();
        }
        extendedCp2Info_ = value;
        bitField0_ |= 0x00000002;
    }

    /**
     * <pre>
     * Information about a contact in other directories, retrieved via CP2.
     * Cp2ExtendedDirectoryPhoneLookup is responsible for populating this field.
     * </pre>
     *
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info extended_cp2_info = 6;</code>
     */
    private void setExtendedCp2Info(
            com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Builder builderForValue) {
        extendedCp2Info_ = builderForValue.build();
        bitField0_ |= 0x00000002;
    }

    /**
     * <pre>
     * Information about a contact in other directories, retrieved via CP2.
     * Cp2ExtendedDirectoryPhoneLookup is responsible for populating this field.
     * </pre>
     *
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info extended_cp2_info = 6;</code>
     */
    private void mergeExtendedCp2Info(com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info value) {
        if (extendedCp2Info_ != null &&
                extendedCp2Info_ != com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.getDefaultInstance()) {
            extendedCp2Info_ =
                    com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.newBuilder(extendedCp2Info_).mergeFrom(value).buildPartial();
        } else {
            extendedCp2Info_ = value;
        }
        bitField0_ |= 0x00000002;
    }

    /**
     * <pre>
     * Information about a contact in other directories, retrieved via CP2.
     * Cp2ExtendedDirectoryPhoneLookup is responsible for populating this field.
     * </pre>
     *
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info extended_cp2_info = 6;</code>
     */
    private void clearExtendedCp2Info() {
        extendedCp2Info_ = null;
        bitField0_ = (bitField0_ & ~0x00000002);
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo spam_info = 2;</code>
     */
    public boolean hasSpamInfo() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo spam_info = 2;</code>
     */
    public com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo getSpamInfo() {
        return spamInfo_ == null ? com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo.getDefaultInstance() : spamInfo_;
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo spam_info = 2;</code>
     */
    private void setSpamInfo(com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo value) {
        if (value == null) {
            throw new NullPointerException();
        }
        spamInfo_ = value;
        bitField0_ |= 0x00000004;
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo spam_info = 2;</code>
     */
    private void setSpamInfo(
            com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo.Builder builderForValue) {
        spamInfo_ = builderForValue.build();
        bitField0_ |= 0x00000004;
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo spam_info = 2;</code>
     */
    private void mergeSpamInfo(com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo value) {
        if (spamInfo_ != null &&
                spamInfo_ != com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo.getDefaultInstance()) {
            spamInfo_ =
                    com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo.newBuilder(spamInfo_).mergeFrom(value).buildPartial();
        } else {
            spamInfo_ = value;
        }
        bitField0_ |= 0x00000004;
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo spam_info = 2;</code>
     */
    private void clearSpamInfo() {
        spamInfo_ = null;
        bitField0_ = (bitField0_ & ~0x00000004);
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo people_api_info = 3;</code>
     */
    public boolean hasPeopleApiInfo() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo people_api_info = 3;</code>
     */
    public com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo getPeopleApiInfo() {
        return peopleApiInfo_ == null ? com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo.getDefaultInstance() : peopleApiInfo_;
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo people_api_info = 3;</code>
     */
    private void setPeopleApiInfo(com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo value) {
        if (value == null) {
            throw new NullPointerException();
        }
        peopleApiInfo_ = value;
        bitField0_ |= 0x00000008;
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo people_api_info = 3;</code>
     */
    private void setPeopleApiInfo(
            com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo.Builder builderForValue) {
        peopleApiInfo_ = builderForValue.build();
        bitField0_ |= 0x00000008;
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo people_api_info = 3;</code>
     */
    private void mergePeopleApiInfo(com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo value) {
        if (peopleApiInfo_ != null &&
                peopleApiInfo_ != com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo.getDefaultInstance()) {
            peopleApiInfo_ =
                    com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo.newBuilder(peopleApiInfo_).mergeFrom(value).buildPartial();
        } else {
            peopleApiInfo_ = value;
        }
        bitField0_ |= 0x00000008;
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo people_api_info = 3;</code>
     */
    private void clearPeopleApiInfo() {
        peopleApiInfo_ = null;
        bitField0_ = (bitField0_ & ~0x00000008);
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo system_blocked_number_info = 4;</code>
     */
    public boolean hasSystemBlockedNumberInfo() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo system_blocked_number_info = 4;</code>
     */
    public com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo getSystemBlockedNumberInfo() {
        return systemBlockedNumberInfo_ == null ? com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo.getDefaultInstance() : systemBlockedNumberInfo_;
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo system_blocked_number_info = 4;</code>
     */
    private void setSystemBlockedNumberInfo(com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo value) {
        if (value == null) {
            throw new NullPointerException();
        }
        systemBlockedNumberInfo_ = value;
        bitField0_ |= 0x00000010;
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo system_blocked_number_info = 4;</code>
     */
    private void setSystemBlockedNumberInfo(
            com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo.Builder builderForValue) {
        systemBlockedNumberInfo_ = builderForValue.build();
        bitField0_ |= 0x00000010;
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo system_blocked_number_info = 4;</code>
     */
    private void mergeSystemBlockedNumberInfo(com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo value) {
        if (systemBlockedNumberInfo_ != null &&
                systemBlockedNumberInfo_ != com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo.getDefaultInstance()) {
            systemBlockedNumberInfo_ =
                    com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo.newBuilder(systemBlockedNumberInfo_).mergeFrom(value).buildPartial();
        } else {
            systemBlockedNumberInfo_ = value;
        }
        bitField0_ |= 0x00000010;
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo system_blocked_number_info = 4;</code>
     */
    private void clearSystemBlockedNumberInfo() {
        systemBlockedNumberInfo_ = null;
        bitField0_ = (bitField0_ & ~0x00000010);
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo cnap_info = 7;</code>
     */
    public boolean hasCnapInfo() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo cnap_info = 7;</code>
     */
    public com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo getCnapInfo() {
        return cnapInfo_ == null ? com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo.getDefaultInstance() : cnapInfo_;
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo cnap_info = 7;</code>
     */
    private void setCnapInfo(com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo value) {
        if (value == null) {
            throw new NullPointerException();
        }
        cnapInfo_ = value;
        bitField0_ |= 0x00000020;
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo cnap_info = 7;</code>
     */
    private void setCnapInfo(
            com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo.Builder builderForValue) {
        cnapInfo_ = builderForValue.build();
        bitField0_ |= 0x00000020;
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo cnap_info = 7;</code>
     */
    private void mergeCnapInfo(com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo value) {
        if (cnapInfo_ != null &&
                cnapInfo_ != com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo.getDefaultInstance()) {
            cnapInfo_ =
                    com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo.newBuilder(cnapInfo_).mergeFrom(value).buildPartial();
        } else {
            cnapInfo_ = value;
        }
        bitField0_ |= 0x00000020;
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo cnap_info = 7;</code>
     */
    private void clearCnapInfo() {
        cnapInfo_ = null;
        bitField0_ = (bitField0_ & ~0x00000020);
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo cequint_info = 8;</code>
     */
    public boolean hasCequintInfo() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo cequint_info = 8;</code>
     */
    public com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo getCequintInfo() {
        return cequintInfo_ == null ? com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo.getDefaultInstance() : cequintInfo_;
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo cequint_info = 8;</code>
     */
    private void setCequintInfo(com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo value) {
        if (value == null) {
            throw new NullPointerException();
        }
        cequintInfo_ = value;
        bitField0_ |= 0x00000040;
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo cequint_info = 8;</code>
     */
    private void setCequintInfo(
            com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo.Builder builderForValue) {
        cequintInfo_ = builderForValue.build();
        bitField0_ |= 0x00000040;
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo cequint_info = 8;</code>
     */
    private void mergeCequintInfo(com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo value) {
        if (cequintInfo_ != null &&
                cequintInfo_ != com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo.getDefaultInstance()) {
            cequintInfo_ =
                    com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo.newBuilder(cequintInfo_).mergeFrom(value).buildPartial();
        } else {
            cequintInfo_ = value;
        }
        bitField0_ |= 0x00000040;
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo cequint_info = 8;</code>
     */
    private void clearCequintInfo() {
        cequintInfo_ = null;
        bitField0_ = (bitField0_ & ~0x00000040);
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo emergency_info = 9;</code>
     */
    public boolean hasEmergencyInfo() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo emergency_info = 9;</code>
     */
    public com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo getEmergencyInfo() {
        return emergencyInfo_ == null ? com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo.getDefaultInstance() : emergencyInfo_;
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo emergency_info = 9;</code>
     */
    private void setEmergencyInfo(com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo value) {
        if (value == null) {
            throw new NullPointerException();
        }
        emergencyInfo_ = value;
        bitField0_ |= 0x00000080;
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo emergency_info = 9;</code>
     */
    private void setEmergencyInfo(
            com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo.Builder builderForValue) {
        emergencyInfo_ = builderForValue.build();
        bitField0_ |= 0x00000080;
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo emergency_info = 9;</code>
     */
    private void mergeEmergencyInfo(com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo value) {
        if (emergencyInfo_ != null &&
                emergencyInfo_ != com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo.getDefaultInstance()) {
            emergencyInfo_ =
                    com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo.newBuilder(emergencyInfo_).mergeFrom(value).buildPartial();
        } else {
            emergencyInfo_ = value;
        }
        bitField0_ |= 0x00000080;
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo emergency_info = 9;</code>
     */
    private void clearEmergencyInfo() {
        emergencyInfo_ = null;
        bitField0_ = (bitField0_ & ~0x00000080);
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo migrated_info = 10;</code>
     */
    public boolean hasMigratedInfo() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo migrated_info = 10;</code>
     */
    public com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo getMigratedInfo() {
        return migratedInfo_ == null ? com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo.getDefaultInstance() : migratedInfo_;
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo migrated_info = 10;</code>
     */
    private void setMigratedInfo(com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo value) {
        if (value == null) {
            throw new NullPointerException();
        }
        migratedInfo_ = value;
        bitField0_ |= 0x00000100;
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo migrated_info = 10;</code>
     */
    private void setMigratedInfo(
            com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo.Builder builderForValue) {
        migratedInfo_ = builderForValue.build();
        bitField0_ |= 0x00000100;
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo migrated_info = 10;</code>
     */
    private void mergeMigratedInfo(com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo value) {
        if (migratedInfo_ != null &&
                migratedInfo_ != com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo.getDefaultInstance()) {
            migratedInfo_ =
                    com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo.newBuilder(migratedInfo_).mergeFrom(value).buildPartial();
        } else {
            migratedInfo_ = value;
        }
        bitField0_ |= 0x00000100;
    }

    /**
     * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo migrated_info = 10;</code>
     */
    private void clearMigratedInfo() {
        migratedInfo_ = null;
        bitField0_ = (bitField0_ & ~0x00000100);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeMessage(1, getDefaultCp2Info());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
            output.writeMessage(2, getSpamInfo());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
            output.writeMessage(3, getPeopleApiInfo());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
            output.writeMessage(4, getSystemBlockedNumberInfo());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeMessage(6, getExtendedCp2Info());
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
            output.writeMessage(7, getCnapInfo());
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
            output.writeMessage(8, getCequintInfo());
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
            output.writeMessage(9, getEmergencyInfo());
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
            output.writeMessage(10, getMigratedInfo());
        }
        unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
                    .computeMessageSize(1, getDefaultCp2Info());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
            size += com.google.protobuf.CodedOutputStream
                    .computeMessageSize(2, getSpamInfo());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
            size += com.google.protobuf.CodedOutputStream
                    .computeMessageSize(3, getPeopleApiInfo());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
            size += com.google.protobuf.CodedOutputStream
                    .computeMessageSize(4, getSystemBlockedNumberInfo());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
                    .computeMessageSize(6, getExtendedCp2Info());
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
            size += com.google.protobuf.CodedOutputStream
                    .computeMessageSize(7, getCnapInfo());
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
            size += com.google.protobuf.CodedOutputStream
                    .computeMessageSize(8, getCequintInfo());
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
            size += com.google.protobuf.CodedOutputStream
                    .computeMessageSize(9, getEmergencyInfo());
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
            size += com.google.protobuf.CodedOutputStream
                    .computeMessageSize(10, getMigratedInfo());
        }
        size += unknownFields.getSerializedSize();
        memoizedSerializedSize = size;
        return size;
    }

    protected final Object dynamicMethod(
            com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
            Object arg0, Object arg1) {
        switch (method) {
            case NEW_MUTABLE_INSTANCE: {
                return new com.fissy.dialer.phonelookup.PhoneLookupInfo();
            }
            case IS_INITIALIZED: {
                return DEFAULT_INSTANCE;
            }
            case MAKE_IMMUTABLE: {
                return null;
            }
            case NEW_BUILDER: {
                return new Builder();
            }
            case VISIT: {
                Visitor visitor = (Visitor) arg0;
                com.fissy.dialer.phonelookup.PhoneLookupInfo other = (com.fissy.dialer.phonelookup.PhoneLookupInfo) arg1;
                defaultCp2Info_ = visitor.visitMessage(defaultCp2Info_, other.defaultCp2Info_);
                extendedCp2Info_ = visitor.visitMessage(extendedCp2Info_, other.extendedCp2Info_);
                spamInfo_ = visitor.visitMessage(spamInfo_, other.spamInfo_);
                peopleApiInfo_ = visitor.visitMessage(peopleApiInfo_, other.peopleApiInfo_);
                systemBlockedNumberInfo_ = visitor.visitMessage(systemBlockedNumberInfo_, other.systemBlockedNumberInfo_);
                cnapInfo_ = visitor.visitMessage(cnapInfo_, other.cnapInfo_);
                cequintInfo_ = visitor.visitMessage(cequintInfo_, other.cequintInfo_);
                emergencyInfo_ = visitor.visitMessage(emergencyInfo_, other.emergencyInfo_);
                migratedInfo_ = visitor.visitMessage(migratedInfo_, other.migratedInfo_);
                if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                        .INSTANCE) {
                    bitField0_ |= other.bitField0_;
                }
                return this;
            }
            case MERGE_FROM_STREAM: {
                com.google.protobuf.CodedInputStream input =
                        (com.google.protobuf.CodedInputStream) arg0;
                com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                        (com.google.protobuf.ExtensionRegistryLite) arg1;
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                break;
                            default: {
                                if (!parseUnknownField(tag, input)) {
                                    done = true;
                                }
                                break;
                            }
                            case 10: {
                                com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Builder subBuilder = null;
                                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                                    subBuilder = defaultCp2Info_.toBuilder();
                                }
                                defaultCp2Info_ = input.readMessage(com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.parser(), extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom(defaultCp2Info_);
                                    defaultCp2Info_ = subBuilder.buildPartial();
                                }
                                bitField0_ |= 0x00000001;
                                break;
                            }
                            case 18: {
                                com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo.Builder subBuilder = null;
                                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                                    subBuilder = spamInfo_.toBuilder();
                                }
                                spamInfo_ = input.readMessage(com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo.parser(), extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom(spamInfo_);
                                    spamInfo_ = subBuilder.buildPartial();
                                }
                                bitField0_ |= 0x00000004;
                                break;
                            }
                            case 26: {
                                com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo.Builder subBuilder = null;
                                if (((bitField0_ & 0x00000008) == 0x00000008)) {
                                    subBuilder = peopleApiInfo_.toBuilder();
                                }
                                peopleApiInfo_ = input.readMessage(com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo.parser(), extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom(peopleApiInfo_);
                                    peopleApiInfo_ = subBuilder.buildPartial();
                                }
                                bitField0_ |= 0x00000008;
                                break;
                            }
                            case 34: {
                                com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo.Builder subBuilder = null;
                                if (((bitField0_ & 0x00000010) == 0x00000010)) {
                                    subBuilder = systemBlockedNumberInfo_.toBuilder();
                                }
                                systemBlockedNumberInfo_ = input.readMessage(com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo.parser(), extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom(systemBlockedNumberInfo_);
                                    systemBlockedNumberInfo_ = subBuilder.buildPartial();
                                }
                                bitField0_ |= 0x00000010;
                                break;
                            }
                            case 50: {
                                com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Builder subBuilder = null;
                                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                                    subBuilder = extendedCp2Info_.toBuilder();
                                }
                                extendedCp2Info_ = input.readMessage(com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.parser(), extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom(extendedCp2Info_);
                                    extendedCp2Info_ = subBuilder.buildPartial();
                                }
                                bitField0_ |= 0x00000002;
                                break;
                            }
                            case 58: {
                                com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo.Builder subBuilder = null;
                                if (((bitField0_ & 0x00000020) == 0x00000020)) {
                                    subBuilder = cnapInfo_.toBuilder();
                                }
                                cnapInfo_ = input.readMessage(com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo.parser(), extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom(cnapInfo_);
                                    cnapInfo_ = subBuilder.buildPartial();
                                }
                                bitField0_ |= 0x00000020;
                                break;
                            }
                            case 66: {
                                com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo.Builder subBuilder = null;
                                if (((bitField0_ & 0x00000040) == 0x00000040)) {
                                    subBuilder = cequintInfo_.toBuilder();
                                }
                                cequintInfo_ = input.readMessage(com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo.parser(), extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom(cequintInfo_);
                                    cequintInfo_ = subBuilder.buildPartial();
                                }
                                bitField0_ |= 0x00000040;
                                break;
                            }
                            case 74: {
                                com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo.Builder subBuilder = null;
                                if (((bitField0_ & 0x00000080) == 0x00000080)) {
                                    subBuilder = emergencyInfo_.toBuilder();
                                }
                                emergencyInfo_ = input.readMessage(com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo.parser(), extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom(emergencyInfo_);
                                    emergencyInfo_ = subBuilder.buildPartial();
                                }
                                bitField0_ |= 0x00000080;
                                break;
                            }
                            case 82: {
                                com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo.Builder subBuilder = null;
                                if (((bitField0_ & 0x00000100) == 0x00000100)) {
                                    subBuilder = migratedInfo_.toBuilder();
                                }
                                migratedInfo_ = input.readMessage(com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo.parser(), extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom(migratedInfo_);
                                    migratedInfo_ = subBuilder.buildPartial();
                                }
                                bitField0_ |= 0x00000100;
                                break;
                            }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw new RuntimeException(e.setUnfinishedMessage(this));
                } catch (java.io.IOException e) {
                    throw new RuntimeException(
                            new com.google.protobuf.InvalidProtocolBufferException(
                                    e.getMessage()).setUnfinishedMessage(this));
                }
            }
            case GET_DEFAULT_INSTANCE: {
                return DEFAULT_INSTANCE;
            }
            case GET_PARSER: {
                if (PARSER == null) {
                    synchronized (com.fissy.dialer.phonelookup.PhoneLookupInfo.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                }
                return PARSER;
            }
        }
        throw new UnsupportedOperationException();
    }

    /**
     * <pre>
     * Whether a number is blocked or not. Used by both the system blacklist and
     * dialer fallback
     * </pre>
     * <p>
     * Protobuf enum {@code com.fissy.dialer.phonelookup.PhoneLookupInfo.BlockedState}
     */
    public enum BlockedState
            implements com.google.protobuf.Internal.EnumLite {
        /**
         * <code>UNKNOWN = 0;</code>
         */
        UNKNOWN(0),
        /**
         * <code>BLOCKED = 1;</code>
         */
        BLOCKED(1),
        /**
         * <code>NOT_BLOCKED = 2;</code>
         */
        NOT_BLOCKED(2),
        ;

        /**
         * <code>UNKNOWN = 0;</code>
         */
        public static final int UNKNOWN_VALUE = 0;
        /**
         * <code>BLOCKED = 1;</code>
         */
        public static final int BLOCKED_VALUE = 1;
        /**
         * <code>NOT_BLOCKED = 2;</code>
         */
        public static final int NOT_BLOCKED_VALUE = 2;
        private static final com.google.protobuf.Internal.EnumLiteMap<
                BlockedState> internalValueMap =
                number -> BlockedState.forNumber(number);
        private final int value;

        BlockedState(int value) {
            this.value = value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static BlockedState valueOf(int value) {
            return forNumber(value);
        }

        public static BlockedState forNumber(int value) {
            switch (value) {
                case 0:
                    return UNKNOWN;
                case 1:
                    return BLOCKED;
                case 2:
                    return NOT_BLOCKED;
                default:
                    return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<BlockedState>
        internalGetValueMap() {
            return internalValueMap;
        }

        public final int getNumber() {
            return value;
        }

        // @@protoc_insertion_point(enum_scope:com.fissy.dialer.phonelookup.PhoneLookupInfo.BlockedState)
    }

    public interface Cp2InfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         * Repeated because one phone number can be associated with multiple CP2
         * contacts.
         * Empty if there is no CP2 contact information for the number.
         * </pre>
         *
         * <code>repeated .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo cp2_contact_info = 1;</code>
         */
        java.util.List<com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo>
        getCp2ContactInfoList();

        /**
         * <pre>
         * Repeated because one phone number can be associated with multiple CP2
         * contacts.
         * Empty if there is no CP2 contact information for the number.
         * </pre>
         *
         * <code>repeated .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo cp2_contact_info = 1;</code>
         */
        com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo getCp2ContactInfo(int index);

        /**
         * <pre>
         * Repeated because one phone number can be associated with multiple CP2
         * contacts.
         * Empty if there is no CP2 contact information for the number.
         * </pre>
         *
         * <code>repeated .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo cp2_contact_info = 1;</code>
         */
        int getCp2ContactInfoCount();

        /**
         * <pre>
         * The information for this number is incomplete. This can happen when the
         * call log is requested to be updated but there are many invalid numbers
         * and the update cannot be performed efficiently. In this case, the call
         * log needs to query for the CP2 information at render time.
         * </pre>
         *
         * <code>optional bool is_incomplete = 2;</code>
         */
        boolean hasIsIncomplete();

        /**
         * <pre>
         * The information for this number is incomplete. This can happen when the
         * call log is requested to be updated but there are many invalid numbers
         * and the update cannot be performed efficiently. In this case, the call
         * log needs to query for the CP2 information at render time.
         * </pre>
         *
         * <code>optional bool is_incomplete = 2;</code>
         */
        boolean getIsIncomplete();
    }

    public interface SpamInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>optional bool is_spam = 1;</code>
         */
        boolean hasIsSpam();

        /**
         * <code>optional bool is_spam = 1;</code>
         */
        boolean getIsSpam();
    }

    public interface PeopleApiInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         * Best display name determined by people API if available, first display
         * name otherwise.
         * </pre>
         *
         * <code>optional string display_name = 1;</code>
         */
        boolean hasDisplayName();

        /**
         * <pre>
         * Best display name determined by people API if available, first display
         * name otherwise.
         * </pre>
         *
         * <code>optional string display_name = 1;</code>
         */
        java.lang.String getDisplayName();

        /**
         * <pre>
         * Best display name determined by people API if available, first display
         * name otherwise.
         * </pre>
         *
         * <code>optional string display_name = 1;</code>
         */
        com.google.protobuf.ByteString
        getDisplayNameBytes();

        /**
         * <pre>
         * The type of the number, for example "phone" or "home".
         * </pre>
         *
         * <code>optional string number_type = 2;</code>
         */
        boolean hasNumberType();

        /**
         * <pre>
         * The type of the number, for example "phone" or "home".
         * </pre>
         *
         * <code>optional string number_type = 2;</code>
         */
        java.lang.String getNumberType();

        /**
         * <pre>
         * The type of the number, for example "phone" or "home".
         * </pre>
         *
         * <code>optional string number_type = 2;</code>
         */
        com.google.protobuf.ByteString
        getNumberTypeBytes();

        /**
         * <pre>
         * The number_type label in human readable string, for example "Phone".
         * The UI should display known number_type with string resources if possible
         * but if number_type is unrecognized formatted_number_type. For example
         * if the user set an custom type label.
         * </pre>
         *
         * <code>optional string formatted_number_type = 3;</code>
         */
        boolean hasFormattedNumberType();

        /**
         * <pre>
         * The number_type label in human readable string, for example "Phone".
         * The UI should display known number_type with string resources if possible
         * but if number_type is unrecognized formatted_number_type. For example
         * if the user set an custom type label.
         * </pre>
         *
         * <code>optional string formatted_number_type = 3;</code>
         */
        java.lang.String getFormattedNumberType();

        /**
         * <pre>
         * The number_type label in human readable string, for example "Phone".
         * The UI should display known number_type with string resources if possible
         * but if number_type is unrecognized formatted_number_type. For example
         * if the user set an custom type label.
         * </pre>
         *
         * <code>optional string formatted_number_type = 3;</code>
         */
        com.google.protobuf.ByteString
        getFormattedNumberTypeBytes();

        /**
         * <pre>
         * URL to the contact's full size photo.
         * </pre>
         *
         * <code>optional string image_url = 4;</code>
         */
        boolean hasImageUrl();

        /**
         * <pre>
         * URL to the contact's full size photo.
         * </pre>
         *
         * <code>optional string image_url = 4;</code>
         */
        java.lang.String getImageUrl();

        /**
         * <pre>
         * URL to the contact's full size photo.
         * </pre>
         *
         * <code>optional string image_url = 4;</code>
         */
        com.google.protobuf.ByteString
        getImageUrlBytes();

        /**
         * <pre>
         * The primary key of the contact in people API.
         * </pre>
         *
         * <code>optional string person_id = 5;</code>
         */
        boolean hasPersonId();

        /**
         * <pre>
         * The primary key of the contact in people API.
         * </pre>
         *
         * <code>optional string person_id = 5;</code>
         */
        java.lang.String getPersonId();

        /**
         * <pre>
         * The primary key of the contact in people API.
         * </pre>
         *
         * <code>optional string person_id = 5;</code>
         */
        com.google.protobuf.ByteString
        getPersonIdBytes();

        /**
         * <pre>
         * The type of the lookup result, for example, a saved contact or a nearby
         * business.
         * </pre>
         *
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo.InfoType info_type = 6;</code>
         */
        boolean hasInfoType();

        /**
         * <pre>
         * The type of the lookup result, for example, a saved contact or a nearby
         * business.
         * </pre>
         *
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo.InfoType info_type = 6;</code>
         */
        com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo.InfoType getInfoType();

        /**
         * <pre>
         * A URI that contains encoded JSON about the number so contacts can
         * populate the quick contact activity with name and numbers. This does not
         * point to any real contact entry anywhere.
         * </pre>
         *
         * <code>optional string lookup_uri = 7;</code>
         */
        boolean hasLookupUri();

        /**
         * <pre>
         * A URI that contains encoded JSON about the number so contacts can
         * populate the quick contact activity with name and numbers. This does not
         * point to any real contact entry anywhere.
         * </pre>
         *
         * <code>optional string lookup_uri = 7;</code>
         */
        java.lang.String getLookupUri();

        /**
         * <pre>
         * A URI that contains encoded JSON about the number so contacts can
         * populate the quick contact activity with name and numbers. This does not
         * point to any real contact entry anywhere.
         * </pre>
         *
         * <code>optional string lookup_uri = 7;</code>
         */
        com.google.protobuf.ByteString
        getLookupUriBytes();
    }

    public interface SystemBlockedNumberInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.BlockedState blocked_state = 1;</code>
         */
        boolean hasBlockedState();

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.BlockedState blocked_state = 1;</code>
         */
        com.fissy.dialer.phonelookup.PhoneLookupInfo.BlockedState getBlockedState();
    }

    public interface CnapInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>optional string name = 1;</code>
         */
        boolean hasName();

        /**
         * <code>optional string name = 1;</code>
         */
        java.lang.String getName();

        /**
         * <code>optional string name = 1;</code>
         */
        com.google.protobuf.ByteString
        getNameBytes();
    }

    public interface CequintInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>optional string name = 1;</code>
         */
        boolean hasName();

        /**
         * <code>optional string name = 1;</code>
         */
        java.lang.String getName();

        /**
         * <code>optional string name = 1;</code>
         */
        com.google.protobuf.ByteString
        getNameBytes();

        /**
         * <pre>
         * Description of the geolocation (e.g., "Mountain View, CA")
         * </pre>
         *
         * <code>optional string geolocation = 2;</code>
         */
        boolean hasGeolocation();

        /**
         * <pre>
         * Description of the geolocation (e.g., "Mountain View, CA")
         * </pre>
         *
         * <code>optional string geolocation = 2;</code>
         */
        java.lang.String getGeolocation();

        /**
         * <pre>
         * Description of the geolocation (e.g., "Mountain View, CA")
         * </pre>
         *
         * <code>optional string geolocation = 2;</code>
         */
        com.google.protobuf.ByteString
        getGeolocationBytes();

        /**
         * <code>optional string photo_uri = 3;</code>
         */
        boolean hasPhotoUri();

        /**
         * <code>optional string photo_uri = 3;</code>
         */
        java.lang.String getPhotoUri();

        /**
         * <code>optional string photo_uri = 3;</code>
         */
        com.google.protobuf.ByteString
        getPhotoUriBytes();
    }

    public interface EmergencyInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>optional bool is_emergency_number = 1;</code>
         */
        boolean hasIsEmergencyNumber();

        /**
         * <code>optional bool is_emergency_number = 1;</code>
         */
        boolean getIsEmergencyNumber();
    }

    public interface MigratedInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         * The display name
         * </pre>
         *
         * <code>optional string name = 1;</code>
         */
        boolean hasName();

        /**
         * <pre>
         * The display name
         * </pre>
         *
         * <code>optional string name = 1;</code>
         */
        java.lang.String getName();

        /**
         * <pre>
         * The display name
         * </pre>
         *
         * <code>optional string name = 1;</code>
         */
        com.google.protobuf.ByteString
        getNameBytes();

        /**
         * <pre>
         * Display label, i.e. "Home", "Mobile"
         * </pre>
         *
         * <code>optional string label = 2;</code>
         */
        boolean hasLabel();

        /**
         * <pre>
         * Display label, i.e. "Home", "Mobile"
         * </pre>
         *
         * <code>optional string label = 2;</code>
         */
        java.lang.String getLabel();

        /**
         * <pre>
         * Display label, i.e. "Home", "Mobile"
         * </pre>
         *
         * <code>optional string label = 2;</code>
         */
        com.google.protobuf.ByteString
        getLabelBytes();

        /**
         * <code>optional string photo_uri = 3;</code>
         */
        boolean hasPhotoUri();

        /**
         * <code>optional string photo_uri = 3;</code>
         */
        java.lang.String getPhotoUri();

        /**
         * <code>optional string photo_uri = 3;</code>
         */
        com.google.protobuf.ByteString
        getPhotoUriBytes();

        /**
         * <code>optional bool is_business = 4;</code>
         */
        boolean hasIsBusiness();

        /**
         * <code>optional bool is_business = 4;</code>
         */
        boolean getIsBusiness();

        /**
         * <pre>
         * ContactSource.Type
         * </pre>
         *
         * <code>optional int32 source_type = 5;</code>
         */
        boolean hasSourceType();

        /**
         * <pre>
         * ContactSource.Type
         * </pre>
         *
         * <code>optional int32 source_type = 5;</code>
         */
        int getSourceType();
    }

    /**
     * <pre>
     * Information about a PhoneNumber retrieved from CP2.
     * </pre>
     * <p>
     * Protobuf type {@code com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info}
     */
    public static final class Cp2Info extends
            com.google.protobuf.GeneratedMessageLite<
                    Cp2Info, Cp2Info.Builder> implements
            // @@protoc_insertion_point(message_implements:com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info)
            Cp2InfoOrBuilder {
        public static final int CP2_CONTACT_INFO_FIELD_NUMBER = 1;
        public static final int IS_INCOMPLETE_FIELD_NUMBER = 2;
        // @@protoc_insertion_point(class_scope:com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info)
        private static final com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info DEFAULT_INSTANCE;
        private static volatile com.google.protobuf.Parser<Cp2Info> PARSER;

        static {
            DEFAULT_INSTANCE = new Cp2Info();
            DEFAULT_INSTANCE.makeImmutable();
        }

        private int bitField0_;
        private com.google.protobuf.Internal.ProtobufList<com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo> cp2ContactInfo_;
        private boolean isIncomplete_;

        private Cp2Info() {
            cp2ContactInfo_ = emptyProtobufList();
            isIncomplete_ = false;
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<Cp2Info> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }

        /**
         * <pre>
         * Repeated because one phone number can be associated with multiple CP2
         * contacts.
         * Empty if there is no CP2 contact information for the number.
         * </pre>
         *
         * <code>repeated .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo cp2_contact_info = 1;</code>
         */
        public java.util.List<com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo> getCp2ContactInfoList() {
            return cp2ContactInfo_;
        }

        /**
         * <pre>
         * Repeated because one phone number can be associated with multiple CP2
         * contacts.
         * Empty if there is no CP2 contact information for the number.
         * </pre>
         *
         * <code>repeated .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo cp2_contact_info = 1;</code>
         */
        public java.util.List<? extends com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfoOrBuilder>
        getCp2ContactInfoOrBuilderList() {
            return cp2ContactInfo_;
        }

        /**
         * <pre>
         * Repeated because one phone number can be associated with multiple CP2
         * contacts.
         * Empty if there is no CP2 contact information for the number.
         * </pre>
         *
         * <code>repeated .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo cp2_contact_info = 1;</code>
         */
        public int getCp2ContactInfoCount() {
            return cp2ContactInfo_.size();
        }

        /**
         * <pre>
         * Repeated because one phone number can be associated with multiple CP2
         * contacts.
         * Empty if there is no CP2 contact information for the number.
         * </pre>
         *
         * <code>repeated .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo cp2_contact_info = 1;</code>
         */
        public com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo getCp2ContactInfo(int index) {
            return cp2ContactInfo_.get(index);
        }

        /**
         * <pre>
         * Repeated because one phone number can be associated with multiple CP2
         * contacts.
         * Empty if there is no CP2 contact information for the number.
         * </pre>
         *
         * <code>repeated .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo cp2_contact_info = 1;</code>
         */
        public com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfoOrBuilder getCp2ContactInfoOrBuilder(
                int index) {
            return cp2ContactInfo_.get(index);
        }

        private void ensureCp2ContactInfoIsMutable() {
            if (!cp2ContactInfo_.isModifiable()) {
                cp2ContactInfo_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(cp2ContactInfo_);
            }
        }

        /**
         * <pre>
         * Repeated because one phone number can be associated with multiple CP2
         * contacts.
         * Empty if there is no CP2 contact information for the number.
         * </pre>
         *
         * <code>repeated .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo cp2_contact_info = 1;</code>
         */
        private void setCp2ContactInfo(
                int index, com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureCp2ContactInfoIsMutable();
            cp2ContactInfo_.set(index, value);
        }

        /**
         * <pre>
         * Repeated because one phone number can be associated with multiple CP2
         * contacts.
         * Empty if there is no CP2 contact information for the number.
         * </pre>
         *
         * <code>repeated .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo cp2_contact_info = 1;</code>
         */
        private void setCp2ContactInfo(
                int index, com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo.Builder builderForValue) {
            ensureCp2ContactInfoIsMutable();
            cp2ContactInfo_.set(index, builderForValue.build());
        }

        /**
         * <pre>
         * Repeated because one phone number can be associated with multiple CP2
         * contacts.
         * Empty if there is no CP2 contact information for the number.
         * </pre>
         *
         * <code>repeated .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo cp2_contact_info = 1;</code>
         */
        private void addCp2ContactInfo(com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureCp2ContactInfoIsMutable();
            cp2ContactInfo_.add(value);
        }

        /**
         * <pre>
         * Repeated because one phone number can be associated with multiple CP2
         * contacts.
         * Empty if there is no CP2 contact information for the number.
         * </pre>
         *
         * <code>repeated .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo cp2_contact_info = 1;</code>
         */
        private void addCp2ContactInfo(
                int index, com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureCp2ContactInfoIsMutable();
            cp2ContactInfo_.add(index, value);
        }

        /**
         * <pre>
         * Repeated because one phone number can be associated with multiple CP2
         * contacts.
         * Empty if there is no CP2 contact information for the number.
         * </pre>
         *
         * <code>repeated .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo cp2_contact_info = 1;</code>
         */
        private void addCp2ContactInfo(
                com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo.Builder builderForValue) {
            ensureCp2ContactInfoIsMutable();
            cp2ContactInfo_.add(builderForValue.build());
        }

        /**
         * <pre>
         * Repeated because one phone number can be associated with multiple CP2
         * contacts.
         * Empty if there is no CP2 contact information for the number.
         * </pre>
         *
         * <code>repeated .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo cp2_contact_info = 1;</code>
         */
        private void addCp2ContactInfo(
                int index, com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo.Builder builderForValue) {
            ensureCp2ContactInfoIsMutable();
            cp2ContactInfo_.add(index, builderForValue.build());
        }

        /**
         * <pre>
         * Repeated because one phone number can be associated with multiple CP2
         * contacts.
         * Empty if there is no CP2 contact information for the number.
         * </pre>
         *
         * <code>repeated .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo cp2_contact_info = 1;</code>
         */
        private void addAllCp2ContactInfo(
                java.lang.Iterable<? extends com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo> values) {
            ensureCp2ContactInfoIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, cp2ContactInfo_);
        }

        /**
         * <pre>
         * Repeated because one phone number can be associated with multiple CP2
         * contacts.
         * Empty if there is no CP2 contact information for the number.
         * </pre>
         *
         * <code>repeated .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo cp2_contact_info = 1;</code>
         */
        private void clearCp2ContactInfo() {
            cp2ContactInfo_ = emptyProtobufList();
        }

        /**
         * <pre>
         * Repeated because one phone number can be associated with multiple CP2
         * contacts.
         * Empty if there is no CP2 contact information for the number.
         * </pre>
         *
         * <code>repeated .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo cp2_contact_info = 1;</code>
         */
        private void removeCp2ContactInfo(int index) {
            ensureCp2ContactInfoIsMutable();
            cp2ContactInfo_.remove(index);
        }

        /**
         * <pre>
         * The information for this number is incomplete. This can happen when the
         * call log is requested to be updated but there are many invalid numbers
         * and the update cannot be performed efficiently. In this case, the call
         * log needs to query for the CP2 information at render time.
         * </pre>
         *
         * <code>optional bool is_incomplete = 2;</code>
         */
        public boolean hasIsIncomplete() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <pre>
         * The information for this number is incomplete. This can happen when the
         * call log is requested to be updated but there are many invalid numbers
         * and the update cannot be performed efficiently. In this case, the call
         * log needs to query for the CP2 information at render time.
         * </pre>
         *
         * <code>optional bool is_incomplete = 2;</code>
         */
        public boolean getIsIncomplete() {
            return isIncomplete_;
        }

        /**
         * <pre>
         * The information for this number is incomplete. This can happen when the
         * call log is requested to be updated but there are many invalid numbers
         * and the update cannot be performed efficiently. In this case, the call
         * log needs to query for the CP2 information at render time.
         * </pre>
         *
         * <code>optional bool is_incomplete = 2;</code>
         */
        private void setIsIncomplete(boolean value) {
            bitField0_ |= 0x00000001;
            isIncomplete_ = value;
        }

        /**
         * <pre>
         * The information for this number is incomplete. This can happen when the
         * call log is requested to be updated but there are many invalid numbers
         * and the update cannot be performed efficiently. In this case, the call
         * log needs to query for the CP2 information at render time.
         * </pre>
         *
         * <code>optional bool is_incomplete = 2;</code>
         */
        private void clearIsIncomplete() {
            bitField0_ = (bitField0_ & ~0x00000001);
            isIncomplete_ = false;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            for (int i = 0; i < cp2ContactInfo_.size(); i++) {
                output.writeMessage(1, cp2ContactInfo_.get(i));
            }
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeBool(2, isIncomplete_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            for (int i = 0; i < cp2ContactInfo_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, cp2ContactInfo_.get(i));
            }
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(2, isIncomplete_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    cp2ContactInfo_.makeImmutable();
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info other = (com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info) arg1;
                    cp2ContactInfo_ = visitor.visitList(cp2ContactInfo_, other.cp2ContactInfo_);
                    isIncomplete_ = visitor.visitBoolean(
                            hasIsIncomplete(), isIncomplete_,
                            other.hasIsIncomplete(), other.isIncomplete_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                        bitField0_ |= other.bitField0_;
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!parseUnknownField(tag, input)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 10: {
                                    if (!cp2ContactInfo_.isModifiable()) {
                                        cp2ContactInfo_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(cp2ContactInfo_);
                                    }
                                    cp2ContactInfo_.add(
                                            input.readMessage(com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo.parser(), extensionRegistry));
                                    break;
                                }
                                case 16: {
                                    bitField0_ |= 0x00000001;
                                    isIncomplete_ = input.readBool();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    }
                }
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {
                        synchronized (com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.class) {
                            if (PARSER == null) {
                                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                            }
                        }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }

        public interface Cp2ContactInfoOrBuilder extends
                // @@protoc_insertion_point(interface_extends:com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo)
                com.google.protobuf.MessageLiteOrBuilder {

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME_PRIMARY
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.DISPLAY_NAME_PRIMARY
             * </pre>
             *
             * <code>optional string name = 1;</code>
             */
            boolean hasName();

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME_PRIMARY
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.DISPLAY_NAME_PRIMARY
             * </pre>
             *
             * <code>optional string name = 1;</code>
             */
            java.lang.String getName();

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME_PRIMARY
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.DISPLAY_NAME_PRIMARY
             * </pre>
             *
             * <code>optional string name = 1;</code>
             */
            com.google.protobuf.ByteString
            getNameBytes();

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.PHOTO_THUMBNAIL_URI
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.PHOTO_THUMBNAIL_URI
             * </pre>
             *
             * <code>optional string photo_thumbnail_uri = 2;</code>
             */
            boolean hasPhotoThumbnailUri();

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.PHOTO_THUMBNAIL_URI
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.PHOTO_THUMBNAIL_URI
             * </pre>
             *
             * <code>optional string photo_thumbnail_uri = 2;</code>
             */
            java.lang.String getPhotoThumbnailUri();

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.PHOTO_THUMBNAIL_URI
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.PHOTO_THUMBNAIL_URI
             * </pre>
             *
             * <code>optional string photo_thumbnail_uri = 2;</code>
             */
            com.google.protobuf.ByteString
            getPhotoThumbnailUriBytes();

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.PHOTO_URI
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.PHOTO_URI
             * </pre>
             *
             * <code>optional string photo_uri = 3;</code>
             */
            boolean hasPhotoUri();

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.PHOTO_URI
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.PHOTO_URI
             * </pre>
             *
             * <code>optional string photo_uri = 3;</code>
             */
            java.lang.String getPhotoUri();

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.PHOTO_URI
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.PHOTO_URI
             * </pre>
             *
             * <code>optional string photo_uri = 3;</code>
             */
            com.google.protobuf.ByteString
            getPhotoUriBytes();

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.PHOTO_ID
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.PHOTO_ID
             * </pre>
             *
             * <code>optional fixed64 photo_id = 4;</code>
             */
            boolean hasPhotoId();

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.PHOTO_ID
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.PHOTO_ID
             * </pre>
             *
             * <code>optional fixed64 photo_id = 4;</code>
             */
            long getPhotoId();

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.LABEL
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.LABEL
             * The value can be "Home", "Mobile", ect.
             * </pre>
             *
             * <code>optional string label = 5;</code>
             */
            boolean hasLabel();

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.LABEL
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.LABEL
             * The value can be "Home", "Mobile", ect.
             * </pre>
             *
             * <code>optional string label = 5;</code>
             */
            java.lang.String getLabel();

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.LABEL
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.LABEL
             * The value can be "Home", "Mobile", ect.
             * </pre>
             *
             * <code>optional string label = 5;</code>
             */
            com.google.protobuf.ByteString
            getLabelBytes();

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.CONTACT_ID
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.CONTACT_ID
             * </pre>
             *
             * <code>optional fixed64 contact_id = 6;</code>
             */
            boolean hasContactId();

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.CONTACT_ID
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.CONTACT_ID
             * </pre>
             *
             * <code>optional fixed64 contact_id = 6;</code>
             */
            long getContactId();

            /**
             * <pre>
             * For a contact in the default directory:
             *   constructed based on
             *   android.provider.ContactsContract.CommonDataKinds.Phone.LOOKUP_KEY
             * For a contact in other directories:
             *   constructed based on
             *   android.provider.ContactsContract.PhoneLookup.LOOKUP_KEY
             * </pre>
             *
             * <code>optional string lookup_uri = 7;</code>
             */
            boolean hasLookupUri();

            /**
             * <pre>
             * For a contact in the default directory:
             *   constructed based on
             *   android.provider.ContactsContract.CommonDataKinds.Phone.LOOKUP_KEY
             * For a contact in other directories:
             *   constructed based on
             *   android.provider.ContactsContract.PhoneLookup.LOOKUP_KEY
             * </pre>
             *
             * <code>optional string lookup_uri = 7;</code>
             */
            java.lang.String getLookupUri();

            /**
             * <pre>
             * For a contact in the default directory:
             *   constructed based on
             *   android.provider.ContactsContract.CommonDataKinds.Phone.LOOKUP_KEY
             * For a contact in other directories:
             *   constructed based on
             *   android.provider.ContactsContract.PhoneLookup.LOOKUP_KEY
             * </pre>
             *
             * <code>optional string lookup_uri = 7;</code>
             */
            com.google.protobuf.ByteString
            getLookupUriBytes();

            /**
             * <pre>
             * For a contact in the default directory:
             *    value set based on
             *    android.provider.ContactsContract.CommonDataKinds.Phone.CARRIER_PRESENCE
             * For a contact in other directories: always false.
             *    This is because we lookup contacts in other directories via
             *    android.provider.ContactsContract.PhoneLookup, to which carrier
             *    presence info is not directly accessible.
             * </pre>
             *
             * <code>optional bool can_support_carrier_video_call = 8;</code>
             */
            boolean hasCanSupportCarrierVideoCall();

            /**
             * <pre>
             * For a contact in the default directory:
             *    value set based on
             *    android.provider.ContactsContract.CommonDataKinds.Phone.CARRIER_PRESENCE
             * For a contact in other directories: always false.
             *    This is because we lookup contacts in other directories via
             *    android.provider.ContactsContract.PhoneLookup, to which carrier
             *    presence info is not directly accessible.
             * </pre>
             *
             * <code>optional bool can_support_carrier_video_call = 8;</code>
             */
            boolean getCanSupportCarrierVideoCall();
        }

        /**
         * <pre>
         * Information about a single contact.
         * Next ID: 9
         * </pre>
         * <p>
         * Protobuf type {@code com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo}
         */
        public static final class Cp2ContactInfo extends
                com.google.protobuf.GeneratedMessageLite<
                        Cp2ContactInfo, Cp2ContactInfo.Builder> implements
                // @@protoc_insertion_point(message_implements:com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo)
                Cp2ContactInfoOrBuilder {
            public static final int NAME_FIELD_NUMBER = 1;
            public static final int PHOTO_THUMBNAIL_URI_FIELD_NUMBER = 2;
            public static final int PHOTO_URI_FIELD_NUMBER = 3;
            public static final int PHOTO_ID_FIELD_NUMBER = 4;
            public static final int LABEL_FIELD_NUMBER = 5;
            public static final int CONTACT_ID_FIELD_NUMBER = 6;
            public static final int LOOKUP_URI_FIELD_NUMBER = 7;
            public static final int CAN_SUPPORT_CARRIER_VIDEO_CALL_FIELD_NUMBER = 8;
            // @@protoc_insertion_point(class_scope:com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo)
            private static final com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo DEFAULT_INSTANCE;
            private static volatile com.google.protobuf.Parser<Cp2ContactInfo> PARSER;

            static {
                DEFAULT_INSTANCE = new Cp2ContactInfo();
                DEFAULT_INSTANCE.makeImmutable();
            }

            private int bitField0_;
            private java.lang.String name_;
            private java.lang.String photoThumbnailUri_;
            private java.lang.String photoUri_;
            private long photoId_;
            private java.lang.String label_;
            private long contactId_;
            private java.lang.String lookupUri_;
            private boolean canSupportCarrierVideoCall_;

            private Cp2ContactInfo() {
                name_ = "";
                photoThumbnailUri_ = "";
                photoUri_ = "";
                photoId_ = 0L;
                label_ = "";
                contactId_ = 0L;
                lookupUri_ = "";
                canSupportCarrierVideoCall_ = false;
            }

            public static com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo parseFrom(
                    com.google.protobuf.ByteString data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(
                        DEFAULT_INSTANCE, data);
            }

            public static com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo parseFrom(
                    com.google.protobuf.ByteString data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(
                        DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo parseFrom(byte[] data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(
                        DEFAULT_INSTANCE, data);
            }

            public static com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo parseFrom(
                    byte[] data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(
                        DEFAULT_INSTANCE, data, extensionRegistry);
            }

            public static com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo parseFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(
                        DEFAULT_INSTANCE, input);
            }

            public static com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo parseFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(
                        DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo parseDelimitedFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return parseDelimitedFrom(DEFAULT_INSTANCE, input);
            }

            public static com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo parseDelimitedFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo parseFrom(
                    com.google.protobuf.CodedInputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(
                        DEFAULT_INSTANCE, input);
            }

            public static com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo parseFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(
                        DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            public static com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            public static com.google.protobuf.Parser<Cp2ContactInfo> parser() {
                return DEFAULT_INSTANCE.getParserForType();
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME_PRIMARY
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.DISPLAY_NAME_PRIMARY
             * </pre>
             *
             * <code>optional string name = 1;</code>
             */
            public boolean hasName() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME_PRIMARY
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.DISPLAY_NAME_PRIMARY
             * </pre>
             *
             * <code>optional string name = 1;</code>
             */
            public java.lang.String getName() {
                return name_;
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME_PRIMARY
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.DISPLAY_NAME_PRIMARY
             * </pre>
             *
             * <code>optional string name = 1;</code>
             */
            private void setName(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                name_ = value;
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME_PRIMARY
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.DISPLAY_NAME_PRIMARY
             * </pre>
             *
             * <code>optional string name = 1;</code>
             */
            public com.google.protobuf.ByteString
            getNameBytes() {
                return com.google.protobuf.ByteString.copyFromUtf8(name_);
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME_PRIMARY
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.DISPLAY_NAME_PRIMARY
             * </pre>
             *
             * <code>optional string name = 1;</code>
             */
            private void setNameBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                name_ = value.toStringUtf8();
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME_PRIMARY
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.DISPLAY_NAME_PRIMARY
             * </pre>
             *
             * <code>optional string name = 1;</code>
             */
            private void clearName() {
                bitField0_ = (bitField0_ & ~0x00000001);
                name_ = getDefaultInstance().getName();
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.PHOTO_THUMBNAIL_URI
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.PHOTO_THUMBNAIL_URI
             * </pre>
             *
             * <code>optional string photo_thumbnail_uri = 2;</code>
             */
            public boolean hasPhotoThumbnailUri() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.PHOTO_THUMBNAIL_URI
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.PHOTO_THUMBNAIL_URI
             * </pre>
             *
             * <code>optional string photo_thumbnail_uri = 2;</code>
             */
            public java.lang.String getPhotoThumbnailUri() {
                return photoThumbnailUri_;
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.PHOTO_THUMBNAIL_URI
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.PHOTO_THUMBNAIL_URI
             * </pre>
             *
             * <code>optional string photo_thumbnail_uri = 2;</code>
             */
            private void setPhotoThumbnailUri(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                photoThumbnailUri_ = value;
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.PHOTO_THUMBNAIL_URI
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.PHOTO_THUMBNAIL_URI
             * </pre>
             *
             * <code>optional string photo_thumbnail_uri = 2;</code>
             */
            public com.google.protobuf.ByteString
            getPhotoThumbnailUriBytes() {
                return com.google.protobuf.ByteString.copyFromUtf8(photoThumbnailUri_);
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.PHOTO_THUMBNAIL_URI
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.PHOTO_THUMBNAIL_URI
             * </pre>
             *
             * <code>optional string photo_thumbnail_uri = 2;</code>
             */
            private void setPhotoThumbnailUriBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                photoThumbnailUri_ = value.toStringUtf8();
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.PHOTO_THUMBNAIL_URI
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.PHOTO_THUMBNAIL_URI
             * </pre>
             *
             * <code>optional string photo_thumbnail_uri = 2;</code>
             */
            private void clearPhotoThumbnailUri() {
                bitField0_ = (bitField0_ & ~0x00000002);
                photoThumbnailUri_ = getDefaultInstance().getPhotoThumbnailUri();
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.PHOTO_URI
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.PHOTO_URI
             * </pre>
             *
             * <code>optional string photo_uri = 3;</code>
             */
            public boolean hasPhotoUri() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.PHOTO_URI
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.PHOTO_URI
             * </pre>
             *
             * <code>optional string photo_uri = 3;</code>
             */
            public java.lang.String getPhotoUri() {
                return photoUri_;
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.PHOTO_URI
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.PHOTO_URI
             * </pre>
             *
             * <code>optional string photo_uri = 3;</code>
             */
            private void setPhotoUri(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000004;
                photoUri_ = value;
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.PHOTO_URI
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.PHOTO_URI
             * </pre>
             *
             * <code>optional string photo_uri = 3;</code>
             */
            public com.google.protobuf.ByteString
            getPhotoUriBytes() {
                return com.google.protobuf.ByteString.copyFromUtf8(photoUri_);
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.PHOTO_URI
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.PHOTO_URI
             * </pre>
             *
             * <code>optional string photo_uri = 3;</code>
             */
            private void setPhotoUriBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000004;
                photoUri_ = value.toStringUtf8();
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.PHOTO_URI
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.PHOTO_URI
             * </pre>
             *
             * <code>optional string photo_uri = 3;</code>
             */
            private void clearPhotoUri() {
                bitField0_ = (bitField0_ & ~0x00000004);
                photoUri_ = getDefaultInstance().getPhotoUri();
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.PHOTO_ID
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.PHOTO_ID
             * </pre>
             *
             * <code>optional fixed64 photo_id = 4;</code>
             */
            public boolean hasPhotoId() {
                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.PHOTO_ID
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.PHOTO_ID
             * </pre>
             *
             * <code>optional fixed64 photo_id = 4;</code>
             */
            public long getPhotoId() {
                return photoId_;
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.PHOTO_ID
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.PHOTO_ID
             * </pre>
             *
             * <code>optional fixed64 photo_id = 4;</code>
             */
            private void setPhotoId(long value) {
                bitField0_ |= 0x00000008;
                photoId_ = value;
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.PHOTO_ID
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.PHOTO_ID
             * </pre>
             *
             * <code>optional fixed64 photo_id = 4;</code>
             */
            private void clearPhotoId() {
                bitField0_ = (bitField0_ & ~0x00000008);
                photoId_ = 0L;
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.LABEL
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.LABEL
             * The value can be "Home", "Mobile", ect.
             * </pre>
             *
             * <code>optional string label = 5;</code>
             */
            public boolean hasLabel() {
                return ((bitField0_ & 0x00000010) == 0x00000010);
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.LABEL
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.LABEL
             * The value can be "Home", "Mobile", ect.
             * </pre>
             *
             * <code>optional string label = 5;</code>
             */
            public java.lang.String getLabel() {
                return label_;
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.LABEL
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.LABEL
             * The value can be "Home", "Mobile", ect.
             * </pre>
             *
             * <code>optional string label = 5;</code>
             */
            private void setLabel(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000010;
                label_ = value;
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.LABEL
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.LABEL
             * The value can be "Home", "Mobile", ect.
             * </pre>
             *
             * <code>optional string label = 5;</code>
             */
            public com.google.protobuf.ByteString
            getLabelBytes() {
                return com.google.protobuf.ByteString.copyFromUtf8(label_);
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.LABEL
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.LABEL
             * The value can be "Home", "Mobile", ect.
             * </pre>
             *
             * <code>optional string label = 5;</code>
             */
            private void setLabelBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000010;
                label_ = value.toStringUtf8();
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.LABEL
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.LABEL
             * The value can be "Home", "Mobile", ect.
             * </pre>
             *
             * <code>optional string label = 5;</code>
             */
            private void clearLabel() {
                bitField0_ = (bitField0_ & ~0x00000010);
                label_ = getDefaultInstance().getLabel();
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.CONTACT_ID
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.CONTACT_ID
             * </pre>
             *
             * <code>optional fixed64 contact_id = 6;</code>
             */
            public boolean hasContactId() {
                return ((bitField0_ & 0x00000020) == 0x00000020);
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.CONTACT_ID
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.CONTACT_ID
             * </pre>
             *
             * <code>optional fixed64 contact_id = 6;</code>
             */
            public long getContactId() {
                return contactId_;
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.CONTACT_ID
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.CONTACT_ID
             * </pre>
             *
             * <code>optional fixed64 contact_id = 6;</code>
             */
            private void setContactId(long value) {
                bitField0_ |= 0x00000020;
                contactId_ = value;
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *   android.provider.ContactsContract.CommonDataKinds.Phone.CONTACT_ID
             * For a contact in other directories:
             *   android.provider.ContactsContract.PhoneLookup.CONTACT_ID
             * </pre>
             *
             * <code>optional fixed64 contact_id = 6;</code>
             */
            private void clearContactId() {
                bitField0_ = (bitField0_ & ~0x00000020);
                contactId_ = 0L;
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *   constructed based on
             *   android.provider.ContactsContract.CommonDataKinds.Phone.LOOKUP_KEY
             * For a contact in other directories:
             *   constructed based on
             *   android.provider.ContactsContract.PhoneLookup.LOOKUP_KEY
             * </pre>
             *
             * <code>optional string lookup_uri = 7;</code>
             */
            public boolean hasLookupUri() {
                return ((bitField0_ & 0x00000040) == 0x00000040);
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *   constructed based on
             *   android.provider.ContactsContract.CommonDataKinds.Phone.LOOKUP_KEY
             * For a contact in other directories:
             *   constructed based on
             *   android.provider.ContactsContract.PhoneLookup.LOOKUP_KEY
             * </pre>
             *
             * <code>optional string lookup_uri = 7;</code>
             */
            public java.lang.String getLookupUri() {
                return lookupUri_;
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *   constructed based on
             *   android.provider.ContactsContract.CommonDataKinds.Phone.LOOKUP_KEY
             * For a contact in other directories:
             *   constructed based on
             *   android.provider.ContactsContract.PhoneLookup.LOOKUP_KEY
             * </pre>
             *
             * <code>optional string lookup_uri = 7;</code>
             */
            private void setLookupUri(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000040;
                lookupUri_ = value;
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *   constructed based on
             *   android.provider.ContactsContract.CommonDataKinds.Phone.LOOKUP_KEY
             * For a contact in other directories:
             *   constructed based on
             *   android.provider.ContactsContract.PhoneLookup.LOOKUP_KEY
             * </pre>
             *
             * <code>optional string lookup_uri = 7;</code>
             */
            public com.google.protobuf.ByteString
            getLookupUriBytes() {
                return com.google.protobuf.ByteString.copyFromUtf8(lookupUri_);
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *   constructed based on
             *   android.provider.ContactsContract.CommonDataKinds.Phone.LOOKUP_KEY
             * For a contact in other directories:
             *   constructed based on
             *   android.provider.ContactsContract.PhoneLookup.LOOKUP_KEY
             * </pre>
             *
             * <code>optional string lookup_uri = 7;</code>
             */
            private void setLookupUriBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000040;
                lookupUri_ = value.toStringUtf8();
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *   constructed based on
             *   android.provider.ContactsContract.CommonDataKinds.Phone.LOOKUP_KEY
             * For a contact in other directories:
             *   constructed based on
             *   android.provider.ContactsContract.PhoneLookup.LOOKUP_KEY
             * </pre>
             *
             * <code>optional string lookup_uri = 7;</code>
             */
            private void clearLookupUri() {
                bitField0_ = (bitField0_ & ~0x00000040);
                lookupUri_ = getDefaultInstance().getLookupUri();
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *    value set based on
             *    android.provider.ContactsContract.CommonDataKinds.Phone.CARRIER_PRESENCE
             * For a contact in other directories: always false.
             *    This is because we lookup contacts in other directories via
             *    android.provider.ContactsContract.PhoneLookup, to which carrier
             *    presence info is not directly accessible.
             * </pre>
             *
             * <code>optional bool can_support_carrier_video_call = 8;</code>
             */
            public boolean hasCanSupportCarrierVideoCall() {
                return ((bitField0_ & 0x00000080) == 0x00000080);
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *    value set based on
             *    android.provider.ContactsContract.CommonDataKinds.Phone.CARRIER_PRESENCE
             * For a contact in other directories: always false.
             *    This is because we lookup contacts in other directories via
             *    android.provider.ContactsContract.PhoneLookup, to which carrier
             *    presence info is not directly accessible.
             * </pre>
             *
             * <code>optional bool can_support_carrier_video_call = 8;</code>
             */
            public boolean getCanSupportCarrierVideoCall() {
                return canSupportCarrierVideoCall_;
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *    value set based on
             *    android.provider.ContactsContract.CommonDataKinds.Phone.CARRIER_PRESENCE
             * For a contact in other directories: always false.
             *    This is because we lookup contacts in other directories via
             *    android.provider.ContactsContract.PhoneLookup, to which carrier
             *    presence info is not directly accessible.
             * </pre>
             *
             * <code>optional bool can_support_carrier_video_call = 8;</code>
             */
            private void setCanSupportCarrierVideoCall(boolean value) {
                bitField0_ |= 0x00000080;
                canSupportCarrierVideoCall_ = value;
            }

            /**
             * <pre>
             * For a contact in the default directory:
             *    value set based on
             *    android.provider.ContactsContract.CommonDataKinds.Phone.CARRIER_PRESENCE
             * For a contact in other directories: always false.
             *    This is because we lookup contacts in other directories via
             *    android.provider.ContactsContract.PhoneLookup, to which carrier
             *    presence info is not directly accessible.
             * </pre>
             *
             * <code>optional bool can_support_carrier_video_call = 8;</code>
             */
            private void clearCanSupportCarrierVideoCall() {
                bitField0_ = (bitField0_ & ~0x00000080);
                canSupportCarrierVideoCall_ = false;
            }

            public void writeTo(com.google.protobuf.CodedOutputStream output)
                    throws java.io.IOException {
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                    output.writeString(1, getName());
                }
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    output.writeString(2, getPhotoThumbnailUri());
                }
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                    output.writeString(3, getPhotoUri());
                }
                if (((bitField0_ & 0x00000008) == 0x00000008)) {
                    output.writeFixed64(4, photoId_);
                }
                if (((bitField0_ & 0x00000010) == 0x00000010)) {
                    output.writeString(5, getLabel());
                }
                if (((bitField0_ & 0x00000020) == 0x00000020)) {
                    output.writeFixed64(6, contactId_);
                }
                if (((bitField0_ & 0x00000040) == 0x00000040)) {
                    output.writeString(7, getLookupUri());
                }
                if (((bitField0_ & 0x00000080) == 0x00000080)) {
                    output.writeBool(8, canSupportCarrierVideoCall_);
                }
                unknownFields.writeTo(output);
            }

            public int getSerializedSize() {
                int size = memoizedSerializedSize;
                if (size != -1) return size;

                size = 0;
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeStringSize(1, getName());
                }
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeStringSize(2, getPhotoThumbnailUri());
                }
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeStringSize(3, getPhotoUri());
                }
                if (((bitField0_ & 0x00000008) == 0x00000008)) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeFixed64Size(4, photoId_);
                }
                if (((bitField0_ & 0x00000010) == 0x00000010)) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeStringSize(5, getLabel());
                }
                if (((bitField0_ & 0x00000020) == 0x00000020)) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeFixed64Size(6, contactId_);
                }
                if (((bitField0_ & 0x00000040) == 0x00000040)) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeStringSize(7, getLookupUri());
                }
                if (((bitField0_ & 0x00000080) == 0x00000080)) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeBoolSize(8, canSupportCarrierVideoCall_);
                }
                size += unknownFields.getSerializedSize();
                memoizedSerializedSize = size;
                return size;
            }

            protected final Object dynamicMethod(
                    com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                    Object arg0, Object arg1) {
                switch (method) {
                    case NEW_MUTABLE_INSTANCE: {
                        return new com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo();
                    }
                    case IS_INITIALIZED: {
                        return DEFAULT_INSTANCE;
                    }
                    case MAKE_IMMUTABLE: {
                        return null;
                    }
                    case NEW_BUILDER: {
                        return new Builder();
                    }
                    case VISIT: {
                        Visitor visitor = (Visitor) arg0;
                        com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo other = (com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo) arg1;
                        name_ = visitor.visitString(
                                hasName(), name_,
                                other.hasName(), other.name_);
                        photoThumbnailUri_ = visitor.visitString(
                                hasPhotoThumbnailUri(), photoThumbnailUri_,
                                other.hasPhotoThumbnailUri(), other.photoThumbnailUri_);
                        photoUri_ = visitor.visitString(
                                hasPhotoUri(), photoUri_,
                                other.hasPhotoUri(), other.photoUri_);
                        photoId_ = visitor.visitLong(
                                hasPhotoId(), photoId_,
                                other.hasPhotoId(), other.photoId_);
                        label_ = visitor.visitString(
                                hasLabel(), label_,
                                other.hasLabel(), other.label_);
                        contactId_ = visitor.visitLong(
                                hasContactId(), contactId_,
                                other.hasContactId(), other.contactId_);
                        lookupUri_ = visitor.visitString(
                                hasLookupUri(), lookupUri_,
                                other.hasLookupUri(), other.lookupUri_);
                        canSupportCarrierVideoCall_ = visitor.visitBoolean(
                                hasCanSupportCarrierVideoCall(), canSupportCarrierVideoCall_,
                                other.hasCanSupportCarrierVideoCall(), other.canSupportCarrierVideoCall_);
                        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                                .INSTANCE) {
                            bitField0_ |= other.bitField0_;
                        }
                        return this;
                    }
                    case MERGE_FROM_STREAM: {
                        com.google.protobuf.CodedInputStream input =
                                (com.google.protobuf.CodedInputStream) arg0;
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                                (com.google.protobuf.ExtensionRegistryLite) arg1;
                        try {
                            boolean done = false;
                            while (!done) {
                                int tag = input.readTag();
                                switch (tag) {
                                    case 0:
                                        done = true;
                                        break;
                                    default: {
                                        if (!parseUnknownField(tag, input)) {
                                            done = true;
                                        }
                                        break;
                                    }
                                    case 10: {
                                        String s = input.readString();
                                        bitField0_ |= 0x00000001;
                                        name_ = s;
                                        break;
                                    }
                                    case 18: {
                                        String s = input.readString();
                                        bitField0_ |= 0x00000002;
                                        photoThumbnailUri_ = s;
                                        break;
                                    }
                                    case 26: {
                                        String s = input.readString();
                                        bitField0_ |= 0x00000004;
                                        photoUri_ = s;
                                        break;
                                    }
                                    case 33: {
                                        bitField0_ |= 0x00000008;
                                        photoId_ = input.readFixed64();
                                        break;
                                    }
                                    case 42: {
                                        String s = input.readString();
                                        bitField0_ |= 0x00000010;
                                        label_ = s;
                                        break;
                                    }
                                    case 49: {
                                        bitField0_ |= 0x00000020;
                                        contactId_ = input.readFixed64();
                                        break;
                                    }
                                    case 58: {
                                        String s = input.readString();
                                        bitField0_ |= 0x00000040;
                                        lookupUri_ = s;
                                        break;
                                    }
                                    case 64: {
                                        bitField0_ |= 0x00000080;
                                        canSupportCarrierVideoCall_ = input.readBool();
                                        break;
                                    }
                                }
                            }
                        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                            throw new RuntimeException(e.setUnfinishedMessage(this));
                        } catch (java.io.IOException e) {
                            throw new RuntimeException(
                                    new com.google.protobuf.InvalidProtocolBufferException(
                                            e.getMessage()).setUnfinishedMessage(this));
                        }
                    }
                    case GET_DEFAULT_INSTANCE: {
                        return DEFAULT_INSTANCE;
                    }
                    case GET_PARSER: {
                        if (PARSER == null) {
                            synchronized (com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo.class) {
                                if (PARSER == null) {
                                    PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                                }
                            }
                        }
                        return PARSER;
                    }
                }
                throw new UnsupportedOperationException();
            }

            /**
             * <pre>
             * Information about a single contact.
             * Next ID: 9
             * </pre>
             * <p>
             * Protobuf type {@code com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo}
             */
            public static final class Builder extends
                    com.google.protobuf.GeneratedMessageLite.Builder<
                            com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo, Builder> implements
                    // @@protoc_insertion_point(builder_implements:com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo)
                    com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfoOrBuilder {
                // Construct using com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo.newBuilder()
                private Builder() {
                    super(DEFAULT_INSTANCE);
                }


                /**
                 * <pre>
                 * For a contact in the default directory:
                 *   android.provider.ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME_PRIMARY
                 * For a contact in other directories:
                 *   android.provider.ContactsContract.PhoneLookup.DISPLAY_NAME_PRIMARY
                 * </pre>
                 *
                 * <code>optional string name = 1;</code>
                 */
                public boolean hasName() {
                    return instance.hasName();
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *   android.provider.ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME_PRIMARY
                 * For a contact in other directories:
                 *   android.provider.ContactsContract.PhoneLookup.DISPLAY_NAME_PRIMARY
                 * </pre>
                 *
                 * <code>optional string name = 1;</code>
                 */
                public java.lang.String getName() {
                    return instance.getName();
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *   android.provider.ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME_PRIMARY
                 * For a contact in other directories:
                 *   android.provider.ContactsContract.PhoneLookup.DISPLAY_NAME_PRIMARY
                 * </pre>
                 *
                 * <code>optional string name = 1;</code>
                 */
                public Builder setName(
                        java.lang.String value) {
                    copyOnWrite();
                    instance.setName(value);
                    return this;
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *   android.provider.ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME_PRIMARY
                 * For a contact in other directories:
                 *   android.provider.ContactsContract.PhoneLookup.DISPLAY_NAME_PRIMARY
                 * </pre>
                 *
                 * <code>optional string name = 1;</code>
                 */
                public com.google.protobuf.ByteString
                getNameBytes() {
                    return instance.getNameBytes();
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *   android.provider.ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME_PRIMARY
                 * For a contact in other directories:
                 *   android.provider.ContactsContract.PhoneLookup.DISPLAY_NAME_PRIMARY
                 * </pre>
                 *
                 * <code>optional string name = 1;</code>
                 */
                public Builder setNameBytes(
                        com.google.protobuf.ByteString value) {
                    copyOnWrite();
                    instance.setNameBytes(value);
                    return this;
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *   android.provider.ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME_PRIMARY
                 * For a contact in other directories:
                 *   android.provider.ContactsContract.PhoneLookup.DISPLAY_NAME_PRIMARY
                 * </pre>
                 *
                 * <code>optional string name = 1;</code>
                 */
                public Builder clearName() {
                    copyOnWrite();
                    instance.clearName();
                    return this;
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *   android.provider.ContactsContract.CommonDataKinds.Phone.PHOTO_THUMBNAIL_URI
                 * For a contact in other directories:
                 *   android.provider.ContactsContract.PhoneLookup.PHOTO_THUMBNAIL_URI
                 * </pre>
                 *
                 * <code>optional string photo_thumbnail_uri = 2;</code>
                 */
                public boolean hasPhotoThumbnailUri() {
                    return instance.hasPhotoThumbnailUri();
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *   android.provider.ContactsContract.CommonDataKinds.Phone.PHOTO_THUMBNAIL_URI
                 * For a contact in other directories:
                 *   android.provider.ContactsContract.PhoneLookup.PHOTO_THUMBNAIL_URI
                 * </pre>
                 *
                 * <code>optional string photo_thumbnail_uri = 2;</code>
                 */
                public java.lang.String getPhotoThumbnailUri() {
                    return instance.getPhotoThumbnailUri();
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *   android.provider.ContactsContract.CommonDataKinds.Phone.PHOTO_THUMBNAIL_URI
                 * For a contact in other directories:
                 *   android.provider.ContactsContract.PhoneLookup.PHOTO_THUMBNAIL_URI
                 * </pre>
                 *
                 * <code>optional string photo_thumbnail_uri = 2;</code>
                 */
                public Builder setPhotoThumbnailUri(
                        java.lang.String value) {
                    copyOnWrite();
                    instance.setPhotoThumbnailUri(value);
                    return this;
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *   android.provider.ContactsContract.CommonDataKinds.Phone.PHOTO_THUMBNAIL_URI
                 * For a contact in other directories:
                 *   android.provider.ContactsContract.PhoneLookup.PHOTO_THUMBNAIL_URI
                 * </pre>
                 *
                 * <code>optional string photo_thumbnail_uri = 2;</code>
                 */
                public com.google.protobuf.ByteString
                getPhotoThumbnailUriBytes() {
                    return instance.getPhotoThumbnailUriBytes();
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *   android.provider.ContactsContract.CommonDataKinds.Phone.PHOTO_THUMBNAIL_URI
                 * For a contact in other directories:
                 *   android.provider.ContactsContract.PhoneLookup.PHOTO_THUMBNAIL_URI
                 * </pre>
                 *
                 * <code>optional string photo_thumbnail_uri = 2;</code>
                 */
                public Builder setPhotoThumbnailUriBytes(
                        com.google.protobuf.ByteString value) {
                    copyOnWrite();
                    instance.setPhotoThumbnailUriBytes(value);
                    return this;
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *   android.provider.ContactsContract.CommonDataKinds.Phone.PHOTO_THUMBNAIL_URI
                 * For a contact in other directories:
                 *   android.provider.ContactsContract.PhoneLookup.PHOTO_THUMBNAIL_URI
                 * </pre>
                 *
                 * <code>optional string photo_thumbnail_uri = 2;</code>
                 */
                public Builder clearPhotoThumbnailUri() {
                    copyOnWrite();
                    instance.clearPhotoThumbnailUri();
                    return this;
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *   android.provider.ContactsContract.CommonDataKinds.Phone.PHOTO_URI
                 * For a contact in other directories:
                 *   android.provider.ContactsContract.PhoneLookup.PHOTO_URI
                 * </pre>
                 *
                 * <code>optional string photo_uri = 3;</code>
                 */
                public boolean hasPhotoUri() {
                    return instance.hasPhotoUri();
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *   android.provider.ContactsContract.CommonDataKinds.Phone.PHOTO_URI
                 * For a contact in other directories:
                 *   android.provider.ContactsContract.PhoneLookup.PHOTO_URI
                 * </pre>
                 *
                 * <code>optional string photo_uri = 3;</code>
                 */
                public java.lang.String getPhotoUri() {
                    return instance.getPhotoUri();
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *   android.provider.ContactsContract.CommonDataKinds.Phone.PHOTO_URI
                 * For a contact in other directories:
                 *   android.provider.ContactsContract.PhoneLookup.PHOTO_URI
                 * </pre>
                 *
                 * <code>optional string photo_uri = 3;</code>
                 */
                public Builder setPhotoUri(
                        java.lang.String value) {
                    copyOnWrite();
                    instance.setPhotoUri(value);
                    return this;
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *   android.provider.ContactsContract.CommonDataKinds.Phone.PHOTO_URI
                 * For a contact in other directories:
                 *   android.provider.ContactsContract.PhoneLookup.PHOTO_URI
                 * </pre>
                 *
                 * <code>optional string photo_uri = 3;</code>
                 */
                public com.google.protobuf.ByteString
                getPhotoUriBytes() {
                    return instance.getPhotoUriBytes();
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *   android.provider.ContactsContract.CommonDataKinds.Phone.PHOTO_URI
                 * For a contact in other directories:
                 *   android.provider.ContactsContract.PhoneLookup.PHOTO_URI
                 * </pre>
                 *
                 * <code>optional string photo_uri = 3;</code>
                 */
                public Builder setPhotoUriBytes(
                        com.google.protobuf.ByteString value) {
                    copyOnWrite();
                    instance.setPhotoUriBytes(value);
                    return this;
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *   android.provider.ContactsContract.CommonDataKinds.Phone.PHOTO_URI
                 * For a contact in other directories:
                 *   android.provider.ContactsContract.PhoneLookup.PHOTO_URI
                 * </pre>
                 *
                 * <code>optional string photo_uri = 3;</code>
                 */
                public Builder clearPhotoUri() {
                    copyOnWrite();
                    instance.clearPhotoUri();
                    return this;
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *   android.provider.ContactsContract.CommonDataKinds.Phone.PHOTO_ID
                 * For a contact in other directories:
                 *   android.provider.ContactsContract.PhoneLookup.PHOTO_ID
                 * </pre>
                 *
                 * <code>optional fixed64 photo_id = 4;</code>
                 */
                public boolean hasPhotoId() {
                    return instance.hasPhotoId();
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *   android.provider.ContactsContract.CommonDataKinds.Phone.PHOTO_ID
                 * For a contact in other directories:
                 *   android.provider.ContactsContract.PhoneLookup.PHOTO_ID
                 * </pre>
                 *
                 * <code>optional fixed64 photo_id = 4;</code>
                 */
                public long getPhotoId() {
                    return instance.getPhotoId();
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *   android.provider.ContactsContract.CommonDataKinds.Phone.PHOTO_ID
                 * For a contact in other directories:
                 *   android.provider.ContactsContract.PhoneLookup.PHOTO_ID
                 * </pre>
                 *
                 * <code>optional fixed64 photo_id = 4;</code>
                 */
                public Builder setPhotoId(long value) {
                    copyOnWrite();
                    instance.setPhotoId(value);
                    return this;
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *   android.provider.ContactsContract.CommonDataKinds.Phone.PHOTO_ID
                 * For a contact in other directories:
                 *   android.provider.ContactsContract.PhoneLookup.PHOTO_ID
                 * </pre>
                 *
                 * <code>optional fixed64 photo_id = 4;</code>
                 */
                public Builder clearPhotoId() {
                    copyOnWrite();
                    instance.clearPhotoId();
                    return this;
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *   android.provider.ContactsContract.CommonDataKinds.Phone.LABEL
                 * For a contact in other directories:
                 *   android.provider.ContactsContract.PhoneLookup.LABEL
                 * The value can be "Home", "Mobile", ect.
                 * </pre>
                 *
                 * <code>optional string label = 5;</code>
                 */
                public boolean hasLabel() {
                    return instance.hasLabel();
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *   android.provider.ContactsContract.CommonDataKinds.Phone.LABEL
                 * For a contact in other directories:
                 *   android.provider.ContactsContract.PhoneLookup.LABEL
                 * The value can be "Home", "Mobile", ect.
                 * </pre>
                 *
                 * <code>optional string label = 5;</code>
                 */
                public java.lang.String getLabel() {
                    return instance.getLabel();
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *   android.provider.ContactsContract.CommonDataKinds.Phone.LABEL
                 * For a contact in other directories:
                 *   android.provider.ContactsContract.PhoneLookup.LABEL
                 * The value can be "Home", "Mobile", ect.
                 * </pre>
                 *
                 * <code>optional string label = 5;</code>
                 */
                public Builder setLabel(
                        java.lang.String value) {
                    copyOnWrite();
                    instance.setLabel(value);
                    return this;
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *   android.provider.ContactsContract.CommonDataKinds.Phone.LABEL
                 * For a contact in other directories:
                 *   android.provider.ContactsContract.PhoneLookup.LABEL
                 * The value can be "Home", "Mobile", ect.
                 * </pre>
                 *
                 * <code>optional string label = 5;</code>
                 */
                public com.google.protobuf.ByteString
                getLabelBytes() {
                    return instance.getLabelBytes();
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *   android.provider.ContactsContract.CommonDataKinds.Phone.LABEL
                 * For a contact in other directories:
                 *   android.provider.ContactsContract.PhoneLookup.LABEL
                 * The value can be "Home", "Mobile", ect.
                 * </pre>
                 *
                 * <code>optional string label = 5;</code>
                 */
                public Builder setLabelBytes(
                        com.google.protobuf.ByteString value) {
                    copyOnWrite();
                    instance.setLabelBytes(value);
                    return this;
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *   android.provider.ContactsContract.CommonDataKinds.Phone.LABEL
                 * For a contact in other directories:
                 *   android.provider.ContactsContract.PhoneLookup.LABEL
                 * The value can be "Home", "Mobile", ect.
                 * </pre>
                 *
                 * <code>optional string label = 5;</code>
                 */
                public Builder clearLabel() {
                    copyOnWrite();
                    instance.clearLabel();
                    return this;
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *   android.provider.ContactsContract.CommonDataKinds.Phone.CONTACT_ID
                 * For a contact in other directories:
                 *   android.provider.ContactsContract.PhoneLookup.CONTACT_ID
                 * </pre>
                 *
                 * <code>optional fixed64 contact_id = 6;</code>
                 */
                public boolean hasContactId() {
                    return instance.hasContactId();
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *   android.provider.ContactsContract.CommonDataKinds.Phone.CONTACT_ID
                 * For a contact in other directories:
                 *   android.provider.ContactsContract.PhoneLookup.CONTACT_ID
                 * </pre>
                 *
                 * <code>optional fixed64 contact_id = 6;</code>
                 */
                public long getContactId() {
                    return instance.getContactId();
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *   android.provider.ContactsContract.CommonDataKinds.Phone.CONTACT_ID
                 * For a contact in other directories:
                 *   android.provider.ContactsContract.PhoneLookup.CONTACT_ID
                 * </pre>
                 *
                 * <code>optional fixed64 contact_id = 6;</code>
                 */
                public Builder setContactId(long value) {
                    copyOnWrite();
                    instance.setContactId(value);
                    return this;
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *   android.provider.ContactsContract.CommonDataKinds.Phone.CONTACT_ID
                 * For a contact in other directories:
                 *   android.provider.ContactsContract.PhoneLookup.CONTACT_ID
                 * </pre>
                 *
                 * <code>optional fixed64 contact_id = 6;</code>
                 */
                public Builder clearContactId() {
                    copyOnWrite();
                    instance.clearContactId();
                    return this;
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *   constructed based on
                 *   android.provider.ContactsContract.CommonDataKinds.Phone.LOOKUP_KEY
                 * For a contact in other directories:
                 *   constructed based on
                 *   android.provider.ContactsContract.PhoneLookup.LOOKUP_KEY
                 * </pre>
                 *
                 * <code>optional string lookup_uri = 7;</code>
                 */
                public boolean hasLookupUri() {
                    return instance.hasLookupUri();
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *   constructed based on
                 *   android.provider.ContactsContract.CommonDataKinds.Phone.LOOKUP_KEY
                 * For a contact in other directories:
                 *   constructed based on
                 *   android.provider.ContactsContract.PhoneLookup.LOOKUP_KEY
                 * </pre>
                 *
                 * <code>optional string lookup_uri = 7;</code>
                 */
                public java.lang.String getLookupUri() {
                    return instance.getLookupUri();
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *   constructed based on
                 *   android.provider.ContactsContract.CommonDataKinds.Phone.LOOKUP_KEY
                 * For a contact in other directories:
                 *   constructed based on
                 *   android.provider.ContactsContract.PhoneLookup.LOOKUP_KEY
                 * </pre>
                 *
                 * <code>optional string lookup_uri = 7;</code>
                 */
                public Builder setLookupUri(
                        java.lang.String value) {
                    copyOnWrite();
                    instance.setLookupUri(value);
                    return this;
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *   constructed based on
                 *   android.provider.ContactsContract.CommonDataKinds.Phone.LOOKUP_KEY
                 * For a contact in other directories:
                 *   constructed based on
                 *   android.provider.ContactsContract.PhoneLookup.LOOKUP_KEY
                 * </pre>
                 *
                 * <code>optional string lookup_uri = 7;</code>
                 */
                public com.google.protobuf.ByteString
                getLookupUriBytes() {
                    return instance.getLookupUriBytes();
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *   constructed based on
                 *   android.provider.ContactsContract.CommonDataKinds.Phone.LOOKUP_KEY
                 * For a contact in other directories:
                 *   constructed based on
                 *   android.provider.ContactsContract.PhoneLookup.LOOKUP_KEY
                 * </pre>
                 *
                 * <code>optional string lookup_uri = 7;</code>
                 */
                public Builder setLookupUriBytes(
                        com.google.protobuf.ByteString value) {
                    copyOnWrite();
                    instance.setLookupUriBytes(value);
                    return this;
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *   constructed based on
                 *   android.provider.ContactsContract.CommonDataKinds.Phone.LOOKUP_KEY
                 * For a contact in other directories:
                 *   constructed based on
                 *   android.provider.ContactsContract.PhoneLookup.LOOKUP_KEY
                 * </pre>
                 *
                 * <code>optional string lookup_uri = 7;</code>
                 */
                public Builder clearLookupUri() {
                    copyOnWrite();
                    instance.clearLookupUri();
                    return this;
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *    value set based on
                 *    android.provider.ContactsContract.CommonDataKinds.Phone.CARRIER_PRESENCE
                 * For a contact in other directories: always false.
                 *    This is because we lookup contacts in other directories via
                 *    android.provider.ContactsContract.PhoneLookup, to which carrier
                 *    presence info is not directly accessible.
                 * </pre>
                 *
                 * <code>optional bool can_support_carrier_video_call = 8;</code>
                 */
                public boolean hasCanSupportCarrierVideoCall() {
                    return instance.hasCanSupportCarrierVideoCall();
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *    value set based on
                 *    android.provider.ContactsContract.CommonDataKinds.Phone.CARRIER_PRESENCE
                 * For a contact in other directories: always false.
                 *    This is because we lookup contacts in other directories via
                 *    android.provider.ContactsContract.PhoneLookup, to which carrier
                 *    presence info is not directly accessible.
                 * </pre>
                 *
                 * <code>optional bool can_support_carrier_video_call = 8;</code>
                 */
                public boolean getCanSupportCarrierVideoCall() {
                    return instance.getCanSupportCarrierVideoCall();
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *    value set based on
                 *    android.provider.ContactsContract.CommonDataKinds.Phone.CARRIER_PRESENCE
                 * For a contact in other directories: always false.
                 *    This is because we lookup contacts in other directories via
                 *    android.provider.ContactsContract.PhoneLookup, to which carrier
                 *    presence info is not directly accessible.
                 * </pre>
                 *
                 * <code>optional bool can_support_carrier_video_call = 8;</code>
                 */
                public Builder setCanSupportCarrierVideoCall(boolean value) {
                    copyOnWrite();
                    instance.setCanSupportCarrierVideoCall(value);
                    return this;
                }

                /**
                 * <pre>
                 * For a contact in the default directory:
                 *    value set based on
                 *    android.provider.ContactsContract.CommonDataKinds.Phone.CARRIER_PRESENCE
                 * For a contact in other directories: always false.
                 *    This is because we lookup contacts in other directories via
                 *    android.provider.ContactsContract.PhoneLookup, to which carrier
                 *    presence info is not directly accessible.
                 * </pre>
                 *
                 * <code>optional bool can_support_carrier_video_call = 8;</code>
                 */
                public Builder clearCanSupportCarrierVideoCall() {
                    copyOnWrite();
                    instance.clearCanSupportCarrierVideoCall();
                    return this;
                }

                // @@protoc_insertion_point(builder_scope:com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo)
            }
        }

        /**
         * <pre>
         * Information about a PhoneNumber retrieved from CP2.
         * </pre>
         * <p>
         * Protobuf type {@code com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info, Builder> implements
                // @@protoc_insertion_point(builder_implements:com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info)
                com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2InfoOrBuilder {
            // Construct using com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             * Repeated because one phone number can be associated with multiple CP2
             * contacts.
             * Empty if there is no CP2 contact information for the number.
             * </pre>
             *
             * <code>repeated .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo cp2_contact_info = 1;</code>
             */
            public java.util.List<com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo> getCp2ContactInfoList() {
                return java.util.Collections.unmodifiableList(
                        instance.getCp2ContactInfoList());
            }

            /**
             * <pre>
             * Repeated because one phone number can be associated with multiple CP2
             * contacts.
             * Empty if there is no CP2 contact information for the number.
             * </pre>
             *
             * <code>repeated .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo cp2_contact_info = 1;</code>
             */
            public int getCp2ContactInfoCount() {
                return instance.getCp2ContactInfoCount();
            }

            /**
             * <pre>
             * Repeated because one phone number can be associated with multiple CP2
             * contacts.
             * Empty if there is no CP2 contact information for the number.
             * </pre>
             *
             * <code>repeated .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo cp2_contact_info = 1;</code>
             */
            public com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo getCp2ContactInfo(int index) {
                return instance.getCp2ContactInfo(index);
            }

            /**
             * <pre>
             * Repeated because one phone number can be associated with multiple CP2
             * contacts.
             * Empty if there is no CP2 contact information for the number.
             * </pre>
             *
             * <code>repeated .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo cp2_contact_info = 1;</code>
             */
            public Builder setCp2ContactInfo(
                    int index, com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo value) {
                copyOnWrite();
                instance.setCp2ContactInfo(index, value);
                return this;
            }

            /**
             * <pre>
             * Repeated because one phone number can be associated with multiple CP2
             * contacts.
             * Empty if there is no CP2 contact information for the number.
             * </pre>
             *
             * <code>repeated .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo cp2_contact_info = 1;</code>
             */
            public Builder setCp2ContactInfo(
                    int index, com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo.Builder builderForValue) {
                copyOnWrite();
                instance.setCp2ContactInfo(index, builderForValue);
                return this;
            }

            /**
             * <pre>
             * Repeated because one phone number can be associated with multiple CP2
             * contacts.
             * Empty if there is no CP2 contact information for the number.
             * </pre>
             *
             * <code>repeated .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo cp2_contact_info = 1;</code>
             */
            public Builder addCp2ContactInfo(com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo value) {
                copyOnWrite();
                instance.addCp2ContactInfo(value);
                return this;
            }

            /**
             * <pre>
             * Repeated because one phone number can be associated with multiple CP2
             * contacts.
             * Empty if there is no CP2 contact information for the number.
             * </pre>
             *
             * <code>repeated .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo cp2_contact_info = 1;</code>
             */
            public Builder addCp2ContactInfo(
                    int index, com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo value) {
                copyOnWrite();
                instance.addCp2ContactInfo(index, value);
                return this;
            }

            /**
             * <pre>
             * Repeated because one phone number can be associated with multiple CP2
             * contacts.
             * Empty if there is no CP2 contact information for the number.
             * </pre>
             *
             * <code>repeated .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo cp2_contact_info = 1;</code>
             */
            public Builder addCp2ContactInfo(
                    com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo.Builder builderForValue) {
                copyOnWrite();
                instance.addCp2ContactInfo(builderForValue);
                return this;
            }

            /**
             * <pre>
             * Repeated because one phone number can be associated with multiple CP2
             * contacts.
             * Empty if there is no CP2 contact information for the number.
             * </pre>
             *
             * <code>repeated .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo cp2_contact_info = 1;</code>
             */
            public Builder addCp2ContactInfo(
                    int index, com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo.Builder builderForValue) {
                copyOnWrite();
                instance.addCp2ContactInfo(index, builderForValue);
                return this;
            }

            /**
             * <pre>
             * Repeated because one phone number can be associated with multiple CP2
             * contacts.
             * Empty if there is no CP2 contact information for the number.
             * </pre>
             *
             * <code>repeated .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo cp2_contact_info = 1;</code>
             */
            public Builder addAllCp2ContactInfo(
                    java.lang.Iterable<? extends com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo> values) {
                copyOnWrite();
                instance.addAllCp2ContactInfo(values);
                return this;
            }

            /**
             * <pre>
             * Repeated because one phone number can be associated with multiple CP2
             * contacts.
             * Empty if there is no CP2 contact information for the number.
             * </pre>
             *
             * <code>repeated .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo cp2_contact_info = 1;</code>
             */
            public Builder clearCp2ContactInfo() {
                copyOnWrite();
                instance.clearCp2ContactInfo();
                return this;
            }

            /**
             * <pre>
             * Repeated because one phone number can be associated with multiple CP2
             * contacts.
             * Empty if there is no CP2 contact information for the number.
             * </pre>
             *
             * <code>repeated .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Cp2ContactInfo cp2_contact_info = 1;</code>
             */
            public Builder removeCp2ContactInfo(int index) {
                copyOnWrite();
                instance.removeCp2ContactInfo(index);
                return this;
            }

            /**
             * <pre>
             * The information for this number is incomplete. This can happen when the
             * call log is requested to be updated but there are many invalid numbers
             * and the update cannot be performed efficiently. In this case, the call
             * log needs to query for the CP2 information at render time.
             * </pre>
             *
             * <code>optional bool is_incomplete = 2;</code>
             */
            public boolean hasIsIncomplete() {
                return instance.hasIsIncomplete();
            }

            /**
             * <pre>
             * The information for this number is incomplete. This can happen when the
             * call log is requested to be updated but there are many invalid numbers
             * and the update cannot be performed efficiently. In this case, the call
             * log needs to query for the CP2 information at render time.
             * </pre>
             *
             * <code>optional bool is_incomplete = 2;</code>
             */
            public boolean getIsIncomplete() {
                return instance.getIsIncomplete();
            }

            /**
             * <pre>
             * The information for this number is incomplete. This can happen when the
             * call log is requested to be updated but there are many invalid numbers
             * and the update cannot be performed efficiently. In this case, the call
             * log needs to query for the CP2 information at render time.
             * </pre>
             *
             * <code>optional bool is_incomplete = 2;</code>
             */
            public Builder setIsIncomplete(boolean value) {
                copyOnWrite();
                instance.setIsIncomplete(value);
                return this;
            }

            /**
             * <pre>
             * The information for this number is incomplete. This can happen when the
             * call log is requested to be updated but there are many invalid numbers
             * and the update cannot be performed efficiently. In this case, the call
             * log needs to query for the CP2 information at render time.
             * </pre>
             *
             * <code>optional bool is_incomplete = 2;</code>
             */
            public Builder clearIsIncomplete() {
                copyOnWrite();
                instance.clearIsIncomplete();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info)
        }
    }

    /**
     * <pre>
     * Message for spam info.
     * SpamPhoneLookup is responsible for populating this message.
     * </pre>
     * <p>
     * Protobuf type {@code com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo}
     */
    public static final class SpamInfo extends
            com.google.protobuf.GeneratedMessageLite<
                    SpamInfo, SpamInfo.Builder> implements
            // @@protoc_insertion_point(message_implements:com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo)
            SpamInfoOrBuilder {
        public static final int IS_SPAM_FIELD_NUMBER = 1;
        // @@protoc_insertion_point(class_scope:com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo)
        private static final com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo DEFAULT_INSTANCE;
        private static volatile com.google.protobuf.Parser<SpamInfo> PARSER;

        static {
            DEFAULT_INSTANCE = new SpamInfo();
            DEFAULT_INSTANCE.makeImmutable();
        }

        private int bitField0_;
        private boolean isSpam_;

        private SpamInfo() {
            isSpam_ = false;
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<SpamInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }

        /**
         * <code>optional bool is_spam = 1;</code>
         */
        public boolean hasIsSpam() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>optional bool is_spam = 1;</code>
         */
        public boolean getIsSpam() {
            return isSpam_;
        }

        /**
         * <code>optional bool is_spam = 1;</code>
         */
        private void setIsSpam(boolean value) {
            bitField0_ |= 0x00000001;
            isSpam_ = value;
        }

        /**
         * <code>optional bool is_spam = 1;</code>
         */
        private void clearIsSpam() {
            bitField0_ = (bitField0_ & ~0x00000001);
            isSpam_ = false;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeBool(1, isSpam_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(1, isSpam_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo other = (com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo) arg1;
                    isSpam_ = visitor.visitBoolean(
                            hasIsSpam(), isSpam_,
                            other.hasIsSpam(), other.isSpam_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                        bitField0_ |= other.bitField0_;
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!parseUnknownField(tag, input)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 8: {
                                    bitField0_ |= 0x00000001;
                                    isSpam_ = input.readBool();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    }
                }
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {
                        synchronized (com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo.class) {
                            if (PARSER == null) {
                                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                            }
                        }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }

        /**
         * <pre>
         * Message for spam info.
         * SpamPhoneLookup is responsible for populating this message.
         * </pre>
         * <p>
         * Protobuf type {@code com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo, Builder> implements
                // @@protoc_insertion_point(builder_implements:com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo)
                com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfoOrBuilder {
            // Construct using com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <code>optional bool is_spam = 1;</code>
             */
            public boolean hasIsSpam() {
                return instance.hasIsSpam();
            }

            /**
             * <code>optional bool is_spam = 1;</code>
             */
            public boolean getIsSpam() {
                return instance.getIsSpam();
            }

            /**
             * <code>optional bool is_spam = 1;</code>
             */
            public Builder setIsSpam(boolean value) {
                copyOnWrite();
                instance.setIsSpam(value);
                return this;
            }

            /**
             * <code>optional bool is_spam = 1;</code>
             */
            public Builder clearIsSpam() {
                copyOnWrite();
                instance.clearIsSpam();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo)
        }
    }

    /**
     * <pre>
     * Message for PeopleApi, including G+ contacts and nearby places
     * </pre>
     * <p>
     * Protobuf type {@code com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo}
     */
    public static final class PeopleApiInfo extends
            com.google.protobuf.GeneratedMessageLite<
                    PeopleApiInfo, PeopleApiInfo.Builder> implements
            // @@protoc_insertion_point(message_implements:com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo)
            PeopleApiInfoOrBuilder {
        public static final int DISPLAY_NAME_FIELD_NUMBER = 1;
        public static final int NUMBER_TYPE_FIELD_NUMBER = 2;
        public static final int FORMATTED_NUMBER_TYPE_FIELD_NUMBER = 3;
        public static final int IMAGE_URL_FIELD_NUMBER = 4;
        public static final int PERSON_ID_FIELD_NUMBER = 5;
        public static final int INFO_TYPE_FIELD_NUMBER = 6;
        public static final int LOOKUP_URI_FIELD_NUMBER = 7;
        // @@protoc_insertion_point(class_scope:com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo)
        private static final com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo DEFAULT_INSTANCE;
        private static volatile com.google.protobuf.Parser<PeopleApiInfo> PARSER;

        static {
            DEFAULT_INSTANCE = new PeopleApiInfo();
            DEFAULT_INSTANCE.makeImmutable();
        }

        private int bitField0_;
        private java.lang.String displayName_;
        private java.lang.String numberType_;
        private java.lang.String formattedNumberType_;
        private java.lang.String imageUrl_;
        private java.lang.String personId_;
        private int infoType_;
        private java.lang.String lookupUri_;

        private PeopleApiInfo() {
            displayName_ = "";
            numberType_ = "";
            formattedNumberType_ = "";
            imageUrl_ = "";
            personId_ = "";
            infoType_ = 0;
            lookupUri_ = "";
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<PeopleApiInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }

        /**
         * <pre>
         * Best display name determined by people API if available, first display
         * name otherwise.
         * </pre>
         *
         * <code>optional string display_name = 1;</code>
         */
        public boolean hasDisplayName() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <pre>
         * Best display name determined by people API if available, first display
         * name otherwise.
         * </pre>
         *
         * <code>optional string display_name = 1;</code>
         */
        public java.lang.String getDisplayName() {
            return displayName_;
        }

        /**
         * <pre>
         * Best display name determined by people API if available, first display
         * name otherwise.
         * </pre>
         *
         * <code>optional string display_name = 1;</code>
         */
        private void setDisplayName(
                java.lang.String value) {
            if (value == null) {
                throw new NullPointerException();
            }
            bitField0_ |= 0x00000001;
            displayName_ = value;
        }

        /**
         * <pre>
         * Best display name determined by people API if available, first display
         * name otherwise.
         * </pre>
         *
         * <code>optional string display_name = 1;</code>
         */
        public com.google.protobuf.ByteString
        getDisplayNameBytes() {
            return com.google.protobuf.ByteString.copyFromUtf8(displayName_);
        }

        /**
         * <pre>
         * Best display name determined by people API if available, first display
         * name otherwise.
         * </pre>
         *
         * <code>optional string display_name = 1;</code>
         */
        private void setDisplayNameBytes(
                com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            bitField0_ |= 0x00000001;
            displayName_ = value.toStringUtf8();
        }

        /**
         * <pre>
         * Best display name determined by people API if available, first display
         * name otherwise.
         * </pre>
         *
         * <code>optional string display_name = 1;</code>
         */
        private void clearDisplayName() {
            bitField0_ = (bitField0_ & ~0x00000001);
            displayName_ = getDefaultInstance().getDisplayName();
        }

        /**
         * <pre>
         * The type of the number, for example "phone" or "home".
         * </pre>
         *
         * <code>optional string number_type = 2;</code>
         */
        public boolean hasNumberType() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <pre>
         * The type of the number, for example "phone" or "home".
         * </pre>
         *
         * <code>optional string number_type = 2;</code>
         */
        public java.lang.String getNumberType() {
            return numberType_;
        }

        /**
         * <pre>
         * The type of the number, for example "phone" or "home".
         * </pre>
         *
         * <code>optional string number_type = 2;</code>
         */
        private void setNumberType(
                java.lang.String value) {
            if (value == null) {
                throw new NullPointerException();
            }
            bitField0_ |= 0x00000002;
            numberType_ = value;
        }

        /**
         * <pre>
         * The type of the number, for example "phone" or "home".
         * </pre>
         *
         * <code>optional string number_type = 2;</code>
         */
        public com.google.protobuf.ByteString
        getNumberTypeBytes() {
            return com.google.protobuf.ByteString.copyFromUtf8(numberType_);
        }

        /**
         * <pre>
         * The type of the number, for example "phone" or "home".
         * </pre>
         *
         * <code>optional string number_type = 2;</code>
         */
        private void setNumberTypeBytes(
                com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            bitField0_ |= 0x00000002;
            numberType_ = value.toStringUtf8();
        }

        /**
         * <pre>
         * The type of the number, for example "phone" or "home".
         * </pre>
         *
         * <code>optional string number_type = 2;</code>
         */
        private void clearNumberType() {
            bitField0_ = (bitField0_ & ~0x00000002);
            numberType_ = getDefaultInstance().getNumberType();
        }

        /**
         * <pre>
         * The number_type label in human readable string, for example "Phone".
         * The UI should display known number_type with string resources if possible
         * but if number_type is unrecognized formatted_number_type. For example
         * if the user set an custom type label.
         * </pre>
         *
         * <code>optional string formatted_number_type = 3;</code>
         */
        public boolean hasFormattedNumberType() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <pre>
         * The number_type label in human readable string, for example "Phone".
         * The UI should display known number_type with string resources if possible
         * but if number_type is unrecognized formatted_number_type. For example
         * if the user set an custom type label.
         * </pre>
         *
         * <code>optional string formatted_number_type = 3;</code>
         */
        public java.lang.String getFormattedNumberType() {
            return formattedNumberType_;
        }

        /**
         * <pre>
         * The number_type label in human readable string, for example "Phone".
         * The UI should display known number_type with string resources if possible
         * but if number_type is unrecognized formatted_number_type. For example
         * if the user set an custom type label.
         * </pre>
         *
         * <code>optional string formatted_number_type = 3;</code>
         */
        private void setFormattedNumberType(
                java.lang.String value) {
            if (value == null) {
                throw new NullPointerException();
            }
            bitField0_ |= 0x00000004;
            formattedNumberType_ = value;
        }

        /**
         * <pre>
         * The number_type label in human readable string, for example "Phone".
         * The UI should display known number_type with string resources if possible
         * but if number_type is unrecognized formatted_number_type. For example
         * if the user set an custom type label.
         * </pre>
         *
         * <code>optional string formatted_number_type = 3;</code>
         */
        public com.google.protobuf.ByteString
        getFormattedNumberTypeBytes() {
            return com.google.protobuf.ByteString.copyFromUtf8(formattedNumberType_);
        }

        /**
         * <pre>
         * The number_type label in human readable string, for example "Phone".
         * The UI should display known number_type with string resources if possible
         * but if number_type is unrecognized formatted_number_type. For example
         * if the user set an custom type label.
         * </pre>
         *
         * <code>optional string formatted_number_type = 3;</code>
         */
        private void setFormattedNumberTypeBytes(
                com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            bitField0_ |= 0x00000004;
            formattedNumberType_ = value.toStringUtf8();
        }

        /**
         * <pre>
         * The number_type label in human readable string, for example "Phone".
         * The UI should display known number_type with string resources if possible
         * but if number_type is unrecognized formatted_number_type. For example
         * if the user set an custom type label.
         * </pre>
         *
         * <code>optional string formatted_number_type = 3;</code>
         */
        private void clearFormattedNumberType() {
            bitField0_ = (bitField0_ & ~0x00000004);
            formattedNumberType_ = getDefaultInstance().getFormattedNumberType();
        }

        /**
         * <pre>
         * URL to the contact's full size photo.
         * </pre>
         *
         * <code>optional string image_url = 4;</code>
         */
        public boolean hasImageUrl() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        /**
         * <pre>
         * URL to the contact's full size photo.
         * </pre>
         *
         * <code>optional string image_url = 4;</code>
         */
        public java.lang.String getImageUrl() {
            return imageUrl_;
        }

        /**
         * <pre>
         * URL to the contact's full size photo.
         * </pre>
         *
         * <code>optional string image_url = 4;</code>
         */
        private void setImageUrl(
                java.lang.String value) {
            if (value == null) {
                throw new NullPointerException();
            }
            bitField0_ |= 0x00000008;
            imageUrl_ = value;
        }

        /**
         * <pre>
         * URL to the contact's full size photo.
         * </pre>
         *
         * <code>optional string image_url = 4;</code>
         */
        public com.google.protobuf.ByteString
        getImageUrlBytes() {
            return com.google.protobuf.ByteString.copyFromUtf8(imageUrl_);
        }

        /**
         * <pre>
         * URL to the contact's full size photo.
         * </pre>
         *
         * <code>optional string image_url = 4;</code>
         */
        private void setImageUrlBytes(
                com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            bitField0_ |= 0x00000008;
            imageUrl_ = value.toStringUtf8();
        }

        /**
         * <pre>
         * URL to the contact's full size photo.
         * </pre>
         *
         * <code>optional string image_url = 4;</code>
         */
        private void clearImageUrl() {
            bitField0_ = (bitField0_ & ~0x00000008);
            imageUrl_ = getDefaultInstance().getImageUrl();
        }

        /**
         * <pre>
         * The primary key of the contact in people API.
         * </pre>
         *
         * <code>optional string person_id = 5;</code>
         */
        public boolean hasPersonId() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
        }

        /**
         * <pre>
         * The primary key of the contact in people API.
         * </pre>
         *
         * <code>optional string person_id = 5;</code>
         */
        public java.lang.String getPersonId() {
            return personId_;
        }

        /**
         * <pre>
         * The primary key of the contact in people API.
         * </pre>
         *
         * <code>optional string person_id = 5;</code>
         */
        private void setPersonId(
                java.lang.String value) {
            if (value == null) {
                throw new NullPointerException();
            }
            bitField0_ |= 0x00000010;
            personId_ = value;
        }

        /**
         * <pre>
         * The primary key of the contact in people API.
         * </pre>
         *
         * <code>optional string person_id = 5;</code>
         */
        public com.google.protobuf.ByteString
        getPersonIdBytes() {
            return com.google.protobuf.ByteString.copyFromUtf8(personId_);
        }

        /**
         * <pre>
         * The primary key of the contact in people API.
         * </pre>
         *
         * <code>optional string person_id = 5;</code>
         */
        private void setPersonIdBytes(
                com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            bitField0_ |= 0x00000010;
            personId_ = value.toStringUtf8();
        }

        /**
         * <pre>
         * The primary key of the contact in people API.
         * </pre>
         *
         * <code>optional string person_id = 5;</code>
         */
        private void clearPersonId() {
            bitField0_ = (bitField0_ & ~0x00000010);
            personId_ = getDefaultInstance().getPersonId();
        }

        /**
         * <pre>
         * The type of the lookup result, for example, a saved contact or a nearby
         * business.
         * </pre>
         *
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo.InfoType info_type = 6;</code>
         */
        public boolean hasInfoType() {
            return ((bitField0_ & 0x00000020) == 0x00000020);
        }

        /**
         * <pre>
         * The type of the lookup result, for example, a saved contact or a nearby
         * business.
         * </pre>
         *
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo.InfoType info_type = 6;</code>
         */
        public com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo.InfoType getInfoType() {
            com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo.InfoType result = com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo.InfoType.forNumber(infoType_);
            return result == null ? com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo.InfoType.UNKNOWN : result;
        }

        /**
         * <pre>
         * The type of the lookup result, for example, a saved contact or a nearby
         * business.
         * </pre>
         *
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo.InfoType info_type = 6;</code>
         */
        private void setInfoType(com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo.InfoType value) {
            if (value == null) {
                throw new NullPointerException();
            }
            bitField0_ |= 0x00000020;
            infoType_ = value.getNumber();
        }

        /**
         * <pre>
         * The type of the lookup result, for example, a saved contact or a nearby
         * business.
         * </pre>
         *
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo.InfoType info_type = 6;</code>
         */
        private void clearInfoType() {
            bitField0_ = (bitField0_ & ~0x00000020);
            infoType_ = 0;
        }

        /**
         * <pre>
         * A URI that contains encoded JSON about the number so contacts can
         * populate the quick contact activity with name and numbers. This does not
         * point to any real contact entry anywhere.
         * </pre>
         *
         * <code>optional string lookup_uri = 7;</code>
         */
        public boolean hasLookupUri() {
            return ((bitField0_ & 0x00000040) == 0x00000040);
        }

        /**
         * <pre>
         * A URI that contains encoded JSON about the number so contacts can
         * populate the quick contact activity with name and numbers. This does not
         * point to any real contact entry anywhere.
         * </pre>
         *
         * <code>optional string lookup_uri = 7;</code>
         */
        public java.lang.String getLookupUri() {
            return lookupUri_;
        }

        /**
         * <pre>
         * A URI that contains encoded JSON about the number so contacts can
         * populate the quick contact activity with name and numbers. This does not
         * point to any real contact entry anywhere.
         * </pre>
         *
         * <code>optional string lookup_uri = 7;</code>
         */
        private void setLookupUri(
                java.lang.String value) {
            if (value == null) {
                throw new NullPointerException();
            }
            bitField0_ |= 0x00000040;
            lookupUri_ = value;
        }

        /**
         * <pre>
         * A URI that contains encoded JSON about the number so contacts can
         * populate the quick contact activity with name and numbers. This does not
         * point to any real contact entry anywhere.
         * </pre>
         *
         * <code>optional string lookup_uri = 7;</code>
         */
        public com.google.protobuf.ByteString
        getLookupUriBytes() {
            return com.google.protobuf.ByteString.copyFromUtf8(lookupUri_);
        }

        /**
         * <pre>
         * A URI that contains encoded JSON about the number so contacts can
         * populate the quick contact activity with name and numbers. This does not
         * point to any real contact entry anywhere.
         * </pre>
         *
         * <code>optional string lookup_uri = 7;</code>
         */
        private void setLookupUriBytes(
                com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            bitField0_ |= 0x00000040;
            lookupUri_ = value.toStringUtf8();
        }

        /**
         * <pre>
         * A URI that contains encoded JSON about the number so contacts can
         * populate the quick contact activity with name and numbers. This does not
         * point to any real contact entry anywhere.
         * </pre>
         *
         * <code>optional string lookup_uri = 7;</code>
         */
        private void clearLookupUri() {
            bitField0_ = (bitField0_ & ~0x00000040);
            lookupUri_ = getDefaultInstance().getLookupUri();
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeString(1, getDisplayName());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeString(2, getNumberType());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeString(3, getFormattedNumberType());
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeString(4, getImageUrl());
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeString(5, getPersonId());
            }
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
                output.writeEnum(6, infoType_);
            }
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
                output.writeString(7, getLookupUri());
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeStringSize(1, getDisplayName());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeStringSize(2, getNumberType());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeStringSize(3, getFormattedNumberType());
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeStringSize(4, getImageUrl());
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeStringSize(5, getPersonId());
            }
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(6, infoType_);
            }
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeStringSize(7, getLookupUri());
            }
            size += unknownFields.getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo other = (com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo) arg1;
                    displayName_ = visitor.visitString(
                            hasDisplayName(), displayName_,
                            other.hasDisplayName(), other.displayName_);
                    numberType_ = visitor.visitString(
                            hasNumberType(), numberType_,
                            other.hasNumberType(), other.numberType_);
                    formattedNumberType_ = visitor.visitString(
                            hasFormattedNumberType(), formattedNumberType_,
                            other.hasFormattedNumberType(), other.formattedNumberType_);
                    imageUrl_ = visitor.visitString(
                            hasImageUrl(), imageUrl_,
                            other.hasImageUrl(), other.imageUrl_);
                    personId_ = visitor.visitString(
                            hasPersonId(), personId_,
                            other.hasPersonId(), other.personId_);
                    infoType_ = visitor.visitInt(hasInfoType(), infoType_,
                            other.hasInfoType(), other.infoType_);
                    lookupUri_ = visitor.visitString(
                            hasLookupUri(), lookupUri_,
                            other.hasLookupUri(), other.lookupUri_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                        bitField0_ |= other.bitField0_;
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!parseUnknownField(tag, input)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 10: {
                                    String s = input.readString();
                                    bitField0_ |= 0x00000001;
                                    displayName_ = s;
                                    break;
                                }
                                case 18: {
                                    String s = input.readString();
                                    bitField0_ |= 0x00000002;
                                    numberType_ = s;
                                    break;
                                }
                                case 26: {
                                    String s = input.readString();
                                    bitField0_ |= 0x00000004;
                                    formattedNumberType_ = s;
                                    break;
                                }
                                case 34: {
                                    String s = input.readString();
                                    bitField0_ |= 0x00000008;
                                    imageUrl_ = s;
                                    break;
                                }
                                case 42: {
                                    String s = input.readString();
                                    bitField0_ |= 0x00000010;
                                    personId_ = s;
                                    break;
                                }
                                case 48: {
                                    int rawValue = input.readEnum();
                                    com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo.InfoType value = com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo.InfoType.forNumber(rawValue);
                                    if (value == null) {
                                        super.mergeVarintField(6, rawValue);
                                    } else {
                                        bitField0_ |= 0x00000020;
                                        infoType_ = rawValue;
                                    }
                                    break;
                                }
                                case 58: {
                                    String s = input.readString();
                                    bitField0_ |= 0x00000040;
                                    lookupUri_ = s;
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    }
                }
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {
                        synchronized (com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo.class) {
                            if (PARSER == null) {
                                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                            }
                        }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }

        /**
         * Protobuf enum {@code com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo.InfoType}
         */
        public enum InfoType
                implements com.google.protobuf.Internal.EnumLite {
            /**
             * <code>UNKNOWN = 0;</code>
             */
            UNKNOWN(0),
            /**
             * <pre>
             * the result is a saved contact in people API
             * </pre>
             *
             * <code>CONTACT = 1;</code>
             */
            CONTACT(1),
            /**
             * <pre>
             * the result is found through nearby places
             * </pre>
             *
             * <code>NEARBY_BUSINESS = 2;</code>
             */
            NEARBY_BUSINESS(2),
            ;

            /**
             * <code>UNKNOWN = 0;</code>
             */
            public static final int UNKNOWN_VALUE = 0;
            /**
             * <pre>
             * the result is a saved contact in people API
             * </pre>
             *
             * <code>CONTACT = 1;</code>
             */
            public static final int CONTACT_VALUE = 1;
            /**
             * <pre>
             * the result is found through nearby places
             * </pre>
             *
             * <code>NEARBY_BUSINESS = 2;</code>
             */
            public static final int NEARBY_BUSINESS_VALUE = 2;
            private static final com.google.protobuf.Internal.EnumLiteMap<
                    InfoType> internalValueMap =
                    number -> InfoType.forNumber(number);
            private final int value;

            InfoType(int value) {
                this.value = value;
            }

            /**
             * @deprecated Use {@link #forNumber(int)} instead.
             */
            @java.lang.Deprecated
            public static InfoType valueOf(int value) {
                return forNumber(value);
            }

            public static InfoType forNumber(int value) {
                switch (value) {
                    case 0:
                        return UNKNOWN;
                    case 1:
                        return CONTACT;
                    case 2:
                        return NEARBY_BUSINESS;
                    default:
                        return null;
                }
            }

            public static com.google.protobuf.Internal.EnumLiteMap<InfoType>
            internalGetValueMap() {
                return internalValueMap;
            }

            public final int getNumber() {
                return value;
            }

            // @@protoc_insertion_point(enum_scope:com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo.InfoType)
        }

        /**
         * <pre>
         * Message for PeopleApi, including G+ contacts and nearby places
         * </pre>
         * <p>
         * Protobuf type {@code com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo, Builder> implements
                // @@protoc_insertion_point(builder_implements:com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo)
                com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfoOrBuilder {
            // Construct using com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             * Best display name determined by people API if available, first display
             * name otherwise.
             * </pre>
             *
             * <code>optional string display_name = 1;</code>
             */
            public boolean hasDisplayName() {
                return instance.hasDisplayName();
            }

            /**
             * <pre>
             * Best display name determined by people API if available, first display
             * name otherwise.
             * </pre>
             *
             * <code>optional string display_name = 1;</code>
             */
            public java.lang.String getDisplayName() {
                return instance.getDisplayName();
            }

            /**
             * <pre>
             * Best display name determined by people API if available, first display
             * name otherwise.
             * </pre>
             *
             * <code>optional string display_name = 1;</code>
             */
            public Builder setDisplayName(
                    java.lang.String value) {
                copyOnWrite();
                instance.setDisplayName(value);
                return this;
            }

            /**
             * <pre>
             * Best display name determined by people API if available, first display
             * name otherwise.
             * </pre>
             *
             * <code>optional string display_name = 1;</code>
             */
            public com.google.protobuf.ByteString
            getDisplayNameBytes() {
                return instance.getDisplayNameBytes();
            }

            /**
             * <pre>
             * Best display name determined by people API if available, first display
             * name otherwise.
             * </pre>
             *
             * <code>optional string display_name = 1;</code>
             */
            public Builder setDisplayNameBytes(
                    com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setDisplayNameBytes(value);
                return this;
            }

            /**
             * <pre>
             * Best display name determined by people API if available, first display
             * name otherwise.
             * </pre>
             *
             * <code>optional string display_name = 1;</code>
             */
            public Builder clearDisplayName() {
                copyOnWrite();
                instance.clearDisplayName();
                return this;
            }

            /**
             * <pre>
             * The type of the number, for example "phone" or "home".
             * </pre>
             *
             * <code>optional string number_type = 2;</code>
             */
            public boolean hasNumberType() {
                return instance.hasNumberType();
            }

            /**
             * <pre>
             * The type of the number, for example "phone" or "home".
             * </pre>
             *
             * <code>optional string number_type = 2;</code>
             */
            public java.lang.String getNumberType() {
                return instance.getNumberType();
            }

            /**
             * <pre>
             * The type of the number, for example "phone" or "home".
             * </pre>
             *
             * <code>optional string number_type = 2;</code>
             */
            public Builder setNumberType(
                    java.lang.String value) {
                copyOnWrite();
                instance.setNumberType(value);
                return this;
            }

            /**
             * <pre>
             * The type of the number, for example "phone" or "home".
             * </pre>
             *
             * <code>optional string number_type = 2;</code>
             */
            public com.google.protobuf.ByteString
            getNumberTypeBytes() {
                return instance.getNumberTypeBytes();
            }

            /**
             * <pre>
             * The type of the number, for example "phone" or "home".
             * </pre>
             *
             * <code>optional string number_type = 2;</code>
             */
            public Builder setNumberTypeBytes(
                    com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setNumberTypeBytes(value);
                return this;
            }

            /**
             * <pre>
             * The type of the number, for example "phone" or "home".
             * </pre>
             *
             * <code>optional string number_type = 2;</code>
             */
            public Builder clearNumberType() {
                copyOnWrite();
                instance.clearNumberType();
                return this;
            }

            /**
             * <pre>
             * The number_type label in human readable string, for example "Phone".
             * The UI should display known number_type with string resources if possible
             * but if number_type is unrecognized formatted_number_type. For example
             * if the user set an custom type label.
             * </pre>
             *
             * <code>optional string formatted_number_type = 3;</code>
             */
            public boolean hasFormattedNumberType() {
                return instance.hasFormattedNumberType();
            }

            /**
             * <pre>
             * The number_type label in human readable string, for example "Phone".
             * The UI should display known number_type with string resources if possible
             * but if number_type is unrecognized formatted_number_type. For example
             * if the user set an custom type label.
             * </pre>
             *
             * <code>optional string formatted_number_type = 3;</code>
             */
            public java.lang.String getFormattedNumberType() {
                return instance.getFormattedNumberType();
            }

            /**
             * <pre>
             * The number_type label in human readable string, for example "Phone".
             * The UI should display known number_type with string resources if possible
             * but if number_type is unrecognized formatted_number_type. For example
             * if the user set an custom type label.
             * </pre>
             *
             * <code>optional string formatted_number_type = 3;</code>
             */
            public Builder setFormattedNumberType(
                    java.lang.String value) {
                copyOnWrite();
                instance.setFormattedNumberType(value);
                return this;
            }

            /**
             * <pre>
             * The number_type label in human readable string, for example "Phone".
             * The UI should display known number_type with string resources if possible
             * but if number_type is unrecognized formatted_number_type. For example
             * if the user set an custom type label.
             * </pre>
             *
             * <code>optional string formatted_number_type = 3;</code>
             */
            public com.google.protobuf.ByteString
            getFormattedNumberTypeBytes() {
                return instance.getFormattedNumberTypeBytes();
            }

            /**
             * <pre>
             * The number_type label in human readable string, for example "Phone".
             * The UI should display known number_type with string resources if possible
             * but if number_type is unrecognized formatted_number_type. For example
             * if the user set an custom type label.
             * </pre>
             *
             * <code>optional string formatted_number_type = 3;</code>
             */
            public Builder setFormattedNumberTypeBytes(
                    com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setFormattedNumberTypeBytes(value);
                return this;
            }

            /**
             * <pre>
             * The number_type label in human readable string, for example "Phone".
             * The UI should display known number_type with string resources if possible
             * but if number_type is unrecognized formatted_number_type. For example
             * if the user set an custom type label.
             * </pre>
             *
             * <code>optional string formatted_number_type = 3;</code>
             */
            public Builder clearFormattedNumberType() {
                copyOnWrite();
                instance.clearFormattedNumberType();
                return this;
            }

            /**
             * <pre>
             * URL to the contact's full size photo.
             * </pre>
             *
             * <code>optional string image_url = 4;</code>
             */
            public boolean hasImageUrl() {
                return instance.hasImageUrl();
            }

            /**
             * <pre>
             * URL to the contact's full size photo.
             * </pre>
             *
             * <code>optional string image_url = 4;</code>
             */
            public java.lang.String getImageUrl() {
                return instance.getImageUrl();
            }

            /**
             * <pre>
             * URL to the contact's full size photo.
             * </pre>
             *
             * <code>optional string image_url = 4;</code>
             */
            public Builder setImageUrl(
                    java.lang.String value) {
                copyOnWrite();
                instance.setImageUrl(value);
                return this;
            }

            /**
             * <pre>
             * URL to the contact's full size photo.
             * </pre>
             *
             * <code>optional string image_url = 4;</code>
             */
            public com.google.protobuf.ByteString
            getImageUrlBytes() {
                return instance.getImageUrlBytes();
            }

            /**
             * <pre>
             * URL to the contact's full size photo.
             * </pre>
             *
             * <code>optional string image_url = 4;</code>
             */
            public Builder setImageUrlBytes(
                    com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setImageUrlBytes(value);
                return this;
            }

            /**
             * <pre>
             * URL to the contact's full size photo.
             * </pre>
             *
             * <code>optional string image_url = 4;</code>
             */
            public Builder clearImageUrl() {
                copyOnWrite();
                instance.clearImageUrl();
                return this;
            }

            /**
             * <pre>
             * The primary key of the contact in people API.
             * </pre>
             *
             * <code>optional string person_id = 5;</code>
             */
            public boolean hasPersonId() {
                return instance.hasPersonId();
            }

            /**
             * <pre>
             * The primary key of the contact in people API.
             * </pre>
             *
             * <code>optional string person_id = 5;</code>
             */
            public java.lang.String getPersonId() {
                return instance.getPersonId();
            }

            /**
             * <pre>
             * The primary key of the contact in people API.
             * </pre>
             *
             * <code>optional string person_id = 5;</code>
             */
            public Builder setPersonId(
                    java.lang.String value) {
                copyOnWrite();
                instance.setPersonId(value);
                return this;
            }

            /**
             * <pre>
             * The primary key of the contact in people API.
             * </pre>
             *
             * <code>optional string person_id = 5;</code>
             */
            public com.google.protobuf.ByteString
            getPersonIdBytes() {
                return instance.getPersonIdBytes();
            }

            /**
             * <pre>
             * The primary key of the contact in people API.
             * </pre>
             *
             * <code>optional string person_id = 5;</code>
             */
            public Builder setPersonIdBytes(
                    com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setPersonIdBytes(value);
                return this;
            }

            /**
             * <pre>
             * The primary key of the contact in people API.
             * </pre>
             *
             * <code>optional string person_id = 5;</code>
             */
            public Builder clearPersonId() {
                copyOnWrite();
                instance.clearPersonId();
                return this;
            }

            /**
             * <pre>
             * The type of the lookup result, for example, a saved contact or a nearby
             * business.
             * </pre>
             *
             * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo.InfoType info_type = 6;</code>
             */
            public boolean hasInfoType() {
                return instance.hasInfoType();
            }

            /**
             * <pre>
             * The type of the lookup result, for example, a saved contact or a nearby
             * business.
             * </pre>
             *
             * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo.InfoType info_type = 6;</code>
             */
            public com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo.InfoType getInfoType() {
                return instance.getInfoType();
            }

            /**
             * <pre>
             * The type of the lookup result, for example, a saved contact or a nearby
             * business.
             * </pre>
             *
             * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo.InfoType info_type = 6;</code>
             */
            public Builder setInfoType(com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo.InfoType value) {
                copyOnWrite();
                instance.setInfoType(value);
                return this;
            }

            /**
             * <pre>
             * The type of the lookup result, for example, a saved contact or a nearby
             * business.
             * </pre>
             *
             * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo.InfoType info_type = 6;</code>
             */
            public Builder clearInfoType() {
                copyOnWrite();
                instance.clearInfoType();
                return this;
            }

            /**
             * <pre>
             * A URI that contains encoded JSON about the number so contacts can
             * populate the quick contact activity with name and numbers. This does not
             * point to any real contact entry anywhere.
             * </pre>
             *
             * <code>optional string lookup_uri = 7;</code>
             */
            public boolean hasLookupUri() {
                return instance.hasLookupUri();
            }

            /**
             * <pre>
             * A URI that contains encoded JSON about the number so contacts can
             * populate the quick contact activity with name and numbers. This does not
             * point to any real contact entry anywhere.
             * </pre>
             *
             * <code>optional string lookup_uri = 7;</code>
             */
            public java.lang.String getLookupUri() {
                return instance.getLookupUri();
            }

            /**
             * <pre>
             * A URI that contains encoded JSON about the number so contacts can
             * populate the quick contact activity with name and numbers. This does not
             * point to any real contact entry anywhere.
             * </pre>
             *
             * <code>optional string lookup_uri = 7;</code>
             */
            public Builder setLookupUri(
                    java.lang.String value) {
                copyOnWrite();
                instance.setLookupUri(value);
                return this;
            }

            /**
             * <pre>
             * A URI that contains encoded JSON about the number so contacts can
             * populate the quick contact activity with name and numbers. This does not
             * point to any real contact entry anywhere.
             * </pre>
             *
             * <code>optional string lookup_uri = 7;</code>
             */
            public com.google.protobuf.ByteString
            getLookupUriBytes() {
                return instance.getLookupUriBytes();
            }

            /**
             * <pre>
             * A URI that contains encoded JSON about the number so contacts can
             * populate the quick contact activity with name and numbers. This does not
             * point to any real contact entry anywhere.
             * </pre>
             *
             * <code>optional string lookup_uri = 7;</code>
             */
            public Builder setLookupUriBytes(
                    com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setLookupUriBytes(value);
                return this;
            }

            /**
             * <pre>
             * A URI that contains encoded JSON about the number so contacts can
             * populate the quick contact activity with name and numbers. This does not
             * point to any real contact entry anywhere.
             * </pre>
             *
             * <code>optional string lookup_uri = 7;</code>
             */
            public Builder clearLookupUri() {
                copyOnWrite();
                instance.clearLookupUri();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo)
        }
    }

    /**
     * <pre>
     * Message for the android system BlockedNumber lookup. Available starting in
     * N.
     * </pre>
     * <p>
     * Protobuf type {@code com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo}
     */
    public static final class SystemBlockedNumberInfo extends
            com.google.protobuf.GeneratedMessageLite<
                    SystemBlockedNumberInfo, SystemBlockedNumberInfo.Builder> implements
            // @@protoc_insertion_point(message_implements:com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo)
            SystemBlockedNumberInfoOrBuilder {
        public static final int BLOCKED_STATE_FIELD_NUMBER = 1;
        // @@protoc_insertion_point(class_scope:com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo)
        private static final com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo DEFAULT_INSTANCE;
        private static volatile com.google.protobuf.Parser<SystemBlockedNumberInfo> PARSER;

        static {
            DEFAULT_INSTANCE = new SystemBlockedNumberInfo();
            DEFAULT_INSTANCE.makeImmutable();
        }

        private int bitField0_;
        private int blockedState_;

        private SystemBlockedNumberInfo() {
            blockedState_ = 0;
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<SystemBlockedNumberInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.BlockedState blocked_state = 1;</code>
         */
        public boolean hasBlockedState() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.BlockedState blocked_state = 1;</code>
         */
        public com.fissy.dialer.phonelookup.PhoneLookupInfo.BlockedState getBlockedState() {
            com.fissy.dialer.phonelookup.PhoneLookupInfo.BlockedState result = com.fissy.dialer.phonelookup.PhoneLookupInfo.BlockedState.forNumber(blockedState_);
            return result == null ? com.fissy.dialer.phonelookup.PhoneLookupInfo.BlockedState.UNKNOWN : result;
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.BlockedState blocked_state = 1;</code>
         */
        private void setBlockedState(com.fissy.dialer.phonelookup.PhoneLookupInfo.BlockedState value) {
            if (value == null) {
                throw new NullPointerException();
            }
            bitField0_ |= 0x00000001;
            blockedState_ = value.getNumber();
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.BlockedState blocked_state = 1;</code>
         */
        private void clearBlockedState() {
            bitField0_ = (bitField0_ & ~0x00000001);
            blockedState_ = 0;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeEnum(1, blockedState_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(1, blockedState_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo other = (com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo) arg1;
                    blockedState_ = visitor.visitInt(hasBlockedState(), blockedState_,
                            other.hasBlockedState(), other.blockedState_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                        bitField0_ |= other.bitField0_;
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!parseUnknownField(tag, input)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 8: {
                                    int rawValue = input.readEnum();
                                    com.fissy.dialer.phonelookup.PhoneLookupInfo.BlockedState value = com.fissy.dialer.phonelookup.PhoneLookupInfo.BlockedState.forNumber(rawValue);
                                    if (value == null) {
                                        super.mergeVarintField(1, rawValue);
                                    } else {
                                        bitField0_ |= 0x00000001;
                                        blockedState_ = rawValue;
                                    }
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    }
                }
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {
                        synchronized (com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo.class) {
                            if (PARSER == null) {
                                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                            }
                        }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }

        /**
         * <pre>
         * Message for the android system BlockedNumber lookup. Available starting in
         * N.
         * </pre>
         * <p>
         * Protobuf type {@code com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo, Builder> implements
                // @@protoc_insertion_point(builder_implements:com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo)
                com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfoOrBuilder {
            // Construct using com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.BlockedState blocked_state = 1;</code>
             */
            public boolean hasBlockedState() {
                return instance.hasBlockedState();
            }

            /**
             * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.BlockedState blocked_state = 1;</code>
             */
            public com.fissy.dialer.phonelookup.PhoneLookupInfo.BlockedState getBlockedState() {
                return instance.getBlockedState();
            }

            /**
             * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.BlockedState blocked_state = 1;</code>
             */
            public Builder setBlockedState(com.fissy.dialer.phonelookup.PhoneLookupInfo.BlockedState value) {
                copyOnWrite();
                instance.setBlockedState(value);
                return this;
            }

            /**
             * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.BlockedState blocked_state = 1;</code>
             */
            public Builder clearBlockedState() {
                copyOnWrite();
                instance.clearBlockedState();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo)
        }
    }

    /**
     * <pre>
     * Information obtained via CNAP
     * (https://en.wikipedia.org/wiki/Calling_Name_Presentation)
     * Next ID: 2
     * </pre>
     * <p>
     * Protobuf type {@code com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo}
     */
    public static final class CnapInfo extends
            com.google.protobuf.GeneratedMessageLite<
                    CnapInfo, CnapInfo.Builder> implements
            // @@protoc_insertion_point(message_implements:com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo)
            CnapInfoOrBuilder {
        public static final int NAME_FIELD_NUMBER = 1;
        // @@protoc_insertion_point(class_scope:com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo)
        private static final com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo DEFAULT_INSTANCE;
        private static volatile com.google.protobuf.Parser<CnapInfo> PARSER;

        static {
            DEFAULT_INSTANCE = new CnapInfo();
            DEFAULT_INSTANCE.makeImmutable();
        }

        private int bitField0_;
        private java.lang.String name_;

        private CnapInfo() {
            name_ = "";
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<CnapInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }

        /**
         * <code>optional string name = 1;</code>
         */
        public boolean hasName() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>optional string name = 1;</code>
         */
        public java.lang.String getName() {
            return name_;
        }

        /**
         * <code>optional string name = 1;</code>
         */
        private void setName(
                java.lang.String value) {
            if (value == null) {
                throw new NullPointerException();
            }
            bitField0_ |= 0x00000001;
            name_ = value;
        }

        /**
         * <code>optional string name = 1;</code>
         */
        public com.google.protobuf.ByteString
        getNameBytes() {
            return com.google.protobuf.ByteString.copyFromUtf8(name_);
        }

        /**
         * <code>optional string name = 1;</code>
         */
        private void setNameBytes(
                com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            bitField0_ |= 0x00000001;
            name_ = value.toStringUtf8();
        }

        /**
         * <code>optional string name = 1;</code>
         */
        private void clearName() {
            bitField0_ = (bitField0_ & ~0x00000001);
            name_ = getDefaultInstance().getName();
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeString(1, getName());
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeStringSize(1, getName());
            }
            size += unknownFields.getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo other = (com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo) arg1;
                    name_ = visitor.visitString(
                            hasName(), name_,
                            other.hasName(), other.name_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                        bitField0_ |= other.bitField0_;
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!parseUnknownField(tag, input)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 10: {
                                    String s = input.readString();
                                    bitField0_ |= 0x00000001;
                                    name_ = s;
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    }
                }
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {
                        synchronized (com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo.class) {
                            if (PARSER == null) {
                                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                            }
                        }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }

        /**
         * <pre>
         * Information obtained via CNAP
         * (https://en.wikipedia.org/wiki/Calling_Name_Presentation)
         * Next ID: 2
         * </pre>
         * <p>
         * Protobuf type {@code com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo, Builder> implements
                // @@protoc_insertion_point(builder_implements:com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo)
                com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfoOrBuilder {
            // Construct using com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <code>optional string name = 1;</code>
             */
            public boolean hasName() {
                return instance.hasName();
            }

            /**
             * <code>optional string name = 1;</code>
             */
            public java.lang.String getName() {
                return instance.getName();
            }

            /**
             * <code>optional string name = 1;</code>
             */
            public Builder setName(
                    java.lang.String value) {
                copyOnWrite();
                instance.setName(value);
                return this;
            }

            /**
             * <code>optional string name = 1;</code>
             */
            public com.google.protobuf.ByteString
            getNameBytes() {
                return instance.getNameBytes();
            }

            /**
             * <code>optional string name = 1;</code>
             */
            public Builder setNameBytes(
                    com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setNameBytes(value);
                return this;
            }

            /**
             * <code>optional string name = 1;</code>
             */
            public Builder clearName() {
                copyOnWrite();
                instance.clearName();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo)
        }
    }

    /**
     * <pre>
     * Information obtained via Cequint
     * Next ID: 4
     * </pre>
     * <p>
     * Protobuf type {@code com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo}
     */
    public static final class CequintInfo extends
            com.google.protobuf.GeneratedMessageLite<
                    CequintInfo, CequintInfo.Builder> implements
            // @@protoc_insertion_point(message_implements:com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo)
            CequintInfoOrBuilder {
        public static final int NAME_FIELD_NUMBER = 1;
        public static final int GEOLOCATION_FIELD_NUMBER = 2;
        public static final int PHOTO_URI_FIELD_NUMBER = 3;
        // @@protoc_insertion_point(class_scope:com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo)
        private static final com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo DEFAULT_INSTANCE;
        private static volatile com.google.protobuf.Parser<CequintInfo> PARSER;

        static {
            DEFAULT_INSTANCE = new CequintInfo();
            DEFAULT_INSTANCE.makeImmutable();
        }

        private int bitField0_;
        private java.lang.String name_;
        private java.lang.String geolocation_;
        private java.lang.String photoUri_;

        private CequintInfo() {
            name_ = "";
            geolocation_ = "";
            photoUri_ = "";
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<CequintInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }

        /**
         * <code>optional string name = 1;</code>
         */
        public boolean hasName() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>optional string name = 1;</code>
         */
        public java.lang.String getName() {
            return name_;
        }

        /**
         * <code>optional string name = 1;</code>
         */
        private void setName(
                java.lang.String value) {
            if (value == null) {
                throw new NullPointerException();
            }
            bitField0_ |= 0x00000001;
            name_ = value;
        }

        /**
         * <code>optional string name = 1;</code>
         */
        public com.google.protobuf.ByteString
        getNameBytes() {
            return com.google.protobuf.ByteString.copyFromUtf8(name_);
        }

        /**
         * <code>optional string name = 1;</code>
         */
        private void setNameBytes(
                com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            bitField0_ |= 0x00000001;
            name_ = value.toStringUtf8();
        }

        /**
         * <code>optional string name = 1;</code>
         */
        private void clearName() {
            bitField0_ = (bitField0_ & ~0x00000001);
            name_ = getDefaultInstance().getName();
        }

        /**
         * <pre>
         * Description of the geolocation (e.g., "Mountain View, CA")
         * </pre>
         *
         * <code>optional string geolocation = 2;</code>
         */
        public boolean hasGeolocation() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <pre>
         * Description of the geolocation (e.g., "Mountain View, CA")
         * </pre>
         *
         * <code>optional string geolocation = 2;</code>
         */
        public java.lang.String getGeolocation() {
            return geolocation_;
        }

        /**
         * <pre>
         * Description of the geolocation (e.g., "Mountain View, CA")
         * </pre>
         *
         * <code>optional string geolocation = 2;</code>
         */
        private void setGeolocation(
                java.lang.String value) {
            if (value == null) {
                throw new NullPointerException();
            }
            bitField0_ |= 0x00000002;
            geolocation_ = value;
        }

        /**
         * <pre>
         * Description of the geolocation (e.g., "Mountain View, CA")
         * </pre>
         *
         * <code>optional string geolocation = 2;</code>
         */
        public com.google.protobuf.ByteString
        getGeolocationBytes() {
            return com.google.protobuf.ByteString.copyFromUtf8(geolocation_);
        }

        /**
         * <pre>
         * Description of the geolocation (e.g., "Mountain View, CA")
         * </pre>
         *
         * <code>optional string geolocation = 2;</code>
         */
        private void setGeolocationBytes(
                com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            bitField0_ |= 0x00000002;
            geolocation_ = value.toStringUtf8();
        }

        /**
         * <pre>
         * Description of the geolocation (e.g., "Mountain View, CA")
         * </pre>
         *
         * <code>optional string geolocation = 2;</code>
         */
        private void clearGeolocation() {
            bitField0_ = (bitField0_ & ~0x00000002);
            geolocation_ = getDefaultInstance().getGeolocation();
        }

        /**
         * <code>optional string photo_uri = 3;</code>
         */
        public boolean hasPhotoUri() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <code>optional string photo_uri = 3;</code>
         */
        public java.lang.String getPhotoUri() {
            return photoUri_;
        }

        /**
         * <code>optional string photo_uri = 3;</code>
         */
        private void setPhotoUri(
                java.lang.String value) {
            if (value == null) {
                throw new NullPointerException();
            }
            bitField0_ |= 0x00000004;
            photoUri_ = value;
        }

        /**
         * <code>optional string photo_uri = 3;</code>
         */
        public com.google.protobuf.ByteString
        getPhotoUriBytes() {
            return com.google.protobuf.ByteString.copyFromUtf8(photoUri_);
        }

        /**
         * <code>optional string photo_uri = 3;</code>
         */
        private void setPhotoUriBytes(
                com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            bitField0_ |= 0x00000004;
            photoUri_ = value.toStringUtf8();
        }

        /**
         * <code>optional string photo_uri = 3;</code>
         */
        private void clearPhotoUri() {
            bitField0_ = (bitField0_ & ~0x00000004);
            photoUri_ = getDefaultInstance().getPhotoUri();
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeString(1, getName());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeString(2, getGeolocation());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeString(3, getPhotoUri());
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeStringSize(1, getName());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeStringSize(2, getGeolocation());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeStringSize(3, getPhotoUri());
            }
            size += unknownFields.getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo other = (com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo) arg1;
                    name_ = visitor.visitString(
                            hasName(), name_,
                            other.hasName(), other.name_);
                    geolocation_ = visitor.visitString(
                            hasGeolocation(), geolocation_,
                            other.hasGeolocation(), other.geolocation_);
                    photoUri_ = visitor.visitString(
                            hasPhotoUri(), photoUri_,
                            other.hasPhotoUri(), other.photoUri_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                        bitField0_ |= other.bitField0_;
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!parseUnknownField(tag, input)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 10: {
                                    String s = input.readString();
                                    bitField0_ |= 0x00000001;
                                    name_ = s;
                                    break;
                                }
                                case 18: {
                                    String s = input.readString();
                                    bitField0_ |= 0x00000002;
                                    geolocation_ = s;
                                    break;
                                }
                                case 26: {
                                    String s = input.readString();
                                    bitField0_ |= 0x00000004;
                                    photoUri_ = s;
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    }
                }
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {
                        synchronized (com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo.class) {
                            if (PARSER == null) {
                                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                            }
                        }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }

        /**
         * <pre>
         * Information obtained via Cequint
         * Next ID: 4
         * </pre>
         * <p>
         * Protobuf type {@code com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo, Builder> implements
                // @@protoc_insertion_point(builder_implements:com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo)
                com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfoOrBuilder {
            // Construct using com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <code>optional string name = 1;</code>
             */
            public boolean hasName() {
                return instance.hasName();
            }

            /**
             * <code>optional string name = 1;</code>
             */
            public java.lang.String getName() {
                return instance.getName();
            }

            /**
             * <code>optional string name = 1;</code>
             */
            public Builder setName(
                    java.lang.String value) {
                copyOnWrite();
                instance.setName(value);
                return this;
            }

            /**
             * <code>optional string name = 1;</code>
             */
            public com.google.protobuf.ByteString
            getNameBytes() {
                return instance.getNameBytes();
            }

            /**
             * <code>optional string name = 1;</code>
             */
            public Builder setNameBytes(
                    com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setNameBytes(value);
                return this;
            }

            /**
             * <code>optional string name = 1;</code>
             */
            public Builder clearName() {
                copyOnWrite();
                instance.clearName();
                return this;
            }

            /**
             * <pre>
             * Description of the geolocation (e.g., "Mountain View, CA")
             * </pre>
             *
             * <code>optional string geolocation = 2;</code>
             */
            public boolean hasGeolocation() {
                return instance.hasGeolocation();
            }

            /**
             * <pre>
             * Description of the geolocation (e.g., "Mountain View, CA")
             * </pre>
             *
             * <code>optional string geolocation = 2;</code>
             */
            public java.lang.String getGeolocation() {
                return instance.getGeolocation();
            }

            /**
             * <pre>
             * Description of the geolocation (e.g., "Mountain View, CA")
             * </pre>
             *
             * <code>optional string geolocation = 2;</code>
             */
            public Builder setGeolocation(
                    java.lang.String value) {
                copyOnWrite();
                instance.setGeolocation(value);
                return this;
            }

            /**
             * <pre>
             * Description of the geolocation (e.g., "Mountain View, CA")
             * </pre>
             *
             * <code>optional string geolocation = 2;</code>
             */
            public com.google.protobuf.ByteString
            getGeolocationBytes() {
                return instance.getGeolocationBytes();
            }

            /**
             * <pre>
             * Description of the geolocation (e.g., "Mountain View, CA")
             * </pre>
             *
             * <code>optional string geolocation = 2;</code>
             */
            public Builder setGeolocationBytes(
                    com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setGeolocationBytes(value);
                return this;
            }

            /**
             * <pre>
             * Description of the geolocation (e.g., "Mountain View, CA")
             * </pre>
             *
             * <code>optional string geolocation = 2;</code>
             */
            public Builder clearGeolocation() {
                copyOnWrite();
                instance.clearGeolocation();
                return this;
            }

            /**
             * <code>optional string photo_uri = 3;</code>
             */
            public boolean hasPhotoUri() {
                return instance.hasPhotoUri();
            }

            /**
             * <code>optional string photo_uri = 3;</code>
             */
            public java.lang.String getPhotoUri() {
                return instance.getPhotoUri();
            }

            /**
             * <code>optional string photo_uri = 3;</code>
             */
            public Builder setPhotoUri(
                    java.lang.String value) {
                copyOnWrite();
                instance.setPhotoUri(value);
                return this;
            }

            /**
             * <code>optional string photo_uri = 3;</code>
             */
            public com.google.protobuf.ByteString
            getPhotoUriBytes() {
                return instance.getPhotoUriBytes();
            }

            /**
             * <code>optional string photo_uri = 3;</code>
             */
            public Builder setPhotoUriBytes(
                    com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setPhotoUriBytes(value);
                return this;
            }

            /**
             * <code>optional string photo_uri = 3;</code>
             */
            public Builder clearPhotoUri() {
                copyOnWrite();
                instance.clearPhotoUri();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo)
        }
    }

    /**
     * <pre>
     * Message indicating whether a number is an emergency number.
     * Next ID: 2
     * </pre>
     * <p>
     * Protobuf type {@code com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo}
     */
    public static final class EmergencyInfo extends
            com.google.protobuf.GeneratedMessageLite<
                    EmergencyInfo, EmergencyInfo.Builder> implements
            // @@protoc_insertion_point(message_implements:com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo)
            EmergencyInfoOrBuilder {
        public static final int IS_EMERGENCY_NUMBER_FIELD_NUMBER = 1;
        // @@protoc_insertion_point(class_scope:com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo)
        private static final com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo DEFAULT_INSTANCE;
        private static volatile com.google.protobuf.Parser<EmergencyInfo> PARSER;

        static {
            DEFAULT_INSTANCE = new EmergencyInfo();
            DEFAULT_INSTANCE.makeImmutable();
        }

        private int bitField0_;
        private boolean isEmergencyNumber_;

        private EmergencyInfo() {
            isEmergencyNumber_ = false;
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<EmergencyInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }

        /**
         * <code>optional bool is_emergency_number = 1;</code>
         */
        public boolean hasIsEmergencyNumber() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>optional bool is_emergency_number = 1;</code>
         */
        public boolean getIsEmergencyNumber() {
            return isEmergencyNumber_;
        }

        /**
         * <code>optional bool is_emergency_number = 1;</code>
         */
        private void setIsEmergencyNumber(boolean value) {
            bitField0_ |= 0x00000001;
            isEmergencyNumber_ = value;
        }

        /**
         * <code>optional bool is_emergency_number = 1;</code>
         */
        private void clearIsEmergencyNumber() {
            bitField0_ = (bitField0_ & ~0x00000001);
            isEmergencyNumber_ = false;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeBool(1, isEmergencyNumber_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(1, isEmergencyNumber_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo other = (com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo) arg1;
                    isEmergencyNumber_ = visitor.visitBoolean(
                            hasIsEmergencyNumber(), isEmergencyNumber_,
                            other.hasIsEmergencyNumber(), other.isEmergencyNumber_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                        bitField0_ |= other.bitField0_;
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!parseUnknownField(tag, input)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 8: {
                                    bitField0_ |= 0x00000001;
                                    isEmergencyNumber_ = input.readBool();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    }
                }
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {
                        synchronized (com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo.class) {
                            if (PARSER == null) {
                                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                            }
                        }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }

        /**
         * <pre>
         * Message indicating whether a number is an emergency number.
         * Next ID: 2
         * </pre>
         * <p>
         * Protobuf type {@code com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo, Builder> implements
                // @@protoc_insertion_point(builder_implements:com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo)
                com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfoOrBuilder {
            // Construct using com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <code>optional bool is_emergency_number = 1;</code>
             */
            public boolean hasIsEmergencyNumber() {
                return instance.hasIsEmergencyNumber();
            }

            /**
             * <code>optional bool is_emergency_number = 1;</code>
             */
            public boolean getIsEmergencyNumber() {
                return instance.getIsEmergencyNumber();
            }

            /**
             * <code>optional bool is_emergency_number = 1;</code>
             */
            public Builder setIsEmergencyNumber(boolean value) {
                copyOnWrite();
                instance.setIsEmergencyNumber(value);
                return this;
            }

            /**
             * <code>optional bool is_emergency_number = 1;</code>
             */
            public Builder clearIsEmergencyNumber() {
                copyOnWrite();
                instance.clearIsEmergencyNumber();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo)
        }
    }

    /**
     * <pre>
     * Information cached in the old calllog
     * </pre>
     * <p>
     * Protobuf type {@code com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo}
     */
    public static final class MigratedInfo extends
            com.google.protobuf.GeneratedMessageLite<
                    MigratedInfo, MigratedInfo.Builder> implements
            // @@protoc_insertion_point(message_implements:com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo)
            MigratedInfoOrBuilder {
        public static final int NAME_FIELD_NUMBER = 1;
        public static final int LABEL_FIELD_NUMBER = 2;
        public static final int PHOTO_URI_FIELD_NUMBER = 3;
        public static final int IS_BUSINESS_FIELD_NUMBER = 4;
        public static final int SOURCE_TYPE_FIELD_NUMBER = 5;
        // @@protoc_insertion_point(class_scope:com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo)
        private static final com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo DEFAULT_INSTANCE;
        private static volatile com.google.protobuf.Parser<MigratedInfo> PARSER;

        static {
            DEFAULT_INSTANCE = new MigratedInfo();
            DEFAULT_INSTANCE.makeImmutable();
        }

        private int bitField0_;
        private java.lang.String name_;
        private java.lang.String label_;
        private java.lang.String photoUri_;
        private boolean isBusiness_;
        private int sourceType_;

        private MigratedInfo() {
            name_ = "";
            label_ = "";
            photoUri_ = "";
            isBusiness_ = false;
            sourceType_ = 0;
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<MigratedInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }

        /**
         * <pre>
         * The display name
         * </pre>
         *
         * <code>optional string name = 1;</code>
         */
        public boolean hasName() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <pre>
         * The display name
         * </pre>
         *
         * <code>optional string name = 1;</code>
         */
        public java.lang.String getName() {
            return name_;
        }

        /**
         * <pre>
         * The display name
         * </pre>
         *
         * <code>optional string name = 1;</code>
         */
        private void setName(
                java.lang.String value) {
            if (value == null) {
                throw new NullPointerException();
            }
            bitField0_ |= 0x00000001;
            name_ = value;
        }

        /**
         * <pre>
         * The display name
         * </pre>
         *
         * <code>optional string name = 1;</code>
         */
        public com.google.protobuf.ByteString
        getNameBytes() {
            return com.google.protobuf.ByteString.copyFromUtf8(name_);
        }

        /**
         * <pre>
         * The display name
         * </pre>
         *
         * <code>optional string name = 1;</code>
         */
        private void setNameBytes(
                com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            bitField0_ |= 0x00000001;
            name_ = value.toStringUtf8();
        }

        /**
         * <pre>
         * The display name
         * </pre>
         *
         * <code>optional string name = 1;</code>
         */
        private void clearName() {
            bitField0_ = (bitField0_ & ~0x00000001);
            name_ = getDefaultInstance().getName();
        }

        /**
         * <pre>
         * Display label, i.e. "Home", "Mobile"
         * </pre>
         *
         * <code>optional string label = 2;</code>
         */
        public boolean hasLabel() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <pre>
         * Display label, i.e. "Home", "Mobile"
         * </pre>
         *
         * <code>optional string label = 2;</code>
         */
        public java.lang.String getLabel() {
            return label_;
        }

        /**
         * <pre>
         * Display label, i.e. "Home", "Mobile"
         * </pre>
         *
         * <code>optional string label = 2;</code>
         */
        private void setLabel(
                java.lang.String value) {
            if (value == null) {
                throw new NullPointerException();
            }
            bitField0_ |= 0x00000002;
            label_ = value;
        }

        /**
         * <pre>
         * Display label, i.e. "Home", "Mobile"
         * </pre>
         *
         * <code>optional string label = 2;</code>
         */
        public com.google.protobuf.ByteString
        getLabelBytes() {
            return com.google.protobuf.ByteString.copyFromUtf8(label_);
        }

        /**
         * <pre>
         * Display label, i.e. "Home", "Mobile"
         * </pre>
         *
         * <code>optional string label = 2;</code>
         */
        private void setLabelBytes(
                com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            bitField0_ |= 0x00000002;
            label_ = value.toStringUtf8();
        }

        /**
         * <pre>
         * Display label, i.e. "Home", "Mobile"
         * </pre>
         *
         * <code>optional string label = 2;</code>
         */
        private void clearLabel() {
            bitField0_ = (bitField0_ & ~0x00000002);
            label_ = getDefaultInstance().getLabel();
        }

        /**
         * <code>optional string photo_uri = 3;</code>
         */
        public boolean hasPhotoUri() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <code>optional string photo_uri = 3;</code>
         */
        public java.lang.String getPhotoUri() {
            return photoUri_;
        }

        /**
         * <code>optional string photo_uri = 3;</code>
         */
        private void setPhotoUri(
                java.lang.String value) {
            if (value == null) {
                throw new NullPointerException();
            }
            bitField0_ |= 0x00000004;
            photoUri_ = value;
        }

        /**
         * <code>optional string photo_uri = 3;</code>
         */
        public com.google.protobuf.ByteString
        getPhotoUriBytes() {
            return com.google.protobuf.ByteString.copyFromUtf8(photoUri_);
        }

        /**
         * <code>optional string photo_uri = 3;</code>
         */
        private void setPhotoUriBytes(
                com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            bitField0_ |= 0x00000004;
            photoUri_ = value.toStringUtf8();
        }

        /**
         * <code>optional string photo_uri = 3;</code>
         */
        private void clearPhotoUri() {
            bitField0_ = (bitField0_ & ~0x00000004);
            photoUri_ = getDefaultInstance().getPhotoUri();
        }

        /**
         * <code>optional bool is_business = 4;</code>
         */
        public boolean hasIsBusiness() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        /**
         * <code>optional bool is_business = 4;</code>
         */
        public boolean getIsBusiness() {
            return isBusiness_;
        }

        /**
         * <code>optional bool is_business = 4;</code>
         */
        private void setIsBusiness(boolean value) {
            bitField0_ |= 0x00000008;
            isBusiness_ = value;
        }

        /**
         * <code>optional bool is_business = 4;</code>
         */
        private void clearIsBusiness() {
            bitField0_ = (bitField0_ & ~0x00000008);
            isBusiness_ = false;
        }

        /**
         * <pre>
         * ContactSource.Type
         * </pre>
         *
         * <code>optional int32 source_type = 5;</code>
         */
        public boolean hasSourceType() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
        }

        /**
         * <pre>
         * ContactSource.Type
         * </pre>
         *
         * <code>optional int32 source_type = 5;</code>
         */
        public int getSourceType() {
            return sourceType_;
        }

        /**
         * <pre>
         * ContactSource.Type
         * </pre>
         *
         * <code>optional int32 source_type = 5;</code>
         */
        private void setSourceType(int value) {
            bitField0_ |= 0x00000010;
            sourceType_ = value;
        }

        /**
         * <pre>
         * ContactSource.Type
         * </pre>
         *
         * <code>optional int32 source_type = 5;</code>
         */
        private void clearSourceType() {
            bitField0_ = (bitField0_ & ~0x00000010);
            sourceType_ = 0;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeString(1, getName());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeString(2, getLabel());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeString(3, getPhotoUri());
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeBool(4, isBusiness_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeInt32(5, sourceType_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeStringSize(1, getName());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeStringSize(2, getLabel());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeStringSize(3, getPhotoUri());
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(4, isBusiness_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(5, sourceType_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo other = (com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo) arg1;
                    name_ = visitor.visitString(
                            hasName(), name_,
                            other.hasName(), other.name_);
                    label_ = visitor.visitString(
                            hasLabel(), label_,
                            other.hasLabel(), other.label_);
                    photoUri_ = visitor.visitString(
                            hasPhotoUri(), photoUri_,
                            other.hasPhotoUri(), other.photoUri_);
                    isBusiness_ = visitor.visitBoolean(
                            hasIsBusiness(), isBusiness_,
                            other.hasIsBusiness(), other.isBusiness_);
                    sourceType_ = visitor.visitInt(
                            hasSourceType(), sourceType_,
                            other.hasSourceType(), other.sourceType_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                        bitField0_ |= other.bitField0_;
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!parseUnknownField(tag, input)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 10: {
                                    String s = input.readString();
                                    bitField0_ |= 0x00000001;
                                    name_ = s;
                                    break;
                                }
                                case 18: {
                                    String s = input.readString();
                                    bitField0_ |= 0x00000002;
                                    label_ = s;
                                    break;
                                }
                                case 26: {
                                    String s = input.readString();
                                    bitField0_ |= 0x00000004;
                                    photoUri_ = s;
                                    break;
                                }
                                case 32: {
                                    bitField0_ |= 0x00000008;
                                    isBusiness_ = input.readBool();
                                    break;
                                }
                                case 40: {
                                    bitField0_ |= 0x00000010;
                                    sourceType_ = input.readInt32();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    }
                }
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {
                        synchronized (com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo.class) {
                            if (PARSER == null) {
                                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                            }
                        }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }

        /**
         * <pre>
         * Information cached in the old calllog
         * </pre>
         * <p>
         * Protobuf type {@code com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo, Builder> implements
                // @@protoc_insertion_point(builder_implements:com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo)
                com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfoOrBuilder {
            // Construct using com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             * The display name
             * </pre>
             *
             * <code>optional string name = 1;</code>
             */
            public boolean hasName() {
                return instance.hasName();
            }

            /**
             * <pre>
             * The display name
             * </pre>
             *
             * <code>optional string name = 1;</code>
             */
            public java.lang.String getName() {
                return instance.getName();
            }

            /**
             * <pre>
             * The display name
             * </pre>
             *
             * <code>optional string name = 1;</code>
             */
            public Builder setName(
                    java.lang.String value) {
                copyOnWrite();
                instance.setName(value);
                return this;
            }

            /**
             * <pre>
             * The display name
             * </pre>
             *
             * <code>optional string name = 1;</code>
             */
            public com.google.protobuf.ByteString
            getNameBytes() {
                return instance.getNameBytes();
            }

            /**
             * <pre>
             * The display name
             * </pre>
             *
             * <code>optional string name = 1;</code>
             */
            public Builder setNameBytes(
                    com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setNameBytes(value);
                return this;
            }

            /**
             * <pre>
             * The display name
             * </pre>
             *
             * <code>optional string name = 1;</code>
             */
            public Builder clearName() {
                copyOnWrite();
                instance.clearName();
                return this;
            }

            /**
             * <pre>
             * Display label, i.e. "Home", "Mobile"
             * </pre>
             *
             * <code>optional string label = 2;</code>
             */
            public boolean hasLabel() {
                return instance.hasLabel();
            }

            /**
             * <pre>
             * Display label, i.e. "Home", "Mobile"
             * </pre>
             *
             * <code>optional string label = 2;</code>
             */
            public java.lang.String getLabel() {
                return instance.getLabel();
            }

            /**
             * <pre>
             * Display label, i.e. "Home", "Mobile"
             * </pre>
             *
             * <code>optional string label = 2;</code>
             */
            public Builder setLabel(
                    java.lang.String value) {
                copyOnWrite();
                instance.setLabel(value);
                return this;
            }

            /**
             * <pre>
             * Display label, i.e. "Home", "Mobile"
             * </pre>
             *
             * <code>optional string label = 2;</code>
             */
            public com.google.protobuf.ByteString
            getLabelBytes() {
                return instance.getLabelBytes();
            }

            /**
             * <pre>
             * Display label, i.e. "Home", "Mobile"
             * </pre>
             *
             * <code>optional string label = 2;</code>
             */
            public Builder setLabelBytes(
                    com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setLabelBytes(value);
                return this;
            }

            /**
             * <pre>
             * Display label, i.e. "Home", "Mobile"
             * </pre>
             *
             * <code>optional string label = 2;</code>
             */
            public Builder clearLabel() {
                copyOnWrite();
                instance.clearLabel();
                return this;
            }

            /**
             * <code>optional string photo_uri = 3;</code>
             */
            public boolean hasPhotoUri() {
                return instance.hasPhotoUri();
            }

            /**
             * <code>optional string photo_uri = 3;</code>
             */
            public java.lang.String getPhotoUri() {
                return instance.getPhotoUri();
            }

            /**
             * <code>optional string photo_uri = 3;</code>
             */
            public Builder setPhotoUri(
                    java.lang.String value) {
                copyOnWrite();
                instance.setPhotoUri(value);
                return this;
            }

            /**
             * <code>optional string photo_uri = 3;</code>
             */
            public com.google.protobuf.ByteString
            getPhotoUriBytes() {
                return instance.getPhotoUriBytes();
            }

            /**
             * <code>optional string photo_uri = 3;</code>
             */
            public Builder setPhotoUriBytes(
                    com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setPhotoUriBytes(value);
                return this;
            }

            /**
             * <code>optional string photo_uri = 3;</code>
             */
            public Builder clearPhotoUri() {
                copyOnWrite();
                instance.clearPhotoUri();
                return this;
            }

            /**
             * <code>optional bool is_business = 4;</code>
             */
            public boolean hasIsBusiness() {
                return instance.hasIsBusiness();
            }

            /**
             * <code>optional bool is_business = 4;</code>
             */
            public boolean getIsBusiness() {
                return instance.getIsBusiness();
            }

            /**
             * <code>optional bool is_business = 4;</code>
             */
            public Builder setIsBusiness(boolean value) {
                copyOnWrite();
                instance.setIsBusiness(value);
                return this;
            }

            /**
             * <code>optional bool is_business = 4;</code>
             */
            public Builder clearIsBusiness() {
                copyOnWrite();
                instance.clearIsBusiness();
                return this;
            }

            /**
             * <pre>
             * ContactSource.Type
             * </pre>
             *
             * <code>optional int32 source_type = 5;</code>
             */
            public boolean hasSourceType() {
                return instance.hasSourceType();
            }

            /**
             * <pre>
             * ContactSource.Type
             * </pre>
             *
             * <code>optional int32 source_type = 5;</code>
             */
            public int getSourceType() {
                return instance.getSourceType();
            }

            /**
             * <pre>
             * ContactSource.Type
             * </pre>
             *
             * <code>optional int32 source_type = 5;</code>
             */
            public Builder setSourceType(int value) {
                copyOnWrite();
                instance.setSourceType(value);
                return this;
            }

            /**
             * <pre>
             * ContactSource.Type
             * </pre>
             *
             * <code>optional int32 source_type = 5;</code>
             */
            public Builder clearSourceType() {
                copyOnWrite();
                instance.clearSourceType();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo)
        }
    }

    /**
     * <pre>
     * Contains information about a phone number, possibly from many sources.
     * This message is organized into sub-message fields where each one corresponds
     * to an implementation of PhoneLookup. For example, field
     * "cp2_info_in_default_directory" corresponds to class
     * Cp2DefaultDirectoryPhoneLookup, and class Cp2DefaultDirectoryPhoneLookup
     * alone is responsible for populating it.
     * Next ID: 11
     * </pre>
     * <p>
     * Protobuf type {@code com.fissy.dialer.phonelookup.PhoneLookupInfo}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageLite.Builder<
                    com.fissy.dialer.phonelookup.PhoneLookupInfo, Builder> implements
            // @@protoc_insertion_point(builder_implements:com.fissy.dialer.phonelookup.PhoneLookupInfo)
            com.fissy.dialer.phonelookup.PhoneLookupInfoOrBuilder {
        // Construct using com.fissy.dialer.phonelookup.PhoneLookupInfo.newBuilder()
        private Builder() {
            super(DEFAULT_INSTANCE);
        }


        /**
         * <pre>
         * Information about a contact in the default directory, retrieved via CP2.
         * Cp2DefaultDirectoryPhoneLookup is responsible for populating this field.
         * </pre>
         *
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info default_cp2_info = 1;</code>
         */
        public boolean hasDefaultCp2Info() {
            return instance.hasDefaultCp2Info();
        }

        /**
         * <pre>
         * Information about a contact in the default directory, retrieved via CP2.
         * Cp2DefaultDirectoryPhoneLookup is responsible for populating this field.
         * </pre>
         *
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info default_cp2_info = 1;</code>
         */
        public com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info getDefaultCp2Info() {
            return instance.getDefaultCp2Info();
        }

        /**
         * <pre>
         * Information about a contact in the default directory, retrieved via CP2.
         * Cp2DefaultDirectoryPhoneLookup is responsible for populating this field.
         * </pre>
         *
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info default_cp2_info = 1;</code>
         */
        public Builder setDefaultCp2Info(com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info value) {
            copyOnWrite();
            instance.setDefaultCp2Info(value);
            return this;
        }

        /**
         * <pre>
         * Information about a contact in the default directory, retrieved via CP2.
         * Cp2DefaultDirectoryPhoneLookup is responsible for populating this field.
         * </pre>
         *
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info default_cp2_info = 1;</code>
         */
        public Builder setDefaultCp2Info(
                com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Builder builderForValue) {
            copyOnWrite();
            instance.setDefaultCp2Info(builderForValue);
            return this;
        }

        /**
         * <pre>
         * Information about a contact in the default directory, retrieved via CP2.
         * Cp2DefaultDirectoryPhoneLookup is responsible for populating this field.
         * </pre>
         *
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info default_cp2_info = 1;</code>
         */
        public Builder mergeDefaultCp2Info(com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info value) {
            copyOnWrite();
            instance.mergeDefaultCp2Info(value);
            return this;
        }

        /**
         * <pre>
         * Information about a contact in the default directory, retrieved via CP2.
         * Cp2DefaultDirectoryPhoneLookup is responsible for populating this field.
         * </pre>
         *
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info default_cp2_info = 1;</code>
         */
        public Builder clearDefaultCp2Info() {
            copyOnWrite();
            instance.clearDefaultCp2Info();
            return this;
        }

        /**
         * <pre>
         * Information about a contact in other directories, retrieved via CP2.
         * Cp2ExtendedDirectoryPhoneLookup is responsible for populating this field.
         * </pre>
         *
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info extended_cp2_info = 6;</code>
         */
        public boolean hasExtendedCp2Info() {
            return instance.hasExtendedCp2Info();
        }

        /**
         * <pre>
         * Information about a contact in other directories, retrieved via CP2.
         * Cp2ExtendedDirectoryPhoneLookup is responsible for populating this field.
         * </pre>
         *
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info extended_cp2_info = 6;</code>
         */
        public com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info getExtendedCp2Info() {
            return instance.getExtendedCp2Info();
        }

        /**
         * <pre>
         * Information about a contact in other directories, retrieved via CP2.
         * Cp2ExtendedDirectoryPhoneLookup is responsible for populating this field.
         * </pre>
         *
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info extended_cp2_info = 6;</code>
         */
        public Builder setExtendedCp2Info(com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info value) {
            copyOnWrite();
            instance.setExtendedCp2Info(value);
            return this;
        }

        /**
         * <pre>
         * Information about a contact in other directories, retrieved via CP2.
         * Cp2ExtendedDirectoryPhoneLookup is responsible for populating this field.
         * </pre>
         *
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info extended_cp2_info = 6;</code>
         */
        public Builder setExtendedCp2Info(
                com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info.Builder builderForValue) {
            copyOnWrite();
            instance.setExtendedCp2Info(builderForValue);
            return this;
        }

        /**
         * <pre>
         * Information about a contact in other directories, retrieved via CP2.
         * Cp2ExtendedDirectoryPhoneLookup is responsible for populating this field.
         * </pre>
         *
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info extended_cp2_info = 6;</code>
         */
        public Builder mergeExtendedCp2Info(com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info value) {
            copyOnWrite();
            instance.mergeExtendedCp2Info(value);
            return this;
        }

        /**
         * <pre>
         * Information about a contact in other directories, retrieved via CP2.
         * Cp2ExtendedDirectoryPhoneLookup is responsible for populating this field.
         * </pre>
         *
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.Cp2Info extended_cp2_info = 6;</code>
         */
        public Builder clearExtendedCp2Info() {
            copyOnWrite();
            instance.clearExtendedCp2Info();
            return this;
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo spam_info = 2;</code>
         */
        public boolean hasSpamInfo() {
            return instance.hasSpamInfo();
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo spam_info = 2;</code>
         */
        public com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo getSpamInfo() {
            return instance.getSpamInfo();
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo spam_info = 2;</code>
         */
        public Builder setSpamInfo(com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo value) {
            copyOnWrite();
            instance.setSpamInfo(value);
            return this;
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo spam_info = 2;</code>
         */
        public Builder setSpamInfo(
                com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo.Builder builderForValue) {
            copyOnWrite();
            instance.setSpamInfo(builderForValue);
            return this;
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo spam_info = 2;</code>
         */
        public Builder mergeSpamInfo(com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo value) {
            copyOnWrite();
            instance.mergeSpamInfo(value);
            return this;
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.SpamInfo spam_info = 2;</code>
         */
        public Builder clearSpamInfo() {
            copyOnWrite();
            instance.clearSpamInfo();
            return this;
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo people_api_info = 3;</code>
         */
        public boolean hasPeopleApiInfo() {
            return instance.hasPeopleApiInfo();
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo people_api_info = 3;</code>
         */
        public com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo getPeopleApiInfo() {
            return instance.getPeopleApiInfo();
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo people_api_info = 3;</code>
         */
        public Builder setPeopleApiInfo(com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo value) {
            copyOnWrite();
            instance.setPeopleApiInfo(value);
            return this;
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo people_api_info = 3;</code>
         */
        public Builder setPeopleApiInfo(
                com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo.Builder builderForValue) {
            copyOnWrite();
            instance.setPeopleApiInfo(builderForValue);
            return this;
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo people_api_info = 3;</code>
         */
        public Builder mergePeopleApiInfo(com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo value) {
            copyOnWrite();
            instance.mergePeopleApiInfo(value);
            return this;
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.PeopleApiInfo people_api_info = 3;</code>
         */
        public Builder clearPeopleApiInfo() {
            copyOnWrite();
            instance.clearPeopleApiInfo();
            return this;
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo system_blocked_number_info = 4;</code>
         */
        public boolean hasSystemBlockedNumberInfo() {
            return instance.hasSystemBlockedNumberInfo();
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo system_blocked_number_info = 4;</code>
         */
        public com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo getSystemBlockedNumberInfo() {
            return instance.getSystemBlockedNumberInfo();
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo system_blocked_number_info = 4;</code>
         */
        public Builder setSystemBlockedNumberInfo(com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo value) {
            copyOnWrite();
            instance.setSystemBlockedNumberInfo(value);
            return this;
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo system_blocked_number_info = 4;</code>
         */
        public Builder setSystemBlockedNumberInfo(
                com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo.Builder builderForValue) {
            copyOnWrite();
            instance.setSystemBlockedNumberInfo(builderForValue);
            return this;
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo system_blocked_number_info = 4;</code>
         */
        public Builder mergeSystemBlockedNumberInfo(com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo value) {
            copyOnWrite();
            instance.mergeSystemBlockedNumberInfo(value);
            return this;
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.SystemBlockedNumberInfo system_blocked_number_info = 4;</code>
         */
        public Builder clearSystemBlockedNumberInfo() {
            copyOnWrite();
            instance.clearSystemBlockedNumberInfo();
            return this;
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo cnap_info = 7;</code>
         */
        public boolean hasCnapInfo() {
            return instance.hasCnapInfo();
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo cnap_info = 7;</code>
         */
        public com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo getCnapInfo() {
            return instance.getCnapInfo();
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo cnap_info = 7;</code>
         */
        public Builder setCnapInfo(com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo value) {
            copyOnWrite();
            instance.setCnapInfo(value);
            return this;
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo cnap_info = 7;</code>
         */
        public Builder setCnapInfo(
                com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo.Builder builderForValue) {
            copyOnWrite();
            instance.setCnapInfo(builderForValue);
            return this;
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo cnap_info = 7;</code>
         */
        public Builder mergeCnapInfo(com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo value) {
            copyOnWrite();
            instance.mergeCnapInfo(value);
            return this;
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.CnapInfo cnap_info = 7;</code>
         */
        public Builder clearCnapInfo() {
            copyOnWrite();
            instance.clearCnapInfo();
            return this;
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo cequint_info = 8;</code>
         */
        public boolean hasCequintInfo() {
            return instance.hasCequintInfo();
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo cequint_info = 8;</code>
         */
        public com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo getCequintInfo() {
            return instance.getCequintInfo();
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo cequint_info = 8;</code>
         */
        public Builder setCequintInfo(com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo value) {
            copyOnWrite();
            instance.setCequintInfo(value);
            return this;
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo cequint_info = 8;</code>
         */
        public Builder setCequintInfo(
                com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo.Builder builderForValue) {
            copyOnWrite();
            instance.setCequintInfo(builderForValue);
            return this;
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo cequint_info = 8;</code>
         */
        public Builder mergeCequintInfo(com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo value) {
            copyOnWrite();
            instance.mergeCequintInfo(value);
            return this;
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.CequintInfo cequint_info = 8;</code>
         */
        public Builder clearCequintInfo() {
            copyOnWrite();
            instance.clearCequintInfo();
            return this;
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo emergency_info = 9;</code>
         */
        public boolean hasEmergencyInfo() {
            return instance.hasEmergencyInfo();
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo emergency_info = 9;</code>
         */
        public com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo getEmergencyInfo() {
            return instance.getEmergencyInfo();
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo emergency_info = 9;</code>
         */
        public Builder setEmergencyInfo(com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo value) {
            copyOnWrite();
            instance.setEmergencyInfo(value);
            return this;
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo emergency_info = 9;</code>
         */
        public Builder setEmergencyInfo(
                com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo.Builder builderForValue) {
            copyOnWrite();
            instance.setEmergencyInfo(builderForValue);
            return this;
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo emergency_info = 9;</code>
         */
        public Builder mergeEmergencyInfo(com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo value) {
            copyOnWrite();
            instance.mergeEmergencyInfo(value);
            return this;
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.EmergencyInfo emergency_info = 9;</code>
         */
        public Builder clearEmergencyInfo() {
            copyOnWrite();
            instance.clearEmergencyInfo();
            return this;
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo migrated_info = 10;</code>
         */
        public boolean hasMigratedInfo() {
            return instance.hasMigratedInfo();
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo migrated_info = 10;</code>
         */
        public com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo getMigratedInfo() {
            return instance.getMigratedInfo();
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo migrated_info = 10;</code>
         */
        public Builder setMigratedInfo(com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo value) {
            copyOnWrite();
            instance.setMigratedInfo(value);
            return this;
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo migrated_info = 10;</code>
         */
        public Builder setMigratedInfo(
                com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo.Builder builderForValue) {
            copyOnWrite();
            instance.setMigratedInfo(builderForValue);
            return this;
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo migrated_info = 10;</code>
         */
        public Builder mergeMigratedInfo(com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo value) {
            copyOnWrite();
            instance.mergeMigratedInfo(value);
            return this;
        }

        /**
         * <code>optional .com.fissy.dialer.phonelookup.PhoneLookupInfo.MigratedInfo migrated_info = 10;</code>
         */
        public Builder clearMigratedInfo() {
            copyOnWrite();
            instance.clearMigratedInfo();
            return this;
        }

        // @@protoc_insertion_point(builder_scope:com.fissy.dialer.phonelookup.PhoneLookupInfo)
    }
}

